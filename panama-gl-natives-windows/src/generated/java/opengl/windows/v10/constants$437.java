// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$437 {

    static final FunctionDescriptor SetWindowDisplayAffinity$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetWindowDisplayAffinity$MH = RuntimeHelper.downcallHandle(
        "SetWindowDisplayAffinity",
        constants$437.SetWindowDisplayAffinity$FUNC, false
    );
    static final FunctionDescriptor BeginDeferWindowPos$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle BeginDeferWindowPos$MH = RuntimeHelper.downcallHandle(
        "BeginDeferWindowPos",
        constants$437.BeginDeferWindowPos$FUNC, false
    );
    static final FunctionDescriptor DeferWindowPos$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle DeferWindowPos$MH = RuntimeHelper.downcallHandle(
        "DeferWindowPos",
        constants$437.DeferWindowPos$FUNC, false
    );
    static final FunctionDescriptor EndDeferWindowPos$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle EndDeferWindowPos$MH = RuntimeHelper.downcallHandle(
        "EndDeferWindowPos",
        constants$437.EndDeferWindowPos$FUNC, false
    );
    static final FunctionDescriptor IsWindowVisible$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsWindowVisible$MH = RuntimeHelper.downcallHandle(
        "IsWindowVisible",
        constants$437.IsWindowVisible$FUNC, false
    );
    static final FunctionDescriptor IsIconic$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsIconic$MH = RuntimeHelper.downcallHandle(
        "IsIconic",
        constants$437.IsIconic$FUNC, false
    );
}


