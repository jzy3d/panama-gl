// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$216 {

    static final FunctionDescriptor CloseThreadpoolWork$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CloseThreadpoolWork$MH = RuntimeHelper.downcallHandle(
        "CloseThreadpoolWork",
        constants$216.CloseThreadpoolWork$FUNC, false
    );
    static final FunctionDescriptor CreateThreadpoolTimer$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateThreadpoolTimer$MH = RuntimeHelper.downcallHandle(
        "CreateThreadpoolTimer",
        constants$216.CreateThreadpoolTimer$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolTimer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetThreadpoolTimer$MH = RuntimeHelper.downcallHandle(
        "SetThreadpoolTimer",
        constants$216.SetThreadpoolTimer$FUNC, false
    );
    static final FunctionDescriptor IsThreadpoolTimerSet$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsThreadpoolTimerSet$MH = RuntimeHelper.downcallHandle(
        "IsThreadpoolTimerSet",
        constants$216.IsThreadpoolTimerSet$FUNC, false
    );
    static final FunctionDescriptor WaitForThreadpoolTimerCallbacks$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WaitForThreadpoolTimerCallbacks$MH = RuntimeHelper.downcallHandle(
        "WaitForThreadpoolTimerCallbacks",
        constants$216.WaitForThreadpoolTimerCallbacks$FUNC, false
    );
    static final FunctionDescriptor CloseThreadpoolTimer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CloseThreadpoolTimer$MH = RuntimeHelper.downcallHandle(
        "CloseThreadpoolTimer",
        constants$216.CloseThreadpoolTimer$FUNC, false
    );
}


