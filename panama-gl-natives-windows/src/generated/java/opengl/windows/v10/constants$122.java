// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$122 {

    static final FunctionDescriptor PTP_SIMPLE_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTP_SIMPLE_CALLBACK$MH = RuntimeHelper.downcallHandle(
        constants$122.PTP_SIMPLE_CALLBACK$FUNC, false
    );
    static final FunctionDescriptor PTP_CLEANUP_GROUP_CANCEL_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTP_CLEANUP_GROUP_CANCEL_CALLBACK$MH = RuntimeHelper.downcallHandle(
        constants$122.PTP_CLEANUP_GROUP_CANCEL_CALLBACK$FUNC, false
    );
    static final FunctionDescriptor TpInitializeCallbackEnviron$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle TpInitializeCallbackEnviron$MH = RuntimeHelper.downcallHandle(
        "TpInitializeCallbackEnviron",
        constants$122.TpInitializeCallbackEnviron$FUNC, false
    );
    static final FunctionDescriptor TpSetCallbackThreadpool$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle TpSetCallbackThreadpool$MH = RuntimeHelper.downcallHandle(
        "TpSetCallbackThreadpool",
        constants$122.TpSetCallbackThreadpool$FUNC, false
    );
}


