// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$162 {

    static final FunctionDescriptor HeapCompact$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle HeapCompact$MH = RuntimeHelper.downcallHandle(
        "HeapCompact",
        constants$162.HeapCompact$FUNC, false
    );
    static final FunctionDescriptor HeapSetInformation$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle HeapSetInformation$MH = RuntimeHelper.downcallHandle(
        "HeapSetInformation",
        constants$162.HeapSetInformation$FUNC, false
    );
    static final FunctionDescriptor HeapValidate$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle HeapValidate$MH = RuntimeHelper.downcallHandle(
        "HeapValidate",
        constants$162.HeapValidate$FUNC, false
    );
    static final FunctionDescriptor HeapSummary$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle HeapSummary$MH = RuntimeHelper.downcallHandle(
        "HeapSummary",
        constants$162.HeapSummary$FUNC, false
    );
    static final FunctionDescriptor GetProcessHeaps$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetProcessHeaps$MH = RuntimeHelper.downcallHandle(
        "GetProcessHeaps",
        constants$162.GetProcessHeaps$FUNC, false
    );
    static final FunctionDescriptor HeapLock$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle HeapLock$MH = RuntimeHelper.downcallHandle(
        "HeapLock",
        constants$162.HeapLock$FUNC, false
    );
}


