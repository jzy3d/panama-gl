// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public interface UILANGUAGE_ENUMPROCA {

    int apply(jdk.incubator.foreign.MemoryAddress x0, long x1);
    static NativeSymbol allocate(UILANGUAGE_ENUMPROCA fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(UILANGUAGE_ENUMPROCA.class, fi, constants$535.UILANGUAGE_ENUMPROCA$FUNC, "(Ljdk/incubator/foreign/MemoryAddress;J)I", scope);
    }
    static UILANGUAGE_ENUMPROCA ofAddress(MemoryAddress addr, ResourceScope scope) {
        NativeSymbol symbol = NativeSymbol.ofAddress("UILANGUAGE_ENUMPROCA::" + Long.toHexString(addr.toRawLongValue()), addr, scope);
return (jdk.incubator.foreign.MemoryAddress x0, long x1) -> {
            try {
                return (int)constants$535.UILANGUAGE_ENUMPROCA$MH.invokeExact(symbol, (jdk.incubator.foreign.Addressable)x0, x1);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


