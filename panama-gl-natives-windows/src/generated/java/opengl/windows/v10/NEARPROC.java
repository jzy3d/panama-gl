// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public interface NEARPROC {

    long apply();
    static NativeSymbol allocate(NEARPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(NEARPROC.class, fi, constants$126.NEARPROC$FUNC, "()J", scope);
    }
    static NEARPROC ofAddress(MemoryAddress addr, ResourceScope scope) {
        NativeSymbol symbol = NativeSymbol.ofAddress("NEARPROC::" + Long.toHexString(addr.toRawLongValue()), addr, scope);
return () -> {
            try {
                return (long)constants$126.NEARPROC$MH.invokeExact(symbol);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


