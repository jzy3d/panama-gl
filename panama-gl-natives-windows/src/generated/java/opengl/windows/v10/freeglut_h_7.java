// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class freeglut_h_7 extends freeglut_h_6 {

    public static int CAL_GREGORIAN_XLIT_FRENCH() {
        return (int)12L;
    }
    public static int CAL_PERSIAN() {
        return (int)22L;
    }
    public static int CAL_UMALQURA() {
        return (int)23L;
    }
    public static int LGRPID_WESTERN_EUROPE() {
        return (int)1L;
    }
    public static int LGRPID_CENTRAL_EUROPE() {
        return (int)2L;
    }
    public static int LGRPID_BALTIC() {
        return (int)3L;
    }
    public static int LGRPID_GREEK() {
        return (int)4L;
    }
    public static int LGRPID_CYRILLIC() {
        return (int)5L;
    }
    public static int LGRPID_TURKIC() {
        return (int)6L;
    }
    public static int LGRPID_TURKISH() {
        return (int)6L;
    }
    public static int LGRPID_JAPANESE() {
        return (int)7L;
    }
    public static int LGRPID_KOREAN() {
        return (int)8L;
    }
    public static int LGRPID_TRADITIONAL_CHINESE() {
        return (int)9L;
    }
    public static int LGRPID_SIMPLIFIED_CHINESE() {
        return (int)10L;
    }
    public static int LGRPID_THAI() {
        return (int)11L;
    }
    public static int LGRPID_HEBREW() {
        return (int)12L;
    }
    public static int LGRPID_ARABIC() {
        return (int)13L;
    }
    public static int LGRPID_VIETNAMESE() {
        return (int)14L;
    }
    public static int LGRPID_INDIC() {
        return (int)15L;
    }
    public static int LGRPID_GEORGIAN() {
        return (int)16L;
    }
    public static int LGRPID_ARMENIAN() {
        return (int)17L;
    }
    public static int MUI_LANGUAGE_ID() {
        return (int)4L;
    }
    public static int MUI_LANGUAGE_NAME() {
        return (int)8L;
    }
    public static int MUI_MERGE_SYSTEM_FALLBACK() {
        return (int)16L;
    }
    public static int MUI_MERGE_USER_FALLBACK() {
        return (int)32L;
    }
    public static int MUI_THREAD_LANGUAGES() {
        return (int)64L;
    }
    public static int MUI_CONSOLE_FILTER() {
        return (int)256L;
    }
    public static int MUI_COMPLEX_SCRIPT_FILTER() {
        return (int)512L;
    }
    public static int MUI_RESET_FILTERS() {
        return (int)1L;
    }
    public static int MUI_USER_PREFERRED_UI_LANGUAGES() {
        return (int)16L;
    }
    public static int MUI_USE_INSTALLED_LANGUAGES() {
        return (int)32L;
    }
    public static int MUI_USE_SEARCH_ALL_LANGUAGES() {
        return (int)64L;
    }
    public static int MUI_LANG_NEUTRAL_PE_FILE() {
        return (int)256L;
    }
    public static int MUI_NON_LANG_NEUTRAL_FILE() {
        return (int)512L;
    }
    public static int MUI_MACHINE_LANGUAGE_SETTINGS() {
        return (int)1024L;
    }
    public static int MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL() {
        return (int)1L;
    }
    public static int MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN() {
        return (int)2L;
    }
    public static int MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI() {
        return (int)4L;
    }
    public static int MUI_QUERY_TYPE() {
        return (int)1L;
    }
    public static int MUI_QUERY_CHECKSUM() {
        return (int)2L;
    }
    public static int MUI_QUERY_LANGUAGE_NAME() {
        return (int)4L;
    }
    public static int MUI_QUERY_RESOURCE_TYPES() {
        return (int)8L;
    }
    public static int MUI_FILEINFO_VERSION() {
        return (int)1L;
    }
    public static int MUI_FULL_LANGUAGE() {
        return (int)1L;
    }
    public static int MUI_PARTIAL_LANGUAGE() {
        return (int)2L;
    }
    public static int MUI_LIP_LANGUAGE() {
        return (int)4L;
    }
    public static int MUI_LANGUAGE_INSTALLED() {
        return (int)32L;
    }
    public static int MUI_LANGUAGE_LICENSED() {
        return (int)64L;
    }
    public static int IDN_ALLOW_UNASSIGNED() {
        return (int)1L;
    }
    public static int IDN_USE_STD3_ASCII_RULES() {
        return (int)2L;
    }
    public static int IDN_EMAIL_ADDRESS() {
        return (int)4L;
    }
    public static int IDN_RAW_PUNYCODE() {
        return (int)8L;
    }
    public static int VS_ALLOW_LATIN() {
        return (int)1L;
    }
    public static int GSS_ALLOW_INHERITED_COMMON() {
        return (int)1L;
    }
    public static int MUI_FORMAT_REG_COMPAT() {
        return (int)1L;
    }
    public static int MUI_FORMAT_INF_COMPAT() {
        return (int)2L;
    }
    public static int MUI_VERIFY_FILE_EXISTS() {
        return (int)4L;
    }
    public static int MUI_SKIP_STRING_CACHE() {
        return (int)8L;
    }
    public static int MUI_IMMUTABLE_LOOKUP() {
        return (int)16L;
    }
    public static int RIGHT_ALT_PRESSED() {
        return (int)1L;
    }
    public static int LEFT_ALT_PRESSED() {
        return (int)2L;
    }
    public static int RIGHT_CTRL_PRESSED() {
        return (int)4L;
    }
    public static int LEFT_CTRL_PRESSED() {
        return (int)8L;
    }
    public static int SHIFT_PRESSED() {
        return (int)16L;
    }
    public static int NUMLOCK_ON() {
        return (int)32L;
    }
    public static int SCROLLLOCK_ON() {
        return (int)64L;
    }
    public static int CAPSLOCK_ON() {
        return (int)128L;
    }
    public static int ENHANCED_KEY() {
        return (int)256L;
    }
    public static int NLS_DBCSCHAR() {
        return (int)65536L;
    }
    public static int NLS_ALPHANUMERIC() {
        return (int)0L;
    }
    public static int NLS_KATAKANA() {
        return (int)131072L;
    }
    public static int NLS_HIRAGANA() {
        return (int)262144L;
    }
    public static int NLS_ROMAN() {
        return (int)4194304L;
    }
    public static int NLS_IME_CONVERSION() {
        return (int)8388608L;
    }
    public static int ALTNUMPAD_BIT() {
        return (int)67108864L;
    }
    public static int NLS_IME_DISABLE() {
        return (int)536870912L;
    }
    public static int FROM_LEFT_1ST_BUTTON_PRESSED() {
        return (int)1L;
    }
    public static int RIGHTMOST_BUTTON_PRESSED() {
        return (int)2L;
    }
    public static int FROM_LEFT_2ND_BUTTON_PRESSED() {
        return (int)4L;
    }
    public static int FROM_LEFT_3RD_BUTTON_PRESSED() {
        return (int)8L;
    }
    public static int FROM_LEFT_4TH_BUTTON_PRESSED() {
        return (int)16L;
    }
    public static int MOUSE_MOVED() {
        return (int)1L;
    }
    public static int DOUBLE_CLICK() {
        return (int)2L;
    }
    public static int MOUSE_WHEELED() {
        return (int)4L;
    }
    public static int MOUSE_HWHEELED() {
        return (int)8L;
    }
    public static int KEY_EVENT() {
        return (int)1L;
    }
    public static int MOUSE_EVENT() {
        return (int)2L;
    }
    public static int WINDOW_BUFFER_SIZE_EVENT() {
        return (int)4L;
    }
    public static int MENU_EVENT() {
        return (int)8L;
    }
    public static int FOCUS_EVENT() {
        return (int)16L;
    }
    public static int ENABLE_PROCESSED_INPUT() {
        return (int)1L;
    }
    public static int ENABLE_LINE_INPUT() {
        return (int)2L;
    }
    public static int ENABLE_ECHO_INPUT() {
        return (int)4L;
    }
    public static int ENABLE_WINDOW_INPUT() {
        return (int)8L;
    }
    public static int ENABLE_MOUSE_INPUT() {
        return (int)16L;
    }
    public static int ENABLE_INSERT_MODE() {
        return (int)32L;
    }
    public static int ENABLE_QUICK_EDIT_MODE() {
        return (int)64L;
    }
    public static int ENABLE_EXTENDED_FLAGS() {
        return (int)128L;
    }
    public static int ENABLE_AUTO_POSITION() {
        return (int)256L;
    }
    public static int ENABLE_VIRTUAL_TERMINAL_INPUT() {
        return (int)512L;
    }
    public static int ENABLE_PROCESSED_OUTPUT() {
        return (int)1L;
    }
    public static int ENABLE_WRAP_AT_EOL_OUTPUT() {
        return (int)2L;
    }
    public static int ENABLE_VIRTUAL_TERMINAL_PROCESSING() {
        return (int)4L;
    }
    public static int DISABLE_NEWLINE_AUTO_RETURN() {
        return (int)8L;
    }
    public static int ENABLE_LVB_GRID_WORLDWIDE() {
        return (int)16L;
    }
    public static int CTRL_C_EVENT() {
        return (int)0L;
    }
    public static int CTRL_BREAK_EVENT() {
        return (int)1L;
    }
    public static int CTRL_CLOSE_EVENT() {
        return (int)2L;
    }
    public static int CTRL_LOGOFF_EVENT() {
        return (int)5L;
    }
    public static int CTRL_SHUTDOWN_EVENT() {
        return (int)6L;
    }
    public static int FOREGROUND_BLUE() {
        return (int)1L;
    }
    public static int FOREGROUND_GREEN() {
        return (int)2L;
    }
    public static int FOREGROUND_RED() {
        return (int)4L;
    }
    public static int FOREGROUND_INTENSITY() {
        return (int)8L;
    }
    public static int BACKGROUND_BLUE() {
        return (int)16L;
    }
    public static int BACKGROUND_GREEN() {
        return (int)32L;
    }
    public static int BACKGROUND_RED() {
        return (int)64L;
    }
    public static int BACKGROUND_INTENSITY() {
        return (int)128L;
    }
    public static int COMMON_LVB_LEADING_BYTE() {
        return (int)256L;
    }
    public static int COMMON_LVB_TRAILING_BYTE() {
        return (int)512L;
    }
    public static int COMMON_LVB_GRID_HORIZONTAL() {
        return (int)1024L;
    }
    public static int COMMON_LVB_GRID_LVERTICAL() {
        return (int)2048L;
    }
    public static int COMMON_LVB_GRID_RVERTICAL() {
        return (int)4096L;
    }
    public static int COMMON_LVB_REVERSE_VIDEO() {
        return (int)16384L;
    }
    public static int COMMON_LVB_UNDERSCORE() {
        return (int)32768L;
    }
    public static int COMMON_LVB_SBCSDBCS() {
        return (int)768L;
    }
    public static int CONSOLE_NO_SELECTION() {
        return (int)0L;
    }
    public static int CONSOLE_SELECTION_IN_PROGRESS() {
        return (int)1L;
    }
    public static int CONSOLE_SELECTION_NOT_EMPTY() {
        return (int)2L;
    }
    public static int CONSOLE_MOUSE_SELECTION() {
        return (int)4L;
    }
    public static int CONSOLE_MOUSE_DOWN() {
        return (int)8L;
    }
    public static int HISTORY_NO_DUP_FLAG() {
        return (int)1L;
    }
    public static int CONSOLE_FULLSCREEN() {
        return (int)1L;
    }
    public static int CONSOLE_FULLSCREEN_HARDWARE() {
        return (int)2L;
    }
    public static int CONSOLE_FULLSCREEN_MODE() {
        return (int)1L;
    }
    public static int CONSOLE_WINDOWED_MODE() {
        return (int)2L;
    }
    public static int CONSOLE_TEXTMODE_BUFFER() {
        return (int)1L;
    }
    public static int VS_VERSION_INFO() {
        return (int)1L;
    }
    public static int VS_USER_DEFINED() {
        return (int)100L;
    }
    public static int VFFF_ISSHAREDFILE() {
        return (int)1L;
    }
    public static int VFF_CURNEDEST() {
        return (int)1L;
    }
    public static int VFF_FILEINUSE() {
        return (int)2L;
    }
    public static int VFF_BUFFTOOSMALL() {
        return (int)4L;
    }
    public static int VIFF_FORCEINSTALL() {
        return (int)1L;
    }
    public static int VIFF_DONTDELETEOLD() {
        return (int)2L;
    }
    public static int FILE_VER_GET_LOCALISED() {
        return (int)1L;
    }
    public static int FILE_VER_GET_NEUTRAL() {
        return (int)2L;
    }
    public static int FILE_VER_GET_PREFETCHED() {
        return (int)4L;
    }
    public static int RRF_RT_REG_NONE() {
        return (int)1L;
    }
    public static int RRF_RT_REG_SZ() {
        return (int)2L;
    }
    public static int RRF_RT_REG_EXPAND_SZ() {
        return (int)4L;
    }
    public static int RRF_RT_REG_BINARY() {
        return (int)8L;
    }
    public static int RRF_RT_REG_DWORD() {
        return (int)16L;
    }
    public static int RRF_RT_REG_MULTI_SZ() {
        return (int)32L;
    }
    public static int RRF_RT_REG_QWORD() {
        return (int)64L;
    }
    public static int RRF_RT_ANY() {
        return (int)65535L;
    }
    public static int RRF_SUBKEY_WOW6464KEY() {
        return (int)65536L;
    }
    public static int RRF_SUBKEY_WOW6432KEY() {
        return (int)131072L;
    }
    public static int RRF_WOW64_MASK() {
        return (int)196608L;
    }
    public static int RRF_NOEXPAND() {
        return (int)268435456L;
    }
    public static int RRF_ZEROONFAILURE() {
        return (int)536870912L;
    }
    public static int REG_PROCESS_APPKEY() {
        return (int)1L;
    }
    public static int PROVIDER_KEEPS_VALUE_LENGTH() {
        return (int)1L;
    }
    public static int REG_MUI_STRING_TRUNCATE() {
        return (int)1L;
    }
    public static int REG_SECURE_CONNECTION() {
        return (int)1L;
    }
    public static int SHTDN_REASON_FLAG_COMMENT_REQUIRED() {
        return (int)16777216L;
    }
    public static int SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED() {
        return (int)33554432L;
    }
    public static int SHTDN_REASON_FLAG_CLEAN_UI() {
        return (int)67108864L;
    }
    public static int SHTDN_REASON_FLAG_DIRTY_UI() {
        return (int)134217728L;
    }
    public static int SHTDN_REASON_FLAG_MOBILE_UI_RESERVED() {
        return (int)268435456L;
    }
    public static int SHTDN_REASON_FLAG_USER_DEFINED() {
        return (int)1073741824L;
    }
    public static int SHTDN_REASON_MAJOR_OTHER() {
        return (int)0L;
    }
    public static int SHTDN_REASON_MAJOR_NONE() {
        return (int)0L;
    }
    public static int SHTDN_REASON_MAJOR_HARDWARE() {
        return (int)65536L;
    }
    public static int SHTDN_REASON_MAJOR_OPERATINGSYSTEM() {
        return (int)131072L;
    }
    public static int SHTDN_REASON_MAJOR_SOFTWARE() {
        return (int)196608L;
    }
    public static int SHTDN_REASON_MAJOR_APPLICATION() {
        return (int)262144L;
    }
    public static int SHTDN_REASON_MAJOR_SYSTEM() {
        return (int)327680L;
    }
    public static int SHTDN_REASON_MAJOR_POWER() {
        return (int)393216L;
    }
    public static int SHTDN_REASON_MAJOR_LEGACY_API() {
        return (int)458752L;
    }
    public static int SHTDN_REASON_MINOR_OTHER() {
        return (int)0L;
    }
    public static int SHTDN_REASON_MINOR_NONE() {
        return (int)255L;
    }
    public static int SHTDN_REASON_MINOR_MAINTENANCE() {
        return (int)1L;
    }
    public static int SHTDN_REASON_MINOR_INSTALLATION() {
        return (int)2L;
    }
    public static int SHTDN_REASON_MINOR_UPGRADE() {
        return (int)3L;
    }
    public static int SHTDN_REASON_MINOR_RECONFIG() {
        return (int)4L;
    }
    public static int SHTDN_REASON_MINOR_HUNG() {
        return (int)5L;
    }
    public static int SHTDN_REASON_MINOR_UNSTABLE() {
        return (int)6L;
    }
    public static int SHTDN_REASON_MINOR_DISK() {
        return (int)7L;
    }
    public static int SHTDN_REASON_MINOR_PROCESSOR() {
        return (int)8L;
    }
    public static int SHTDN_REASON_MINOR_NETWORKCARD() {
        return (int)9L;
    }
    public static int SHTDN_REASON_MINOR_POWER_SUPPLY() {
        return (int)10L;
    }
    public static int SHTDN_REASON_MINOR_CORDUNPLUGGED() {
        return (int)11L;
    }
    public static int SHTDN_REASON_MINOR_ENVIRONMENT() {
        return (int)12L;
    }
    public static int SHTDN_REASON_MINOR_HARDWARE_DRIVER() {
        return (int)13L;
    }
    public static int SHTDN_REASON_MINOR_OTHERDRIVER() {
        return (int)14L;
    }
    public static int SHTDN_REASON_MINOR_BLUESCREEN() {
        return (int)15L;
    }
    public static int SHTDN_REASON_MINOR_SERVICEPACK() {
        return (int)16L;
    }
    public static int SHTDN_REASON_MINOR_HOTFIX() {
        return (int)17L;
    }
    public static int SHTDN_REASON_MINOR_SECURITYFIX() {
        return (int)18L;
    }
    public static int SHTDN_REASON_MINOR_SECURITY() {
        return (int)19L;
    }
    public static int SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY() {
        return (int)20L;
    }
    public static int SHTDN_REASON_MINOR_WMI() {
        return (int)21L;
    }
    public static int SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL() {
        return (int)22L;
    }
    public static int SHTDN_REASON_MINOR_HOTFIX_UNINSTALL() {
        return (int)23L;
    }
    public static int SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL() {
        return (int)24L;
    }
    public static int SHTDN_REASON_MINOR_MMC() {
        return (int)25L;
    }
    public static int SHTDN_REASON_MINOR_SYSTEMRESTORE() {
        return (int)26L;
    }
    public static int SHTDN_REASON_MINOR_TERMSRV() {
        return (int)32L;
    }
    public static int SHTDN_REASON_MINOR_DC_PROMOTION() {
        return (int)33L;
    }
    public static int SHTDN_REASON_MINOR_DC_DEMOTION() {
        return (int)34L;
    }
    public static int MAX_REASON_NAME_LEN() {
        return (int)64L;
    }
    public static int MAX_REASON_DESC_LEN() {
        return (int)256L;
    }
    public static int MAX_REASON_BUGID_LEN() {
        return (int)32L;
    }
    public static int MAX_REASON_COMMENT_LEN() {
        return (int)512L;
    }
    public static int SHUTDOWN_TYPE_LEN() {
        return (int)32L;
    }
    public static int POLICY_SHOWREASONUI_NEVER() {
        return (int)0L;
    }
    public static int POLICY_SHOWREASONUI_ALWAYS() {
        return (int)1L;
    }
    public static int POLICY_SHOWREASONUI_WORKSTATIONONLY() {
        return (int)2L;
    }
    public static int POLICY_SHOWREASONUI_SERVERONLY() {
        return (int)3L;
    }
    public static int SNAPSHOT_POLICY_NEVER() {
        return (int)0L;
    }
    public static int SNAPSHOT_POLICY_ALWAYS() {
        return (int)1L;
    }
    public static int SNAPSHOT_POLICY_UNPLANNED() {
        return (int)2L;
    }
    public static int MAX_NUM_REASONS() {
        return (int)256L;
    }
    public static int SHUTDOWN_FORCE_OTHERS() {
        return (int)1L;
    }
    public static int SHUTDOWN_FORCE_SELF() {
        return (int)2L;
    }
    public static int SHUTDOWN_RESTART() {
        return (int)4L;
    }
    public static int SHUTDOWN_POWEROFF() {
        return (int)8L;
    }
    public static int SHUTDOWN_NOREBOOT() {
        return (int)16L;
    }
    public static int SHUTDOWN_GRACE_OVERRIDE() {
        return (int)32L;
    }
    public static int SHUTDOWN_INSTALL_UPDATES() {
        return (int)64L;
    }
    public static int SHUTDOWN_RESTARTAPPS() {
        return (int)128L;
    }
    public static int SHUTDOWN_SKIP_SVC_PRESHUTDOWN() {
        return (int)256L;
    }
    public static int SHUTDOWN_HYBRID() {
        return (int)512L;
    }
    public static int SHUTDOWN_RESTART_BOOTOPTIONS() {
        return (int)1024L;
    }
    public static int SHUTDOWN_SOFT_REBOOT() {
        return (int)2048L;
    }
    public static int SHUTDOWN_MOBILE_UI() {
        return (int)4096L;
    }
    public static int SHUTDOWN_ARSO() {
        return (int)8192L;
    }
    public static int WNNC_NET_MSNET() {
        return (int)65536L;
    }
    public static int WNNC_NET_SMB() {
        return (int)131072L;
    }
    public static int WNNC_NET_NETWARE() {
        return (int)196608L;
    }
    public static int WNNC_NET_VINES() {
        return (int)262144L;
    }
    public static int WNNC_NET_10NET() {
        return (int)327680L;
    }
    public static int WNNC_NET_LOCUS() {
        return (int)393216L;
    }
    public static int WNNC_NET_SUN_PC_NFS() {
        return (int)458752L;
    }
    public static int WNNC_NET_LANSTEP() {
        return (int)524288L;
    }
    public static int WNNC_NET_9TILES() {
        return (int)589824L;
    }
    public static int WNNC_NET_LANTASTIC() {
        return (int)655360L;
    }
    public static int WNNC_NET_AS400() {
        return (int)720896L;
    }
    public static int WNNC_NET_FTP_NFS() {
        return (int)786432L;
    }
    public static int WNNC_NET_PATHWORKS() {
        return (int)851968L;
    }
    public static int WNNC_NET_LIFENET() {
        return (int)917504L;
    }
    public static int WNNC_NET_POWERLAN() {
        return (int)983040L;
    }
    public static int WNNC_NET_BWNFS() {
        return (int)1048576L;
    }
    public static int WNNC_NET_COGENT() {
        return (int)1114112L;
    }
    public static int WNNC_NET_FARALLON() {
        return (int)1179648L;
    }
    public static int WNNC_NET_APPLETALK() {
        return (int)1245184L;
    }
    public static int WNNC_NET_INTERGRAPH() {
        return (int)1310720L;
    }
    public static int WNNC_NET_SYMFONET() {
        return (int)1376256L;
    }
    public static int WNNC_NET_CLEARCASE() {
        return (int)1441792L;
    }
    public static int WNNC_NET_FRONTIER() {
        return (int)1507328L;
    }
    public static int WNNC_NET_BMC() {
        return (int)1572864L;
    }
    public static int WNNC_NET_DCE() {
        return (int)1638400L;
    }
    public static int WNNC_NET_AVID() {
        return (int)1703936L;
    }
    public static int WNNC_NET_DOCUSPACE() {
        return (int)1769472L;
    }
    public static int WNNC_NET_MANGOSOFT() {
        return (int)1835008L;
    }
    public static int WNNC_NET_SERNET() {
        return (int)1900544L;
    }
    public static int WNNC_NET_RIVERFRONT1() {
        return (int)1966080L;
    }
    public static int WNNC_NET_RIVERFRONT2() {
        return (int)2031616L;
    }
    public static int WNNC_NET_DECORB() {
        return (int)2097152L;
    }
    public static int WNNC_NET_PROTSTOR() {
        return (int)2162688L;
    }
    public static int WNNC_NET_FJ_REDIR() {
        return (int)2228224L;
    }
    public static int WNNC_NET_DISTINCT() {
        return (int)2293760L;
    }
    public static int WNNC_NET_TWINS() {
        return (int)2359296L;
    }
    public static int WNNC_NET_RDR2SAMPLE() {
        return (int)2424832L;
    }
    public static int WNNC_NET_CSC() {
        return (int)2490368L;
    }
    public static int WNNC_NET_3IN1() {
        return (int)2555904L;
    }
    public static int WNNC_NET_EXTENDNET() {
        return (int)2686976L;
    }
    public static int WNNC_NET_STAC() {
        return (int)2752512L;
    }
    public static int WNNC_NET_FOXBAT() {
        return (int)2818048L;
    }
    public static int WNNC_NET_YAHOO() {
        return (int)2883584L;
    }
    public static int WNNC_NET_EXIFS() {
        return (int)2949120L;
    }
    public static int WNNC_NET_DAV() {
        return (int)3014656L;
    }
    public static int WNNC_NET_KNOWARE() {
        return (int)3080192L;
    }
    public static int WNNC_NET_OBJECT_DIRE() {
        return (int)3145728L;
    }
    public static int WNNC_NET_MASFAX() {
        return (int)3211264L;
    }
    public static int WNNC_NET_HOB_NFS() {
        return (int)3276800L;
    }
    public static int WNNC_NET_SHIVA() {
        return (int)3342336L;
    }
    public static int WNNC_NET_IBMAL() {
        return (int)3407872L;
    }
    public static int WNNC_NET_LOCK() {
        return (int)3473408L;
    }
    public static int WNNC_NET_TERMSRV() {
        return (int)3538944L;
    }
    public static int WNNC_NET_SRT() {
        return (int)3604480L;
    }
    public static int WNNC_NET_QUINCY() {
        return (int)3670016L;
    }
    public static int WNNC_NET_OPENAFS() {
        return (int)3735552L;
    }
    public static int WNNC_NET_AVID1() {
        return (int)3801088L;
    }
    public static int WNNC_NET_DFS() {
        return (int)3866624L;
    }
    public static int WNNC_NET_KWNP() {
        return (int)3932160L;
    }
    public static int WNNC_NET_ZENWORKS() {
        return (int)3997696L;
    }
    public static int WNNC_NET_DRIVEONWEB() {
        return (int)4063232L;
    }
    public static int WNNC_NET_VMWARE() {
        return (int)4128768L;
    }
    public static int WNNC_NET_RSFX() {
        return (int)4194304L;
    }
    public static int WNNC_NET_MFILES() {
        return (int)4259840L;
    }
    public static int WNNC_NET_MS_NFS() {
        return (int)4325376L;
    }
    public static int WNNC_NET_GOOGLE() {
        return (int)4390912L;
    }
    public static int WNNC_NET_NDFS() {
        return (int)4456448L;
    }
    public static int WNNC_NET_DOCUSHARE() {
        return (int)4521984L;
    }
    public static int WNNC_NET_AURISTOR_FS() {
        return (int)4587520L;
    }
    public static int WNNC_NET_SECUREAGENT() {
        return (int)4653056L;
    }
    public static int WNNC_NET_9P() {
        return (int)4718592L;
    }
    public static int RESOURCE_CONNECTED() {
        return (int)1L;
    }
    public static int RESOURCE_GLOBALNET() {
        return (int)2L;
    }
    public static int RESOURCE_REMEMBERED() {
        return (int)3L;
    }
    public static int RESOURCE_RECENT() {
        return (int)4L;
    }
    public static int RESOURCE_CONTEXT() {
        return (int)5L;
    }
    public static int RESOURCETYPE_ANY() {
        return (int)0L;
    }
    public static int RESOURCETYPE_DISK() {
        return (int)1L;
    }
    public static int RESOURCETYPE_PRINT() {
        return (int)2L;
    }
    public static int RESOURCETYPE_RESERVED() {
        return (int)8L;
    }
    public static int RESOURCEUSAGE_CONNECTABLE() {
        return (int)1L;
    }
    public static int RESOURCEUSAGE_CONTAINER() {
        return (int)2L;
    }
    public static int RESOURCEUSAGE_NOLOCALDEVICE() {
        return (int)4L;
    }
    public static int RESOURCEUSAGE_SIBLING() {
        return (int)8L;
    }
    public static int RESOURCEUSAGE_ATTACHED() {
        return (int)16L;
    }
    public static int RESOURCEDISPLAYTYPE_GENERIC() {
        return (int)0L;
    }
    public static int RESOURCEDISPLAYTYPE_DOMAIN() {
        return (int)1L;
    }
    public static int RESOURCEDISPLAYTYPE_SERVER() {
        return (int)2L;
    }
    public static int RESOURCEDISPLAYTYPE_SHARE() {
        return (int)3L;
    }
    public static int RESOURCEDISPLAYTYPE_FILE() {
        return (int)4L;
    }
    public static int RESOURCEDISPLAYTYPE_GROUP() {
        return (int)5L;
    }
    public static int RESOURCEDISPLAYTYPE_NETWORK() {
        return (int)6L;
    }
    public static int RESOURCEDISPLAYTYPE_ROOT() {
        return (int)7L;
    }
    public static int RESOURCEDISPLAYTYPE_SHAREADMIN() {
        return (int)8L;
    }
    public static int RESOURCEDISPLAYTYPE_DIRECTORY() {
        return (int)9L;
    }
    public static int RESOURCEDISPLAYTYPE_TREE() {
        return (int)10L;
    }
    public static int RESOURCEDISPLAYTYPE_NDSCONTAINER() {
        return (int)11L;
    }
    public static int NETPROPERTY_PERSISTENT() {
        return (int)1L;
    }
    public static int CONNECT_UPDATE_PROFILE() {
        return (int)1L;
    }
    public static int CONNECT_UPDATE_RECENT() {
        return (int)2L;
    }
    public static int CONNECT_TEMPORARY() {
        return (int)4L;
    }
    public static int CONNECT_INTERACTIVE() {
        return (int)8L;
    }
    public static int CONNECT_PROMPT() {
        return (int)16L;
    }
    public static int CONNECT_NEED_DRIVE() {
        return (int)32L;
    }
    public static int CONNECT_REFCOUNT() {
        return (int)64L;
    }
    public static int CONNECT_REDIRECT() {
        return (int)128L;
    }
    public static int CONNECT_LOCALDRIVE() {
        return (int)256L;
    }
    public static int CONNECT_CURRENT_MEDIA() {
        return (int)512L;
    }
    public static int CONNECT_DEFERRED() {
        return (int)1024L;
    }
    public static int CONNECT_COMMANDLINE() {
        return (int)2048L;
    }
    public static int CONNECT_CMD_SAVECRED() {
        return (int)4096L;
    }
    public static int CONNECT_CRED_RESET() {
        return (int)8192L;
    }
    public static int CONNECT_REQUIRE_INTEGRITY() {
        return (int)16384L;
    }
    public static int CONNECT_REQUIRE_PRIVACY() {
        return (int)32768L;
    }
    public static int CONNECT_WRITE_THROUGH_SEMANTICS() {
        return (int)65536L;
    }
    public static int CONNECT_COMPRESS_NETWORK_TRAFFIC() {
        return (int)131072L;
    }
    public static int CONNDLG_RO_PATH() {
        return (int)1L;
    }
    public static int CONNDLG_CONN_POINT() {
        return (int)2L;
    }
    public static int CONNDLG_USE_MRU() {
        return (int)4L;
    }
    public static int CONNDLG_HIDE_BOX() {
        return (int)8L;
    }
    public static int CONNDLG_PERSIST() {
        return (int)16L;
    }
    public static int CONNDLG_NOT_PERSIST() {
        return (int)32L;
    }
    public static int DISC_UPDATE_PROFILE() {
        return (int)1L;
    }
    public static int DISC_NO_FORCE() {
        return (int)64L;
    }
    public static int UNIVERSAL_NAME_INFO_LEVEL() {
        return (int)1L;
    }
    public static int REMOTE_NAME_INFO_LEVEL() {
        return (int)2L;
    }
    public static int WNFMT_MULTILINE() {
        return (int)1L;
    }
    public static int WNFMT_ABBREVIATED() {
        return (int)2L;
    }
    public static int WNFMT_INENUM() {
        return (int)16L;
    }
    public static int WNFMT_CONNECTION() {
        return (int)32L;
    }
    public static int NETINFO_DLL16() {
        return (int)1L;
    }
    public static int NETINFO_DISKRED() {
        return (int)4L;
    }
    public static int NETINFO_PRINTERRED() {
        return (int)8L;
    }
    public static int WNCON_FORNETCARD() {
        return (int)1L;
    }
    public static int WNCON_NOTROUTED() {
        return (int)2L;
    }
    public static int WNCON_SLOWLINK() {
        return (int)4L;
    }
    public static int WNCON_DYNAMIC() {
        return (int)8L;
    }
    public static int _STRALIGN_USE_SECURE_CRT() {
        return (int)1L;
    }
    public static int SERVICE_ACTIVE() {
        return (int)1L;
    }
    public static int SERVICE_INACTIVE() {
        return (int)2L;
    }
    public static int SERVICE_CONTROL_STOP() {
        return (int)1L;
    }
    public static int SERVICE_CONTROL_PAUSE() {
        return (int)2L;
    }
    public static int SERVICE_CONTROL_CONTINUE() {
        return (int)3L;
    }
    public static int SERVICE_CONTROL_INTERROGATE() {
        return (int)4L;
    }
    public static int SERVICE_CONTROL_SHUTDOWN() {
        return (int)5L;
    }
    public static int SERVICE_CONTROL_PARAMCHANGE() {
        return (int)6L;
    }
    public static int SERVICE_CONTROL_NETBINDADD() {
        return (int)7L;
    }
    public static int SERVICE_CONTROL_NETBINDREMOVE() {
        return (int)8L;
    }
    public static int SERVICE_CONTROL_NETBINDENABLE() {
        return (int)9L;
    }
    public static int SERVICE_CONTROL_NETBINDDISABLE() {
        return (int)10L;
    }
    public static int SERVICE_CONTROL_DEVICEEVENT() {
        return (int)11L;
    }
    public static int SERVICE_CONTROL_HARDWAREPROFILECHANGE() {
        return (int)12L;
    }
    public static int SERVICE_CONTROL_POWEREVENT() {
        return (int)13L;
    }
    public static int SERVICE_CONTROL_SESSIONCHANGE() {
        return (int)14L;
    }
    public static int SERVICE_CONTROL_PRESHUTDOWN() {
        return (int)15L;
    }
    public static int SERVICE_CONTROL_TIMECHANGE() {
        return (int)16L;
    }
    public static int SERVICE_CONTROL_TRIGGEREVENT() {
        return (int)32L;
    }
    public static int SERVICE_CONTROL_LOWRESOURCES() {
        return (int)96L;
    }
    public static int SERVICE_CONTROL_SYSTEMLOWRESOURCES() {
        return (int)97L;
    }
    public static int SERVICE_STOPPED() {
        return (int)1L;
    }
    public static int SERVICE_START_PENDING() {
        return (int)2L;
    }
    public static int SERVICE_STOP_PENDING() {
        return (int)3L;
    }
    public static int SERVICE_RUNNING() {
        return (int)4L;
    }
    public static int SERVICE_CONTINUE_PENDING() {
        return (int)5L;
    }
    public static int SERVICE_PAUSE_PENDING() {
        return (int)6L;
    }
    public static int SERVICE_PAUSED() {
        return (int)7L;
    }
    public static int SERVICE_ACCEPT_STOP() {
        return (int)1L;
    }
    public static int SERVICE_ACCEPT_PAUSE_CONTINUE() {
        return (int)2L;
    }
    public static int SERVICE_ACCEPT_SHUTDOWN() {
        return (int)4L;
    }
    public static int SERVICE_ACCEPT_PARAMCHANGE() {
        return (int)8L;
    }
    public static int SERVICE_ACCEPT_NETBINDCHANGE() {
        return (int)16L;
    }
    public static int SERVICE_ACCEPT_HARDWAREPROFILECHANGE() {
        return (int)32L;
    }
    public static int SERVICE_ACCEPT_POWEREVENT() {
        return (int)64L;
    }
    public static int SERVICE_ACCEPT_SESSIONCHANGE() {
        return (int)128L;
    }
    public static int SERVICE_ACCEPT_PRESHUTDOWN() {
        return (int)256L;
    }
    public static int SERVICE_ACCEPT_TIMECHANGE() {
        return (int)512L;
    }
    public static int SERVICE_ACCEPT_TRIGGEREVENT() {
        return (int)1024L;
    }
    public static int SERVICE_ACCEPT_USER_LOGOFF() {
        return (int)2048L;
    }
    public static int SERVICE_ACCEPT_LOWRESOURCES() {
        return (int)8192L;
    }
    public static int SERVICE_ACCEPT_SYSTEMLOWRESOURCES() {
        return (int)16384L;
    }
    public static int SC_MANAGER_CONNECT() {
        return (int)1L;
    }
    public static int SC_MANAGER_CREATE_SERVICE() {
        return (int)2L;
    }
    public static int SC_MANAGER_ENUMERATE_SERVICE() {
        return (int)4L;
    }
    public static int SC_MANAGER_LOCK() {
        return (int)8L;
    }
    public static int SC_MANAGER_QUERY_LOCK_STATUS() {
        return (int)16L;
    }
    public static int SC_MANAGER_MODIFY_BOOT_CONFIG() {
        return (int)32L;
    }
    public static int SERVICE_QUERY_CONFIG() {
        return (int)1L;
    }
    public static int SERVICE_CHANGE_CONFIG() {
        return (int)2L;
    }
    public static int SERVICE_QUERY_STATUS() {
        return (int)4L;
    }
    public static int SERVICE_ENUMERATE_DEPENDENTS() {
        return (int)8L;
    }
    public static int SERVICE_START() {
        return (int)16L;
    }
    public static int SERVICE_STOP() {
        return (int)32L;
    }
    public static int SERVICE_PAUSE_CONTINUE() {
        return (int)64L;
    }
    public static int SERVICE_INTERROGATE() {
        return (int)128L;
    }
    public static int SERVICE_USER_DEFINED_CONTROL() {
        return (int)256L;
    }
    public static int SERVICE_RUNS_IN_SYSTEM_PROCESS() {
        return (int)1L;
    }
    public static int SERVICE_CONFIG_DESCRIPTION() {
        return (int)1L;
    }
    public static int SERVICE_CONFIG_FAILURE_ACTIONS() {
        return (int)2L;
    }
    public static int SERVICE_CONFIG_DELAYED_AUTO_START_INFO() {
        return (int)3L;
    }
    public static int SERVICE_CONFIG_FAILURE_ACTIONS_FLAG() {
        return (int)4L;
    }
    public static int SERVICE_CONFIG_SERVICE_SID_INFO() {
        return (int)5L;
    }
    public static int SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO() {
        return (int)6L;
    }
    public static int SERVICE_CONFIG_PRESHUTDOWN_INFO() {
        return (int)7L;
    }
    public static int SERVICE_CONFIG_TRIGGER_INFO() {
        return (int)8L;
    }
    public static int SERVICE_CONFIG_PREFERRED_NODE() {
        return (int)9L;
    }
    public static int SERVICE_CONFIG_LAUNCH_PROTECTED() {
        return (int)12L;
    }
    public static int SERVICE_NOTIFY_STATUS_CHANGE_1() {
        return (int)1L;
    }
    public static int SERVICE_NOTIFY_STATUS_CHANGE_2() {
        return (int)2L;
    }
    public static int SERVICE_NOTIFY_STOPPED() {
        return (int)1L;
    }
    public static int SERVICE_NOTIFY_START_PENDING() {
        return (int)2L;
    }
    public static int SERVICE_NOTIFY_STOP_PENDING() {
        return (int)4L;
    }
    public static int SERVICE_NOTIFY_RUNNING() {
        return (int)8L;
    }
    public static int SERVICE_NOTIFY_CONTINUE_PENDING() {
        return (int)16L;
    }
    public static int SERVICE_NOTIFY_PAUSE_PENDING() {
        return (int)32L;
    }
    public static int SERVICE_NOTIFY_PAUSED() {
        return (int)64L;
    }
    public static int SERVICE_NOTIFY_CREATED() {
        return (int)128L;
    }
    public static int SERVICE_NOTIFY_DELETED() {
        return (int)256L;
    }
    public static int SERVICE_NOTIFY_DELETE_PENDING() {
        return (int)512L;
    }
    public static int SERVICE_STOP_REASON_FLAG_MIN() {
        return (int)0L;
    }
    public static int SERVICE_STOP_REASON_FLAG_UNPLANNED() {
        return (int)268435456L;
    }
    public static int SERVICE_STOP_REASON_FLAG_CUSTOM() {
        return (int)536870912L;
    }
    public static int SERVICE_STOP_REASON_FLAG_PLANNED() {
        return (int)1073741824L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_MIN() {
        return (int)0L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_OTHER() {
        return (int)65536L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_HARDWARE() {
        return (int)131072L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM() {
        return (int)196608L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_SOFTWARE() {
        return (int)262144L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_APPLICATION() {
        return (int)327680L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_NONE() {
        return (int)393216L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_MAX() {
        return (int)458752L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_MIN_CUSTOM() {
        return (int)4194304L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_MAX_CUSTOM() {
        return (int)16711680L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MIN() {
        return (int)0L;
    }
    public static int SERVICE_STOP_REASON_MINOR_OTHER() {
        return (int)1L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MAINTENANCE() {
        return (int)2L;
    }
    public static int SERVICE_STOP_REASON_MINOR_INSTALLATION() {
        return (int)3L;
    }
    public static int SERVICE_STOP_REASON_MINOR_UPGRADE() {
        return (int)4L;
    }
    public static int SERVICE_STOP_REASON_MINOR_RECONFIG() {
        return (int)5L;
    }
    public static int SERVICE_STOP_REASON_MINOR_HUNG() {
        return (int)6L;
    }
    public static int SERVICE_STOP_REASON_MINOR_UNSTABLE() {
        return (int)7L;
    }
    public static int SERVICE_STOP_REASON_MINOR_DISK() {
        return (int)8L;
    }
    public static int SERVICE_STOP_REASON_MINOR_NETWORKCARD() {
        return (int)9L;
    }
    public static int SERVICE_STOP_REASON_MINOR_ENVIRONMENT() {
        return (int)10L;
    }
    public static int SERVICE_STOP_REASON_MINOR_HARDWARE_DRIVER() {
        return (int)11L;
    }
    public static int SERVICE_STOP_REASON_MINOR_OTHERDRIVER() {
        return (int)12L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SERVICEPACK() {
        return (int)13L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE() {
        return (int)14L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SECURITYFIX() {
        return (int)15L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SECURITY() {
        return (int)16L;
    }
    public static int SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY() {
        return (int)17L;
    }
    public static int SERVICE_STOP_REASON_MINOR_WMI() {
        return (int)18L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL() {
        return (int)19L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE_UNINSTALL() {
        return (int)20L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL() {
        return (int)21L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MMC() {
        return (int)22L;
    }
    public static int SERVICE_STOP_REASON_MINOR_NONE() {
        return (int)23L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MEMOTYLIMIT() {
        return (int)24L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MAX() {
        return (int)25L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MIN_CUSTOM() {
        return (int)256L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MAX_CUSTOM() {
        return (int)65535L;
    }
    public static int SERVICE_CONTROL_STATUS_REASON_INFO() {
        return (int)1L;
    }
    public static int SERVICE_SID_TYPE_NONE() {
        return (int)0L;
    }
    public static int SERVICE_SID_TYPE_UNRESTRICTED() {
        return (int)1L;
    }
    public static int SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL() {
        return (int)1L;
    }
    public static int SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY() {
        return (int)2L;
    }
    public static int SERVICE_TRIGGER_TYPE_DOMAIN_JOIN() {
        return (int)3L;
    }
    public static int SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT() {
        return (int)4L;
    }
    public static int SERVICE_TRIGGER_TYPE_GROUP_POLICY() {
        return (int)5L;
    }
    public static int SERVICE_TRIGGER_TYPE_NETWORK_ENDPOINT() {
        return (int)6L;
    }
    public static int SERVICE_TRIGGER_TYPE_CUSTOM_SYSTEM_STATE_CHANGE() {
        return (int)7L;
    }
    public static int SERVICE_TRIGGER_TYPE_CUSTOM() {
        return (int)20L;
    }
    public static int SERVICE_TRIGGER_TYPE_AGGREGATE() {
        return (int)30L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_BINARY() {
        return (int)1L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_STRING() {
        return (int)2L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_LEVEL() {
        return (int)3L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ANY() {
        return (int)4L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ALL() {
        return (int)5L;
    }
    public static int SERVICE_START_REASON_DEMAND() {
        return (int)1L;
    }
    public static int SERVICE_START_REASON_AUTO() {
        return (int)2L;
    }
    public static int SERVICE_START_REASON_TRIGGER() {
        return (int)4L;
    }
    public static int SERVICE_START_REASON_RESTART_ON_FAILURE() {
        return (int)8L;
    }
    public static int SERVICE_START_REASON_DELAYEDAUTO() {
        return (int)16L;
    }
    public static int SERVICE_DYNAMIC_INFORMATION_LEVEL_START_REASON() {
        return (int)1L;
    }
    public static int SERVICE_LAUNCH_PROTECTED_NONE() {
        return (int)0L;
    }
    public static int SERVICE_LAUNCH_PROTECTED_WINDOWS() {
        return (int)1L;
    }
    public static int SERVICE_LAUNCH_PROTECTED_WINDOWS_LIGHT() {
        return (int)2L;
    }
    public static int SERVICE_LAUNCH_PROTECTED_ANTIMALWARE_LIGHT() {
        return (int)3L;
    }
    public static int SERVICE_TRIGGER_ACTION_SERVICE_START() {
        return (int)1L;
    }
    public static int SERVICE_TRIGGER_ACTION_SERVICE_STOP() {
        return (int)2L;
    }
    public static int DIALOPTION_BILLING() {
        return (int)64L;
    }
    public static int DIALOPTION_QUIET() {
        return (int)128L;
    }
    public static int DIALOPTION_DIALTONE() {
        return (int)256L;
    }
    public static int MDMVOLFLAG_LOW() {
        return (int)1L;
    }
    public static int MDMVOLFLAG_MEDIUM() {
        return (int)2L;
    }
    public static int MDMVOLFLAG_HIGH() {
        return (int)4L;
    }
    public static int MDMVOL_LOW() {
        return (int)0L;
    }
    public static int MDMVOL_MEDIUM() {
        return (int)1L;
    }
    public static int MDMVOL_HIGH() {
        return (int)2L;
    }
    public static int MDMSPKRFLAG_OFF() {
        return (int)1L;
    }
    public static int MDMSPKRFLAG_DIAL() {
        return (int)2L;
    }
    public static int MDMSPKRFLAG_ON() {
        return (int)4L;
    }
    public static int MDMSPKRFLAG_CALLSETUP() {
        return (int)8L;
    }
    public static int MDMSPKR_OFF() {
        return (int)0L;
    }
    public static int MDMSPKR_DIAL() {
        return (int)1L;
    }
    public static int MDMSPKR_ON() {
        return (int)2L;
    }
    public static int MDMSPKR_CALLSETUP() {
        return (int)3L;
    }
    public static int MDM_COMPRESSION() {
        return (int)1L;
    }
    public static int MDM_ERROR_CONTROL() {
        return (int)2L;
    }
    public static int MDM_FORCED_EC() {
        return (int)4L;
    }
    public static int MDM_CELLULAR() {
        return (int)8L;
    }
    public static int MDM_FLOWCONTROL_HARD() {
        return (int)16L;
    }
    public static int MDM_FLOWCONTROL_SOFT() {
        return (int)32L;
    }
    public static int MDM_CCITT_OVERRIDE() {
        return (int)64L;
    }
    public static int MDM_SPEED_ADJUST() {
        return (int)128L;
    }
    public static int MDM_TONE_DIAL() {
        return (int)256L;
    }
    public static int MDM_BLIND_DIAL() {
        return (int)512L;
    }
    public static int MDM_V23_OVERRIDE() {
        return (int)1024L;
    }
    public static int MDM_DIAGNOSTICS() {
        return (int)2048L;
    }
    public static int MDM_MASK_BEARERMODE() {
        return (int)61440L;
    }
    public static int MDM_SHIFT_BEARERMODE() {
        return (int)12L;
    }
    public static int MDM_MASK_PROTOCOLID() {
        return (int)983040L;
    }
    public static int MDM_SHIFT_PROTOCOLID() {
        return (int)16L;
    }
    public static int MDM_MASK_PROTOCOLDATA() {
        return (int)267386880L;
    }
    public static int MDM_SHIFT_PROTOCOLDATA() {
        return (int)20L;
    }
    public static int MDM_BEARERMODE_ANALOG() {
        return (int)0L;
    }
    public static int MDM_BEARERMODE_ISDN() {
        return (int)1L;
    }
    public static int MDM_BEARERMODE_GSM() {
        return (int)2L;
    }
    public static int MDM_PROTOCOLID_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_PROTOCOLID_HDLCPPP() {
        return (int)1L;
    }
    public static int MDM_PROTOCOLID_V128() {
        return (int)2L;
    }
    public static int MDM_PROTOCOLID_X75() {
        return (int)3L;
    }
    public static int MDM_PROTOCOLID_V110() {
        return (int)4L;
    }
    public static int MDM_PROTOCOLID_V120() {
        return (int)5L;
    }
    public static int MDM_PROTOCOLID_AUTO() {
        return (int)6L;
    }
    public static int MDM_PROTOCOLID_ANALOG() {
        return (int)7L;
    }
    public static int MDM_PROTOCOLID_GPRS() {
        return (int)8L;
    }
    public static int MDM_PROTOCOLID_PIAFS() {
        return (int)9L;
    }
    public static int MDM_SHIFT_HDLCPPP_SPEED() {
        return (int)0L;
    }
    public static int MDM_MASK_HDLCPPP_SPEED() {
        return (int)7L;
    }
    public static int MDM_HDLCPPP_SPEED_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_HDLCPPP_SPEED_64K() {
        return (int)1L;
    }
    public static int MDM_HDLCPPP_SPEED_56K() {
        return (int)2L;
    }
    public static int MDM_SHIFT_HDLCPPP_AUTH() {
        return (int)3L;
    }
    public static int MDM_HDLCPPP_AUTH_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_HDLCPPP_AUTH_NONE() {
        return (int)1L;
    }
    public static int MDM_HDLCPPP_AUTH_PAP() {
        return (int)2L;
    }
    public static int MDM_HDLCPPP_AUTH_CHAP() {
        return (int)3L;
    }
    public static int MDM_HDLCPPP_AUTH_MSCHAP() {
        return (int)4L;
    }
    public static int MDM_SHIFT_HDLCPPP_ML() {
        return (int)6L;
    }
    public static int MDM_HDLCPPP_ML_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_HDLCPPP_ML_NONE() {
        return (int)1L;
    }
    public static int MDM_HDLCPPP_ML_2() {
        return (int)2L;
    }
    public static int MDM_SHIFT_V120_SPEED() {
        return (int)0L;
    }
    public static int MDM_MASK_V120_SPEED() {
        return (int)7L;
    }
    public static int MDM_V120_SPEED_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_V120_SPEED_64K() {
        return (int)1L;
    }
    public static int MDM_V120_SPEED_56K() {
        return (int)2L;
    }
    public static int MDM_SHIFT_V120_ML() {
        return (int)6L;
    }
    public static int MDM_V120_ML_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_V120_ML_NONE() {
        return (int)1L;
    }
    public static int MDM_V120_ML_2() {
        return (int)2L;
    }
    public static int MDM_SHIFT_X75_DATA() {
        return (int)0L;
    }
    public static int MDM_MASK_X75_DATA() {
        return (int)7L;
    }
    public static int MDM_X75_DATA_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_X75_DATA_64K() {
        return (int)1L;
    }
    public static int MDM_X75_DATA_128K() {
        return (int)2L;
    }
    public static int MDM_X75_DATA_T_70() {
        return (int)3L;
    }
    public static int MDM_X75_DATA_BTX() {
        return (int)4L;
    }
    public static int MDM_SHIFT_V110_SPEED() {
        return (int)0L;
    }
    public static int MDM_MASK_V110_SPEED() {
        return (int)15L;
    }
    public static int MDM_V110_SPEED_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_V110_SPEED_1DOT2K() {
        return (int)1L;
    }
    public static int MDM_V110_SPEED_2DOT4K() {
        return (int)2L;
    }
    public static int MDM_V110_SPEED_4DOT8K() {
        return (int)3L;
    }
    public static int MDM_V110_SPEED_9DOT6K() {
        return (int)4L;
    }
    public static int MDM_V110_SPEED_12DOT0K() {
        return (int)5L;
    }
    public static int MDM_V110_SPEED_14DOT4K() {
        return (int)6L;
    }
    public static int MDM_V110_SPEED_19DOT2K() {
        return (int)7L;
    }
    public static int MDM_V110_SPEED_28DOT8K() {
        return (int)8L;
    }
    public static int MDM_V110_SPEED_38DOT4K() {
        return (int)9L;
    }
    public static int MDM_V110_SPEED_57DOT6K() {
        return (int)10L;
    }
    public static int MDM_SHIFT_AUTO_SPEED() {
        return (int)0L;
    }
    public static int MDM_MASK_AUTO_SPEED() {
        return (int)7L;
    }
    public static int MDM_AUTO_SPEED_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_SHIFT_AUTO_ML() {
        return (int)6L;
    }
    public static int MDM_AUTO_ML_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_AUTO_ML_NONE() {
        return (int)1L;
    }
    public static int MDM_AUTO_ML_2() {
        return (int)2L;
    }
    public static int MDM_ANALOG_RLP_ON() {
        return (int)0L;
    }
    public static int MDM_ANALOG_RLP_OFF() {
        return (int)1L;
    }
    public static int MDM_ANALOG_V34() {
        return (int)2L;
    }
    public static int MDM_PIAFS_INCOMING() {
        return (int)0L;
    }
    public static int MDM_PIAFS_OUTGOING() {
        return (int)1L;
    }
    public static int STYLE_DESCRIPTION_SIZE() {
        return (int)32L;
    }
    public static int IMEMENUITEM_STRING_SIZE() {
        return (int)80L;
    }
    public static int IMC_GETCANDIDATEPOS() {
        return (int)7L;
    }
    public static int IMC_SETCANDIDATEPOS() {
        return (int)8L;
    }
    public static int IMC_GETCOMPOSITIONFONT() {
        return (int)9L;
    }
    public static int IMC_SETCOMPOSITIONFONT() {
        return (int)10L;
    }
    public static int IMC_GETCOMPOSITIONWINDOW() {
        return (int)11L;
    }
    public static int IMC_SETCOMPOSITIONWINDOW() {
        return (int)12L;
    }
    public static int IMC_GETSTATUSWINDOWPOS() {
        return (int)15L;
    }
    public static int IMC_SETSTATUSWINDOWPOS() {
        return (int)16L;
    }
    public static int IMC_CLOSESTATUSWINDOW() {
        return (int)33L;
    }
    public static int IMC_OPENSTATUSWINDOW() {
        return (int)34L;
    }
    public static int NI_OPENCANDIDATE() {
        return (int)16L;
    }
    public static int NI_CLOSECANDIDATE() {
        return (int)17L;
    }
    public static int NI_SELECTCANDIDATESTR() {
        return (int)18L;
    }
    public static int NI_CHANGECANDIDATELIST() {
        return (int)19L;
    }
    public static int NI_FINALIZECONVERSIONRESULT() {
        return (int)20L;
    }
    public static int NI_COMPOSITIONSTR() {
        return (int)21L;
    }
    public static int NI_SETCANDIDATE_PAGESTART() {
        return (int)22L;
    }
    public static int NI_SETCANDIDATE_PAGESIZE() {
        return (int)23L;
    }
    public static int NI_IMEMENUSELECTED() {
        return (int)24L;
    }
    public static int ISC_SHOWUICANDIDATEWINDOW() {
        return (int)1L;
    }
    public static int ISC_SHOWUIGUIDELINE() {
        return (int)1073741824L;
    }
    public static int ISC_SHOWUIALLCANDIDATEWINDOW() {
        return (int)15L;
    }
    public static int CPS_COMPLETE() {
        return (int)1L;
    }
    public static int CPS_CONVERT() {
        return (int)2L;
    }
    public static int CPS_REVERT() {
        return (int)3L;
    }
    public static int CPS_CANCEL() {
        return (int)4L;
    }
    public static int MOD_LEFT() {
        return (int)32768L;
    }
    public static int MOD_RIGHT() {
        return (int)16384L;
    }
    public static int MOD_ON_KEYUP() {
        return (int)2048L;
    }
    public static int MOD_IGNORE_ALL_MODIFIER() {
        return (int)1024L;
    }
    public static int IME_CHOTKEY_IME_NONIME_TOGGLE() {
        return (int)16L;
    }
    public static int IME_CHOTKEY_SHAPE_TOGGLE() {
        return (int)17L;
    }
    public static int IME_CHOTKEY_SYMBOL_TOGGLE() {
        return (int)18L;
    }
    public static int IME_JHOTKEY_CLOSE_OPEN() {
        return (int)48L;
    }
    public static int IME_KHOTKEY_SHAPE_TOGGLE() {
        return (int)80L;
    }
    public static int IME_KHOTKEY_HANJACONVERT() {
        return (int)81L;
    }
    public static int IME_KHOTKEY_ENGLISH() {
        return (int)82L;
    }
    public static int IME_THOTKEY_IME_NONIME_TOGGLE() {
        return (int)112L;
    }
    public static int IME_THOTKEY_SHAPE_TOGGLE() {
        return (int)113L;
    }
    public static int IME_THOTKEY_SYMBOL_TOGGLE() {
        return (int)114L;
    }
    public static int IME_HOTKEY_DSWITCH_FIRST() {
        return (int)256L;
    }
    public static int IME_HOTKEY_DSWITCH_LAST() {
        return (int)287L;
    }
    public static int IME_HOTKEY_PRIVATE_FIRST() {
        return (int)512L;
    }
    public static int IME_ITHOTKEY_RESEND_RESULTSTR() {
        return (int)512L;
    }
    public static int IME_ITHOTKEY_PREVIOUS_COMPOSITION() {
        return (int)513L;
    }
    public static int IME_ITHOTKEY_UISTYLE_TOGGLE() {
        return (int)514L;
    }
    public static int IME_ITHOTKEY_RECONVERTSTRING() {
        return (int)515L;
    }
    public static int IME_HOTKEY_PRIVATE_LAST() {
        return (int)543L;
    }
    public static int GCS_COMPREADSTR() {
        return (int)1L;
    }
    public static int GCS_COMPREADATTR() {
        return (int)2L;
    }
    public static int GCS_COMPREADCLAUSE() {
        return (int)4L;
    }
    public static int GCS_COMPSTR() {
        return (int)8L;
    }
    public static int GCS_COMPATTR() {
        return (int)16L;
    }
    public static int GCS_COMPCLAUSE() {
        return (int)32L;
    }
    public static int GCS_CURSORPOS() {
        return (int)128L;
    }
    public static int GCS_DELTASTART() {
        return (int)256L;
    }
    public static int GCS_RESULTREADSTR() {
        return (int)512L;
    }
    public static int GCS_RESULTREADCLAUSE() {
        return (int)1024L;
    }
    public static int GCS_RESULTSTR() {
        return (int)2048L;
    }
    public static int GCS_RESULTCLAUSE() {
        return (int)4096L;
    }
    public static int CS_INSERTCHAR() {
        return (int)8192L;
    }
    public static int CS_NOMOVECARET() {
        return (int)16384L;
    }
    public static int IMEVER_0310() {
        return (int)196618L;
    }
    public static int IMEVER_0400() {
        return (int)262144L;
    }
    public static int IME_PROP_AT_CARET() {
        return (int)65536L;
    }
    public static int IME_PROP_SPECIAL_UI() {
        return (int)131072L;
    }
    public static int IME_PROP_CANDLIST_START_FROM_1() {
        return (int)262144L;
    }
    public static int IME_PROP_UNICODE() {
        return (int)524288L;
    }
    public static int IME_PROP_COMPLETE_ON_UNSELECT() {
        return (int)1048576L;
    }
    public static int UI_CAP_2700() {
        return (int)1L;
    }
    public static int UI_CAP_ROT90() {
        return (int)2L;
    }
    public static int UI_CAP_ROTANY() {
        return (int)4L;
    }
    public static int SCS_CAP_COMPSTR() {
        return (int)1L;
    }
    public static int SCS_CAP_MAKEREAD() {
        return (int)2L;
    }
    public static int SCS_CAP_SETRECONVERTSTRING() {
        return (int)4L;
    }
    public static int SELECT_CAP_CONVERSION() {
        return (int)1L;
    }
    public static int SELECT_CAP_SENTENCE() {
        return (int)2L;
    }
    public static int GGL_LEVEL() {
        return (int)1L;
    }
    public static int GGL_INDEX() {
        return (int)2L;
    }
    public static int GGL_STRING() {
        return (int)3L;
    }
    public static int GGL_PRIVATE() {
        return (int)4L;
    }
    public static int GL_LEVEL_NOGUIDELINE() {
        return (int)0L;
    }
    public static int GL_LEVEL_FATAL() {
        return (int)1L;
    }
    public static int GL_LEVEL_ERROR() {
        return (int)2L;
    }
    public static int GL_LEVEL_WARNING() {
        return (int)3L;
    }
    public static int GL_LEVEL_INFORMATION() {
        return (int)4L;
    }
    public static int GL_ID_UNKNOWN() {
        return (int)0L;
    }
    public static int GL_ID_NOMODULE() {
        return (int)1L;
    }
    public static int GL_ID_NODICTIONARY() {
        return (int)16L;
    }
    public static int GL_ID_CANNOTSAVE() {
        return (int)17L;
    }
    public static int GL_ID_NOCONVERT() {
        return (int)32L;
    }
    public static int GL_ID_TYPINGERROR() {
        return (int)33L;
    }
    public static int GL_ID_TOOMANYSTROKE() {
        return (int)34L;
    }
    public static int GL_ID_READINGCONFLICT() {
        return (int)35L;
    }
    public static int GL_ID_INPUTREADING() {
        return (int)36L;
    }
    public static int GL_ID_INPUTRADICAL() {
        return (int)37L;
    }
    public static int GL_ID_INPUTCODE() {
        return (int)38L;
    }
    public static int GL_ID_INPUTSYMBOL() {
        return (int)39L;
    }
    public static int GL_ID_CHOOSECANDIDATE() {
        return (int)40L;
    }
    public static int GL_ID_REVERSECONVERSION() {
        return (int)41L;
    }
    public static int GL_ID_PRIVATE_FIRST() {
        return (int)32768L;
    }
    public static int GL_ID_PRIVATE_LAST() {
        return (int)65535L;
    }
    public static int IGP_PROPERTY() {
        return (int)4L;
    }
    public static int IGP_CONVERSION() {
        return (int)8L;
    }
    public static int IGP_SENTENCE() {
        return (int)12L;
    }
    public static int IGP_UI() {
        return (int)16L;
    }
    public static int IGP_SETCOMPSTR() {
        return (int)20L;
    }
    public static int IGP_SELECT() {
        return (int)24L;
    }
    public static int SCS_SETRECONVERTSTRING() {
        return (int)65536L;
    }
    public static int SCS_QUERYRECONVERTSTRING() {
        return (int)131072L;
    }
    public static int ATTR_INPUT() {
        return (int)0L;
    }
    public static int ATTR_TARGET_CONVERTED() {
        return (int)1L;
    }
    public static int ATTR_CONVERTED() {
        return (int)2L;
    }
    public static int ATTR_TARGET_NOTCONVERTED() {
        return (int)3L;
    }
    public static int ATTR_INPUT_ERROR() {
        return (int)4L;
    }
    public static int ATTR_FIXEDCONVERTED() {
        return (int)5L;
    }
    public static int CFS_DEFAULT() {
        return (int)0L;
    }
    public static int CFS_RECT() {
        return (int)1L;
    }
    public static int CFS_POINT() {
        return (int)2L;
    }
    public static int CFS_FORCE_POSITION() {
        return (int)32L;
    }
    public static int CFS_CANDIDATEPOS() {
        return (int)64L;
    }
    public static int CFS_EXCLUDE() {
        return (int)128L;
    }
    public static int GCL_CONVERSION() {
        return (int)1L;
    }
    public static int GCL_REVERSECONVERSION() {
        return (int)2L;
    }
    public static int GCL_REVERSE_LENGTH() {
        return (int)3L;
    }
    public static int IME_CMODE_ALPHANUMERIC() {
        return (int)0L;
    }
    public static int IME_CMODE_NATIVE() {
        return (int)1L;
    }
    public static int IME_CMODE_KATAKANA() {
        return (int)2L;
    }
    public static int IME_CMODE_LANGUAGE() {
        return (int)3L;
    }
    public static int IME_CMODE_FULLSHAPE() {
        return (int)8L;
    }
    public static int IME_CMODE_ROMAN() {
        return (int)16L;
    }
    public static int IME_CMODE_CHARCODE() {
        return (int)32L;
    }
    public static int IME_CMODE_HANJACONVERT() {
        return (int)64L;
    }
    public static int IME_CMODE_NATIVESYMBOL() {
        return (int)128L;
    }
    public static int IME_CMODE_SOFTKBD() {
        return (int)128L;
    }
    public static int IME_CMODE_NOCONVERSION() {
        return (int)256L;
    }
    public static int IME_CMODE_EUDC() {
        return (int)512L;
    }
    public static int IME_CMODE_SYMBOL() {
        return (int)1024L;
    }
    public static int IME_CMODE_FIXED() {
        return (int)2048L;
    }
    public static int IME_SMODE_NONE() {
        return (int)0L;
    }
    public static int IME_SMODE_PLAURALCLAUSE() {
        return (int)1L;
    }
    public static int IME_SMODE_SINGLECONVERT() {
        return (int)2L;
    }
    public static int IME_SMODE_AUTOMATIC() {
        return (int)4L;
    }
    public static int IME_SMODE_PHRASEPREDICT() {
        return (int)8L;
    }
    public static int IME_SMODE_CONVERSATION() {
        return (int)16L;
    }
    public static int IME_SMODE_RESERVED() {
        return (int)61440L;
    }
    public static int IME_CAND_UNKNOWN() {
        return (int)0L;
    }
    public static int IME_CAND_READ() {
        return (int)1L;
    }
    public static int IME_CAND_CODE() {
        return (int)2L;
    }
    public static int IME_CAND_MEANING() {
        return (int)3L;
    }
    public static int IME_CAND_RADICAL() {
        return (int)4L;
    }
    public static int IME_CAND_STROKE() {
        return (int)5L;
    }
    public static int IMN_CLOSESTATUSWINDOW() {
        return (int)1L;
    }
    public static int IMN_OPENSTATUSWINDOW() {
        return (int)2L;
    }
    public static int IMN_CHANGECANDIDATE() {
        return (int)3L;
    }
    public static int IMN_CLOSECANDIDATE() {
        return (int)4L;
    }
    public static int IMN_OPENCANDIDATE() {
        return (int)5L;
    }
    public static int IMN_SETCONVERSIONMODE() {
        return (int)6L;
    }
    public static int IMN_SETSENTENCEMODE() {
        return (int)7L;
    }
    public static int IMN_SETOPENSTATUS() {
        return (int)8L;
    }
    public static int IMN_SETCANDIDATEPOS() {
        return (int)9L;
    }
    public static int IMN_SETCOMPOSITIONFONT() {
        return (int)10L;
    }
    public static int IMN_SETCOMPOSITIONWINDOW() {
        return (int)11L;
    }
    public static int IMN_SETSTATUSWINDOWPOS() {
        return (int)12L;
    }
    public static int IMN_GUIDELINE() {
        return (int)13L;
    }
    public static int IMN_PRIVATE() {
        return (int)14L;
    }
    public static int IMR_COMPOSITIONWINDOW() {
        return (int)1L;
    }
    public static int IMR_CANDIDATEWINDOW() {
        return (int)2L;
    }
    public static int IMR_COMPOSITIONFONT() {
        return (int)3L;
    }
    public static int IMR_RECONVERTSTRING() {
        return (int)4L;
    }
    public static int IMR_CONFIRMRECONVERTSTRING() {
        return (int)5L;
    }
    public static int IMR_QUERYCHARPOSITION() {
        return (int)6L;
    }
    public static int IMR_DOCUMENTFEED() {
        return (int)7L;
    }
    public static int IME_CONFIG_GENERAL() {
        return (int)1L;
    }
    public static int IME_CONFIG_REGISTERWORD() {
        return (int)2L;
    }
    public static int IME_CONFIG_SELECTDICTIONARY() {
        return (int)3L;
    }
    public static int IME_ESC_QUERY_SUPPORT() {
        return (int)3L;
    }
    public static int IME_ESC_RESERVED_FIRST() {
        return (int)4L;
    }
    public static int IME_ESC_RESERVED_LAST() {
        return (int)2047L;
    }
    public static int IME_ESC_PRIVATE_FIRST() {
        return (int)2048L;
    }
    public static int IME_ESC_PRIVATE_LAST() {
        return (int)4095L;
    }
    public static int IME_ESC_SEQUENCE_TO_INTERNAL() {
        return (int)4097L;
    }
    public static int IME_ESC_GET_EUDC_DICTIONARY() {
        return (int)4099L;
    }
    public static int IME_ESC_SET_EUDC_DICTIONARY() {
        return (int)4100L;
    }
    public static int IME_ESC_MAX_KEY() {
        return (int)4101L;
    }
    public static int IME_ESC_IME_NAME() {
        return (int)4102L;
    }
    public static int IME_ESC_SYNC_HOTKEY() {
        return (int)4103L;
    }
    public static int IME_ESC_HANJA_MODE() {
        return (int)4104L;
    }
    public static int IME_ESC_AUTOMATA() {
        return (int)4105L;
    }
    public static int IME_ESC_PRIVATE_HOTKEY() {
        return (int)4106L;
    }
    public static int IME_ESC_GETHELPFILENAME() {
        return (int)4107L;
    }
    public static int IME_REGWORD_STYLE_EUDC() {
        return (int)1L;
    }
    public static int IACE_CHILDREN() {
        return (int)1L;
    }
    public static int IACE_DEFAULT() {
        return (int)16L;
    }
    public static int IACE_IGNORENOCONTEXT() {
        return (int)32L;
    }
    public static int IGIMIF_RIGHTMENU() {
        return (int)1L;
    }
    public static int IGIMII_CMODE() {
        return (int)1L;
    }
    public static int IGIMII_SMODE() {
        return (int)2L;
    }
    public static int IGIMII_CONFIGURE() {
        return (int)4L;
    }
    public static int IGIMII_TOOLS() {
        return (int)8L;
    }
    public static int IGIMII_HELP() {
        return (int)16L;
    }
    public static int IGIMII_OTHER() {
        return (int)32L;
    }
    public static int IGIMII_INPUTTOOLS() {
        return (int)64L;
    }
    public static int IMFT_RADIOCHECK() {
        return (int)1L;
    }
    public static int IMFT_SEPARATOR() {
        return (int)2L;
    }
    public static int IMFT_SUBMENU() {
        return (int)4L;
    }
    public static int SOFTKEYBOARD_TYPE_T1() {
        return (int)1L;
    }
    public static int SOFTKEYBOARD_TYPE_C1() {
        return (int)2L;
    }
    public static int FREEGLUT() {
        return (int)1L;
    }
    public static int GLUT_API_VERSION() {
        return (int)4L;
    }
    public static int GLUT_XLIB_IMPLEMENTATION() {
        return (int)13L;
    }
    public static int FREEGLUT_VERSION_2_0() {
        return (int)1L;
    }
    public static int GL_VERSION_1_1() {
        return (int)1L;
    }
    public static int GL_ACCUM() {
        return (int)256L;
    }
    public static int GL_LOAD() {
        return (int)257L;
    }
    public static int GL_RETURN() {
        return (int)258L;
    }
    public static int GL_MULT() {
        return (int)259L;
    }
    public static int GL_ADD() {
        return (int)260L;
    }
    public static int GL_NEVER() {
        return (int)512L;
    }
    public static int GL_LESS() {
        return (int)513L;
    }
    public static int GL_EQUAL() {
        return (int)514L;
    }
    public static int GL_LEQUAL() {
        return (int)515L;
    }
    public static int GL_GREATER() {
        return (int)516L;
    }
    public static int GL_NOTEQUAL() {
        return (int)517L;
    }
    public static int GL_GEQUAL() {
        return (int)518L;
    }
    public static int GL_ALWAYS() {
        return (int)519L;
    }
    public static int GL_CURRENT_BIT() {
        return (int)1L;
    }
    public static int GL_POINT_BIT() {
        return (int)2L;
    }
    public static int GL_LINE_BIT() {
        return (int)4L;
    }
    public static int GL_POLYGON_BIT() {
        return (int)8L;
    }
    public static int GL_POLYGON_STIPPLE_BIT() {
        return (int)16L;
    }
    public static int GL_PIXEL_MODE_BIT() {
        return (int)32L;
    }
    public static int GL_LIGHTING_BIT() {
        return (int)64L;
    }
    public static int GL_FOG_BIT() {
        return (int)128L;
    }
    public static int GL_DEPTH_BUFFER_BIT() {
        return (int)256L;
    }
    public static int GL_ACCUM_BUFFER_BIT() {
        return (int)512L;
    }
    public static int GL_STENCIL_BUFFER_BIT() {
        return (int)1024L;
    }
    public static int GL_VIEWPORT_BIT() {
        return (int)2048L;
    }
    public static int GL_TRANSFORM_BIT() {
        return (int)4096L;
    }
    public static int GL_ENABLE_BIT() {
        return (int)8192L;
    }
    public static int GL_COLOR_BUFFER_BIT() {
        return (int)16384L;
    }
    public static int GL_HINT_BIT() {
        return (int)32768L;
    }
    public static int GL_EVAL_BIT() {
        return (int)65536L;
    }
    public static int GL_LIST_BIT() {
        return (int)131072L;
    }
    public static int GL_TEXTURE_BIT() {
        return (int)262144L;
    }
    public static int GL_SCISSOR_BIT() {
        return (int)524288L;
    }
    public static int GL_ALL_ATTRIB_BITS() {
        return (int)1048575L;
    }
    public static int GL_POINTS() {
        return (int)0L;
    }
    public static int GL_LINES() {
        return (int)1L;
    }
    public static int GL_LINE_LOOP() {
        return (int)2L;
    }
    public static int GL_LINE_STRIP() {
        return (int)3L;
    }
    public static int GL_TRIANGLES() {
        return (int)4L;
    }
    public static int GL_TRIANGLE_STRIP() {
        return (int)5L;
    }
    public static int GL_TRIANGLE_FAN() {
        return (int)6L;
    }
    public static int GL_QUADS() {
        return (int)7L;
    }
    public static int GL_QUAD_STRIP() {
        return (int)8L;
    }
    public static int GL_POLYGON() {
        return (int)9L;
    }
    public static int GL_ZERO() {
        return (int)0L;
    }
    public static int GL_ONE() {
        return (int)1L;
    }
    public static int GL_SRC_COLOR() {
        return (int)768L;
    }
    public static int GL_ONE_MINUS_SRC_COLOR() {
        return (int)769L;
    }
    public static int GL_SRC_ALPHA() {
        return (int)770L;
    }
    public static int GL_ONE_MINUS_SRC_ALPHA() {
        return (int)771L;
    }
    public static int GL_DST_ALPHA() {
        return (int)772L;
    }
    public static int GL_ONE_MINUS_DST_ALPHA() {
        return (int)773L;
    }
    public static int GL_DST_COLOR() {
        return (int)774L;
    }
    public static int GL_ONE_MINUS_DST_COLOR() {
        return (int)775L;
    }
    public static int GL_SRC_ALPHA_SATURATE() {
        return (int)776L;
    }
    public static int GL_TRUE() {
        return (int)1L;
    }
    public static int GL_FALSE() {
        return (int)0L;
    }
    public static int GL_CLIP_PLANE0() {
        return (int)12288L;
    }
    public static int GL_CLIP_PLANE1() {
        return (int)12289L;
    }
    public static int GL_CLIP_PLANE2() {
        return (int)12290L;
    }
    public static int GL_CLIP_PLANE3() {
        return (int)12291L;
    }
    public static int GL_CLIP_PLANE4() {
        return (int)12292L;
    }
    public static int GL_CLIP_PLANE5() {
        return (int)12293L;
    }
    public static int GL_BYTE() {
        return (int)5120L;
    }
    public static int GL_UNSIGNED_BYTE() {
        return (int)5121L;
    }
    public static int GL_SHORT() {
        return (int)5122L;
    }
    public static int GL_UNSIGNED_SHORT() {
        return (int)5123L;
    }
    public static int GL_INT() {
        return (int)5124L;
    }
    public static int GL_UNSIGNED_INT() {
        return (int)5125L;
    }
    public static int GL_FLOAT() {
        return (int)5126L;
    }
    public static int GL_2_BYTES() {
        return (int)5127L;
    }
    public static int GL_3_BYTES() {
        return (int)5128L;
    }
    public static int GL_4_BYTES() {
        return (int)5129L;
    }
    public static int GL_DOUBLE() {
        return (int)5130L;
    }
    public static int GL_NONE() {
        return (int)0L;
    }
    public static int GL_FRONT_LEFT() {
        return (int)1024L;
    }
    public static int GL_FRONT_RIGHT() {
        return (int)1025L;
    }
    public static int GL_BACK_LEFT() {
        return (int)1026L;
    }
    public static int GL_BACK_RIGHT() {
        return (int)1027L;
    }
    public static int GL_FRONT() {
        return (int)1028L;
    }
    public static int GL_BACK() {
        return (int)1029L;
    }
    public static int GL_LEFT() {
        return (int)1030L;
    }
    public static int GL_RIGHT() {
        return (int)1031L;
    }
    public static int GL_FRONT_AND_BACK() {
        return (int)1032L;
    }
    public static int GL_AUX0() {
        return (int)1033L;
    }
    public static int GL_AUX1() {
        return (int)1034L;
    }
    public static int GL_AUX2() {
        return (int)1035L;
    }
    public static int GL_AUX3() {
        return (int)1036L;
    }
    public static int GL_NO_ERROR() {
        return (int)0L;
    }
    public static int GL_INVALID_ENUM() {
        return (int)1280L;
    }
    public static int GL_INVALID_VALUE() {
        return (int)1281L;
    }
    public static int GL_INVALID_OPERATION() {
        return (int)1282L;
    }
    public static int GL_STACK_OVERFLOW() {
        return (int)1283L;
    }
    public static int GL_STACK_UNDERFLOW() {
        return (int)1284L;
    }
    public static int GL_OUT_OF_MEMORY() {
        return (int)1285L;
    }
    public static int GL_2D() {
        return (int)1536L;
    }
    public static int GL_3D() {
        return (int)1537L;
    }
    public static int GL_3D_COLOR() {
        return (int)1538L;
    }
    public static int GL_3D_COLOR_TEXTURE() {
        return (int)1539L;
    }
    public static int GL_4D_COLOR_TEXTURE() {
        return (int)1540L;
    }
    public static int GL_PASS_THROUGH_TOKEN() {
        return (int)1792L;
    }
    public static int GL_POINT_TOKEN() {
        return (int)1793L;
    }
    public static int GL_LINE_TOKEN() {
        return (int)1794L;
    }
    public static int GL_POLYGON_TOKEN() {
        return (int)1795L;
    }
    public static int GL_BITMAP_TOKEN() {
        return (int)1796L;
    }
    public static int GL_DRAW_PIXEL_TOKEN() {
        return (int)1797L;
    }
    public static int GL_COPY_PIXEL_TOKEN() {
        return (int)1798L;
    }
    public static int GL_LINE_RESET_TOKEN() {
        return (int)1799L;
    }
    public static int GL_EXP() {
        return (int)2048L;
    }
    public static int GL_EXP2() {
        return (int)2049L;
    }
    public static int GL_CW() {
        return (int)2304L;
    }
    public static int GL_CCW() {
        return (int)2305L;
    }
    public static int GL_COEFF() {
        return (int)2560L;
    }
    public static int GL_ORDER() {
        return (int)2561L;
    }
    public static int GL_DOMAIN() {
        return (int)2562L;
    }
    public static int GL_CURRENT_COLOR() {
        return (int)2816L;
    }
    public static int GL_CURRENT_INDEX() {
        return (int)2817L;
    }
    public static int GL_CURRENT_NORMAL() {
        return (int)2818L;
    }
    public static int GL_CURRENT_TEXTURE_COORDS() {
        return (int)2819L;
    }
    public static int GL_CURRENT_RASTER_COLOR() {
        return (int)2820L;
    }
    public static int GL_CURRENT_RASTER_INDEX() {
        return (int)2821L;
    }
    public static int GL_CURRENT_RASTER_TEXTURE_COORDS() {
        return (int)2822L;
    }
    public static int GL_CURRENT_RASTER_POSITION() {
        return (int)2823L;
    }
    public static int GL_CURRENT_RASTER_POSITION_VALID() {
        return (int)2824L;
    }
    public static int GL_CURRENT_RASTER_DISTANCE() {
        return (int)2825L;
    }
    public static int GL_POINT_SMOOTH() {
        return (int)2832L;
    }
    public static int GL_POINT_SIZE() {
        return (int)2833L;
    }
    public static int GL_POINT_SIZE_RANGE() {
        return (int)2834L;
    }
    public static int GL_POINT_SIZE_GRANULARITY() {
        return (int)2835L;
    }
    public static int GL_LINE_SMOOTH() {
        return (int)2848L;
    }
    public static int GL_LINE_WIDTH() {
        return (int)2849L;
    }
    public static int GL_LINE_WIDTH_RANGE() {
        return (int)2850L;
    }
    public static int GL_LINE_WIDTH_GRANULARITY() {
        return (int)2851L;
    }
    public static int GL_LINE_STIPPLE() {
        return (int)2852L;
    }
    public static int GL_LINE_STIPPLE_PATTERN() {
        return (int)2853L;
    }
    public static int GL_LINE_STIPPLE_REPEAT() {
        return (int)2854L;
    }
    public static int GL_LIST_MODE() {
        return (int)2864L;
    }
    public static int GL_MAX_LIST_NESTING() {
        return (int)2865L;
    }
    public static int GL_LIST_BASE() {
        return (int)2866L;
    }
    public static int GL_LIST_INDEX() {
        return (int)2867L;
    }
    public static int GL_POLYGON_MODE() {
        return (int)2880L;
    }
    public static int GL_POLYGON_SMOOTH() {
        return (int)2881L;
    }
    public static int GL_POLYGON_STIPPLE() {
        return (int)2882L;
    }
    public static int GL_EDGE_FLAG() {
        return (int)2883L;
    }
    public static int GL_CULL_FACE() {
        return (int)2884L;
    }
    public static int GL_CULL_FACE_MODE() {
        return (int)2885L;
    }
    public static int GL_FRONT_FACE() {
        return (int)2886L;
    }
    public static int GL_LIGHTING() {
        return (int)2896L;
    }
    public static int GL_LIGHT_MODEL_LOCAL_VIEWER() {
        return (int)2897L;
    }
    public static int GL_LIGHT_MODEL_TWO_SIDE() {
        return (int)2898L;
    }
    public static int GL_LIGHT_MODEL_AMBIENT() {
        return (int)2899L;
    }
    public static int GL_SHADE_MODEL() {
        return (int)2900L;
    }
    public static int GL_COLOR_MATERIAL_FACE() {
        return (int)2901L;
    }
    public static int GL_COLOR_MATERIAL_PARAMETER() {
        return (int)2902L;
    }
}


