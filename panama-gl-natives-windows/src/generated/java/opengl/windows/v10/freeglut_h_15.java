// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class freeglut_h_15 extends freeglut_h_14 {

    public static MethodHandle glColor4ub$MH() {
        return RuntimeHelper.requireNonNull(constants$640.glColor4ub$MH,"glColor4ub");
    }
    public static void glColor4ub ( byte red,  byte green,  byte blue,  byte alpha) {
        var mh$ = RuntimeHelper.requireNonNull(constants$640.glColor4ub$MH, "glColor4ub");
        try {
            mh$.invokeExact(red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glColor4ubv$MH() {
        return RuntimeHelper.requireNonNull(constants$640.glColor4ubv$MH,"glColor4ubv");
    }
    public static void glColor4ubv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$640.glColor4ubv$MH, "glColor4ubv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glColor4ui$MH() {
        return RuntimeHelper.requireNonNull(constants$641.glColor4ui$MH,"glColor4ui");
    }
    public static void glColor4ui ( int red,  int green,  int blue,  int alpha) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.glColor4ui$MH, "glColor4ui");
        try {
            mh$.invokeExact(red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glColor4uiv$MH() {
        return RuntimeHelper.requireNonNull(constants$641.glColor4uiv$MH,"glColor4uiv");
    }
    public static void glColor4uiv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.glColor4uiv$MH, "glColor4uiv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glColor4us$MH() {
        return RuntimeHelper.requireNonNull(constants$641.glColor4us$MH,"glColor4us");
    }
    public static void glColor4us ( short red,  short green,  short blue,  short alpha) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.glColor4us$MH, "glColor4us");
        try {
            mh$.invokeExact(red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glColor4usv$MH() {
        return RuntimeHelper.requireNonNull(constants$641.glColor4usv$MH,"glColor4usv");
    }
    public static void glColor4usv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.glColor4usv$MH, "glColor4usv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glColorMask$MH() {
        return RuntimeHelper.requireNonNull(constants$641.glColorMask$MH,"glColorMask");
    }
    public static void glColorMask ( byte red,  byte green,  byte blue,  byte alpha) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.glColorMask$MH, "glColorMask");
        try {
            mh$.invokeExact(red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glColorMaterial$MH() {
        return RuntimeHelper.requireNonNull(constants$641.glColorMaterial$MH,"glColorMaterial");
    }
    public static void glColorMaterial ( int face,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.glColorMaterial$MH, "glColorMaterial");
        try {
            mh$.invokeExact(face, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glColorPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$642.glColorPointer$MH,"glColorPointer");
    }
    public static void glColorPointer ( int size,  int type,  int stride,  Addressable pointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.glColorPointer$MH, "glColorPointer");
        try {
            mh$.invokeExact(size, type, stride, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glCopyPixels$MH() {
        return RuntimeHelper.requireNonNull(constants$642.glCopyPixels$MH,"glCopyPixels");
    }
    public static void glCopyPixels ( int x,  int y,  int width,  int height,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.glCopyPixels$MH, "glCopyPixels");
        try {
            mh$.invokeExact(x, y, width, height, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glCopyTexImage1D$MH() {
        return RuntimeHelper.requireNonNull(constants$642.glCopyTexImage1D$MH,"glCopyTexImage1D");
    }
    public static void glCopyTexImage1D ( int target,  int level,  int internalFormat,  int x,  int y,  int width,  int border) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.glCopyTexImage1D$MH, "glCopyTexImage1D");
        try {
            mh$.invokeExact(target, level, internalFormat, x, y, width, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glCopyTexImage2D$MH() {
        return RuntimeHelper.requireNonNull(constants$642.glCopyTexImage2D$MH,"glCopyTexImage2D");
    }
    public static void glCopyTexImage2D ( int target,  int level,  int internalFormat,  int x,  int y,  int width,  int height,  int border) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.glCopyTexImage2D$MH, "glCopyTexImage2D");
        try {
            mh$.invokeExact(target, level, internalFormat, x, y, width, height, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glCopyTexSubImage1D$MH() {
        return RuntimeHelper.requireNonNull(constants$642.glCopyTexSubImage1D$MH,"glCopyTexSubImage1D");
    }
    public static void glCopyTexSubImage1D ( int target,  int level,  int xoffset,  int x,  int y,  int width) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.glCopyTexSubImage1D$MH, "glCopyTexSubImage1D");
        try {
            mh$.invokeExact(target, level, xoffset, x, y, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glCopyTexSubImage2D$MH() {
        return RuntimeHelper.requireNonNull(constants$642.glCopyTexSubImage2D$MH,"glCopyTexSubImage2D");
    }
    public static void glCopyTexSubImage2D ( int target,  int level,  int xoffset,  int yoffset,  int x,  int y,  int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.glCopyTexSubImage2D$MH, "glCopyTexSubImage2D");
        try {
            mh$.invokeExact(target, level, xoffset, yoffset, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glCullFace$MH() {
        return RuntimeHelper.requireNonNull(constants$643.glCullFace$MH,"glCullFace");
    }
    public static void glCullFace ( int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.glCullFace$MH, "glCullFace");
        try {
            mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDeleteLists$MH() {
        return RuntimeHelper.requireNonNull(constants$643.glDeleteLists$MH,"glDeleteLists");
    }
    public static void glDeleteLists ( int list,  int range) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.glDeleteLists$MH, "glDeleteLists");
        try {
            mh$.invokeExact(list, range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDeleteTextures$MH() {
        return RuntimeHelper.requireNonNull(constants$643.glDeleteTextures$MH,"glDeleteTextures");
    }
    public static void glDeleteTextures ( int n,  Addressable textures) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.glDeleteTextures$MH, "glDeleteTextures");
        try {
            mh$.invokeExact(n, textures);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDepthFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$643.glDepthFunc$MH,"glDepthFunc");
    }
    public static void glDepthFunc ( int func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.glDepthFunc$MH, "glDepthFunc");
        try {
            mh$.invokeExact(func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDepthMask$MH() {
        return RuntimeHelper.requireNonNull(constants$643.glDepthMask$MH,"glDepthMask");
    }
    public static void glDepthMask ( byte flag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.glDepthMask$MH, "glDepthMask");
        try {
            mh$.invokeExact(flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDepthRange$MH() {
        return RuntimeHelper.requireNonNull(constants$643.glDepthRange$MH,"glDepthRange");
    }
    public static void glDepthRange ( double zNear,  double zFar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.glDepthRange$MH, "glDepthRange");
        try {
            mh$.invokeExact(zNear, zFar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDisable$MH() {
        return RuntimeHelper.requireNonNull(constants$644.glDisable$MH,"glDisable");
    }
    public static void glDisable ( int cap) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.glDisable$MH, "glDisable");
        try {
            mh$.invokeExact(cap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDisableClientState$MH() {
        return RuntimeHelper.requireNonNull(constants$644.glDisableClientState$MH,"glDisableClientState");
    }
    public static void glDisableClientState ( int array) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.glDisableClientState$MH, "glDisableClientState");
        try {
            mh$.invokeExact(array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDrawArrays$MH() {
        return RuntimeHelper.requireNonNull(constants$644.glDrawArrays$MH,"glDrawArrays");
    }
    public static void glDrawArrays ( int mode,  int first,  int count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.glDrawArrays$MH, "glDrawArrays");
        try {
            mh$.invokeExact(mode, first, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDrawBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$644.glDrawBuffer$MH,"glDrawBuffer");
    }
    public static void glDrawBuffer ( int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.glDrawBuffer$MH, "glDrawBuffer");
        try {
            mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDrawElements$MH() {
        return RuntimeHelper.requireNonNull(constants$644.glDrawElements$MH,"glDrawElements");
    }
    public static void glDrawElements ( int mode,  int count,  int type,  Addressable indices) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.glDrawElements$MH, "glDrawElements");
        try {
            mh$.invokeExact(mode, count, type, indices);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glDrawPixels$MH() {
        return RuntimeHelper.requireNonNull(constants$644.glDrawPixels$MH,"glDrawPixels");
    }
    public static void glDrawPixels ( int width,  int height,  int format,  int type,  Addressable pixels) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.glDrawPixels$MH, "glDrawPixels");
        try {
            mh$.invokeExact(width, height, format, type, pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEdgeFlag$MH() {
        return RuntimeHelper.requireNonNull(constants$645.glEdgeFlag$MH,"glEdgeFlag");
    }
    public static void glEdgeFlag ( byte flag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.glEdgeFlag$MH, "glEdgeFlag");
        try {
            mh$.invokeExact(flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEdgeFlagPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$645.glEdgeFlagPointer$MH,"glEdgeFlagPointer");
    }
    public static void glEdgeFlagPointer ( int stride,  Addressable pointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.glEdgeFlagPointer$MH, "glEdgeFlagPointer");
        try {
            mh$.invokeExact(stride, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEdgeFlagv$MH() {
        return RuntimeHelper.requireNonNull(constants$645.glEdgeFlagv$MH,"glEdgeFlagv");
    }
    public static void glEdgeFlagv ( Addressable flag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.glEdgeFlagv$MH, "glEdgeFlagv");
        try {
            mh$.invokeExact(flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEnable$MH() {
        return RuntimeHelper.requireNonNull(constants$645.glEnable$MH,"glEnable");
    }
    public static void glEnable ( int cap) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.glEnable$MH, "glEnable");
        try {
            mh$.invokeExact(cap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEnableClientState$MH() {
        return RuntimeHelper.requireNonNull(constants$645.glEnableClientState$MH,"glEnableClientState");
    }
    public static void glEnableClientState ( int array) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.glEnableClientState$MH, "glEnableClientState");
        try {
            mh$.invokeExact(array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEnd$MH() {
        return RuntimeHelper.requireNonNull(constants$645.glEnd$MH,"glEnd");
    }
    public static void glEnd () {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.glEnd$MH, "glEnd");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEndList$MH() {
        return RuntimeHelper.requireNonNull(constants$646.glEndList$MH,"glEndList");
    }
    public static void glEndList () {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.glEndList$MH, "glEndList");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalCoord1d$MH() {
        return RuntimeHelper.requireNonNull(constants$646.glEvalCoord1d$MH,"glEvalCoord1d");
    }
    public static void glEvalCoord1d ( double u) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.glEvalCoord1d$MH, "glEvalCoord1d");
        try {
            mh$.invokeExact(u);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalCoord1dv$MH() {
        return RuntimeHelper.requireNonNull(constants$646.glEvalCoord1dv$MH,"glEvalCoord1dv");
    }
    public static void glEvalCoord1dv ( Addressable u) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.glEvalCoord1dv$MH, "glEvalCoord1dv");
        try {
            mh$.invokeExact(u);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalCoord1f$MH() {
        return RuntimeHelper.requireNonNull(constants$646.glEvalCoord1f$MH,"glEvalCoord1f");
    }
    public static void glEvalCoord1f ( float u) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.glEvalCoord1f$MH, "glEvalCoord1f");
        try {
            mh$.invokeExact(u);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalCoord1fv$MH() {
        return RuntimeHelper.requireNonNull(constants$646.glEvalCoord1fv$MH,"glEvalCoord1fv");
    }
    public static void glEvalCoord1fv ( Addressable u) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.glEvalCoord1fv$MH, "glEvalCoord1fv");
        try {
            mh$.invokeExact(u);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalCoord2d$MH() {
        return RuntimeHelper.requireNonNull(constants$646.glEvalCoord2d$MH,"glEvalCoord2d");
    }
    public static void glEvalCoord2d ( double u,  double v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.glEvalCoord2d$MH, "glEvalCoord2d");
        try {
            mh$.invokeExact(u, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalCoord2dv$MH() {
        return RuntimeHelper.requireNonNull(constants$647.glEvalCoord2dv$MH,"glEvalCoord2dv");
    }
    public static void glEvalCoord2dv ( Addressable u) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.glEvalCoord2dv$MH, "glEvalCoord2dv");
        try {
            mh$.invokeExact(u);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalCoord2f$MH() {
        return RuntimeHelper.requireNonNull(constants$647.glEvalCoord2f$MH,"glEvalCoord2f");
    }
    public static void glEvalCoord2f ( float u,  float v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.glEvalCoord2f$MH, "glEvalCoord2f");
        try {
            mh$.invokeExact(u, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalCoord2fv$MH() {
        return RuntimeHelper.requireNonNull(constants$647.glEvalCoord2fv$MH,"glEvalCoord2fv");
    }
    public static void glEvalCoord2fv ( Addressable u) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.glEvalCoord2fv$MH, "glEvalCoord2fv");
        try {
            mh$.invokeExact(u);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalMesh1$MH() {
        return RuntimeHelper.requireNonNull(constants$647.glEvalMesh1$MH,"glEvalMesh1");
    }
    public static void glEvalMesh1 ( int mode,  int i1,  int i2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.glEvalMesh1$MH, "glEvalMesh1");
        try {
            mh$.invokeExact(mode, i1, i2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalMesh2$MH() {
        return RuntimeHelper.requireNonNull(constants$647.glEvalMesh2$MH,"glEvalMesh2");
    }
    public static void glEvalMesh2 ( int mode,  int i1,  int i2,  int j1,  int j2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.glEvalMesh2$MH, "glEvalMesh2");
        try {
            mh$.invokeExact(mode, i1, i2, j1, j2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalPoint1$MH() {
        return RuntimeHelper.requireNonNull(constants$647.glEvalPoint1$MH,"glEvalPoint1");
    }
    public static void glEvalPoint1 ( int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.glEvalPoint1$MH, "glEvalPoint1");
        try {
            mh$.invokeExact(i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glEvalPoint2$MH() {
        return RuntimeHelper.requireNonNull(constants$648.glEvalPoint2$MH,"glEvalPoint2");
    }
    public static void glEvalPoint2 ( int i,  int j) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.glEvalPoint2$MH, "glEvalPoint2");
        try {
            mh$.invokeExact(i, j);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFeedbackBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$648.glFeedbackBuffer$MH,"glFeedbackBuffer");
    }
    public static void glFeedbackBuffer ( int size,  int type,  Addressable buffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.glFeedbackBuffer$MH, "glFeedbackBuffer");
        try {
            mh$.invokeExact(size, type, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFinish$MH() {
        return RuntimeHelper.requireNonNull(constants$648.glFinish$MH,"glFinish");
    }
    public static void glFinish () {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.glFinish$MH, "glFinish");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFlush$MH() {
        return RuntimeHelper.requireNonNull(constants$648.glFlush$MH,"glFlush");
    }
    public static void glFlush () {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.glFlush$MH, "glFlush");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFogf$MH() {
        return RuntimeHelper.requireNonNull(constants$648.glFogf$MH,"glFogf");
    }
    public static void glFogf ( int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.glFogf$MH, "glFogf");
        try {
            mh$.invokeExact(pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFogfv$MH() {
        return RuntimeHelper.requireNonNull(constants$648.glFogfv$MH,"glFogfv");
    }
    public static void glFogfv ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.glFogfv$MH, "glFogfv");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFogi$MH() {
        return RuntimeHelper.requireNonNull(constants$649.glFogi$MH,"glFogi");
    }
    public static void glFogi ( int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.glFogi$MH, "glFogi");
        try {
            mh$.invokeExact(pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFogiv$MH() {
        return RuntimeHelper.requireNonNull(constants$649.glFogiv$MH,"glFogiv");
    }
    public static void glFogiv ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.glFogiv$MH, "glFogiv");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFrontFace$MH() {
        return RuntimeHelper.requireNonNull(constants$649.glFrontFace$MH,"glFrontFace");
    }
    public static void glFrontFace ( int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.glFrontFace$MH, "glFrontFace");
        try {
            mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glFrustum$MH() {
        return RuntimeHelper.requireNonNull(constants$649.glFrustum$MH,"glFrustum");
    }
    public static void glFrustum ( double left,  double right,  double bottom,  double top,  double zNear,  double zFar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.glFrustum$MH, "glFrustum");
        try {
            mh$.invokeExact(left, right, bottom, top, zNear, zFar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGenLists$MH() {
        return RuntimeHelper.requireNonNull(constants$649.glGenLists$MH,"glGenLists");
    }
    public static int glGenLists ( int range) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.glGenLists$MH, "glGenLists");
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGenTextures$MH() {
        return RuntimeHelper.requireNonNull(constants$649.glGenTextures$MH,"glGenTextures");
    }
    public static void glGenTextures ( int n,  Addressable textures) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.glGenTextures$MH, "glGenTextures");
        try {
            mh$.invokeExact(n, textures);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetBooleanv$MH() {
        return RuntimeHelper.requireNonNull(constants$650.glGetBooleanv$MH,"glGetBooleanv");
    }
    public static void glGetBooleanv ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.glGetBooleanv$MH, "glGetBooleanv");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetClipPlane$MH() {
        return RuntimeHelper.requireNonNull(constants$650.glGetClipPlane$MH,"glGetClipPlane");
    }
    public static void glGetClipPlane ( int plane,  Addressable equation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.glGetClipPlane$MH, "glGetClipPlane");
        try {
            mh$.invokeExact(plane, equation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetDoublev$MH() {
        return RuntimeHelper.requireNonNull(constants$650.glGetDoublev$MH,"glGetDoublev");
    }
    public static void glGetDoublev ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.glGetDoublev$MH, "glGetDoublev");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetError$MH() {
        return RuntimeHelper.requireNonNull(constants$650.glGetError$MH,"glGetError");
    }
    public static int glGetError () {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.glGetError$MH, "glGetError");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetFloatv$MH() {
        return RuntimeHelper.requireNonNull(constants$650.glGetFloatv$MH,"glGetFloatv");
    }
    public static void glGetFloatv ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.glGetFloatv$MH, "glGetFloatv");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetIntegerv$MH() {
        return RuntimeHelper.requireNonNull(constants$650.glGetIntegerv$MH,"glGetIntegerv");
    }
    public static void glGetIntegerv ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.glGetIntegerv$MH, "glGetIntegerv");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetLightfv$MH() {
        return RuntimeHelper.requireNonNull(constants$651.glGetLightfv$MH,"glGetLightfv");
    }
    public static void glGetLightfv ( int light,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.glGetLightfv$MH, "glGetLightfv");
        try {
            mh$.invokeExact(light, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetLightiv$MH() {
        return RuntimeHelper.requireNonNull(constants$651.glGetLightiv$MH,"glGetLightiv");
    }
    public static void glGetLightiv ( int light,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.glGetLightiv$MH, "glGetLightiv");
        try {
            mh$.invokeExact(light, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetMapdv$MH() {
        return RuntimeHelper.requireNonNull(constants$651.glGetMapdv$MH,"glGetMapdv");
    }
    public static void glGetMapdv ( int target,  int query,  Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.glGetMapdv$MH, "glGetMapdv");
        try {
            mh$.invokeExact(target, query, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetMapfv$MH() {
        return RuntimeHelper.requireNonNull(constants$651.glGetMapfv$MH,"glGetMapfv");
    }
    public static void glGetMapfv ( int target,  int query,  Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.glGetMapfv$MH, "glGetMapfv");
        try {
            mh$.invokeExact(target, query, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetMapiv$MH() {
        return RuntimeHelper.requireNonNull(constants$651.glGetMapiv$MH,"glGetMapiv");
    }
    public static void glGetMapiv ( int target,  int query,  Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.glGetMapiv$MH, "glGetMapiv");
        try {
            mh$.invokeExact(target, query, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetMaterialfv$MH() {
        return RuntimeHelper.requireNonNull(constants$651.glGetMaterialfv$MH,"glGetMaterialfv");
    }
    public static void glGetMaterialfv ( int face,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.glGetMaterialfv$MH, "glGetMaterialfv");
        try {
            mh$.invokeExact(face, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetMaterialiv$MH() {
        return RuntimeHelper.requireNonNull(constants$652.glGetMaterialiv$MH,"glGetMaterialiv");
    }
    public static void glGetMaterialiv ( int face,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.glGetMaterialiv$MH, "glGetMaterialiv");
        try {
            mh$.invokeExact(face, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetPixelMapfv$MH() {
        return RuntimeHelper.requireNonNull(constants$652.glGetPixelMapfv$MH,"glGetPixelMapfv");
    }
    public static void glGetPixelMapfv ( int map,  Addressable values) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.glGetPixelMapfv$MH, "glGetPixelMapfv");
        try {
            mh$.invokeExact(map, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetPixelMapuiv$MH() {
        return RuntimeHelper.requireNonNull(constants$652.glGetPixelMapuiv$MH,"glGetPixelMapuiv");
    }
    public static void glGetPixelMapuiv ( int map,  Addressable values) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.glGetPixelMapuiv$MH, "glGetPixelMapuiv");
        try {
            mh$.invokeExact(map, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetPixelMapusv$MH() {
        return RuntimeHelper.requireNonNull(constants$652.glGetPixelMapusv$MH,"glGetPixelMapusv");
    }
    public static void glGetPixelMapusv ( int map,  Addressable values) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.glGetPixelMapusv$MH, "glGetPixelMapusv");
        try {
            mh$.invokeExact(map, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetPointerv$MH() {
        return RuntimeHelper.requireNonNull(constants$652.glGetPointerv$MH,"glGetPointerv");
    }
    public static void glGetPointerv ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.glGetPointerv$MH, "glGetPointerv");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetPolygonStipple$MH() {
        return RuntimeHelper.requireNonNull(constants$652.glGetPolygonStipple$MH,"glGetPolygonStipple");
    }
    public static void glGetPolygonStipple ( Addressable mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.glGetPolygonStipple$MH, "glGetPolygonStipple");
        try {
            mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetString$MH() {
        return RuntimeHelper.requireNonNull(constants$653.glGetString$MH,"glGetString");
    }
    public static MemoryAddress glGetString ( int name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.glGetString$MH, "glGetString");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexEnvfv$MH() {
        return RuntimeHelper.requireNonNull(constants$653.glGetTexEnvfv$MH,"glGetTexEnvfv");
    }
    public static void glGetTexEnvfv ( int target,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.glGetTexEnvfv$MH, "glGetTexEnvfv");
        try {
            mh$.invokeExact(target, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexEnviv$MH() {
        return RuntimeHelper.requireNonNull(constants$653.glGetTexEnviv$MH,"glGetTexEnviv");
    }
    public static void glGetTexEnviv ( int target,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.glGetTexEnviv$MH, "glGetTexEnviv");
        try {
            mh$.invokeExact(target, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexGendv$MH() {
        return RuntimeHelper.requireNonNull(constants$653.glGetTexGendv$MH,"glGetTexGendv");
    }
    public static void glGetTexGendv ( int coord,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.glGetTexGendv$MH, "glGetTexGendv");
        try {
            mh$.invokeExact(coord, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexGenfv$MH() {
        return RuntimeHelper.requireNonNull(constants$653.glGetTexGenfv$MH,"glGetTexGenfv");
    }
    public static void glGetTexGenfv ( int coord,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.glGetTexGenfv$MH, "glGetTexGenfv");
        try {
            mh$.invokeExact(coord, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexGeniv$MH() {
        return RuntimeHelper.requireNonNull(constants$653.glGetTexGeniv$MH,"glGetTexGeniv");
    }
    public static void glGetTexGeniv ( int coord,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.glGetTexGeniv$MH, "glGetTexGeniv");
        try {
            mh$.invokeExact(coord, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexImage$MH() {
        return RuntimeHelper.requireNonNull(constants$654.glGetTexImage$MH,"glGetTexImage");
    }
    public static void glGetTexImage ( int target,  int level,  int format,  int type,  Addressable pixels) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.glGetTexImage$MH, "glGetTexImage");
        try {
            mh$.invokeExact(target, level, format, type, pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexLevelParameterfv$MH() {
        return RuntimeHelper.requireNonNull(constants$654.glGetTexLevelParameterfv$MH,"glGetTexLevelParameterfv");
    }
    public static void glGetTexLevelParameterfv ( int target,  int level,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.glGetTexLevelParameterfv$MH, "glGetTexLevelParameterfv");
        try {
            mh$.invokeExact(target, level, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexLevelParameteriv$MH() {
        return RuntimeHelper.requireNonNull(constants$654.glGetTexLevelParameteriv$MH,"glGetTexLevelParameteriv");
    }
    public static void glGetTexLevelParameteriv ( int target,  int level,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.glGetTexLevelParameteriv$MH, "glGetTexLevelParameteriv");
        try {
            mh$.invokeExact(target, level, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexParameterfv$MH() {
        return RuntimeHelper.requireNonNull(constants$654.glGetTexParameterfv$MH,"glGetTexParameterfv");
    }
    public static void glGetTexParameterfv ( int target,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.glGetTexParameterfv$MH, "glGetTexParameterfv");
        try {
            mh$.invokeExact(target, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glGetTexParameteriv$MH() {
        return RuntimeHelper.requireNonNull(constants$654.glGetTexParameteriv$MH,"glGetTexParameteriv");
    }
    public static void glGetTexParameteriv ( int target,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.glGetTexParameteriv$MH, "glGetTexParameteriv");
        try {
            mh$.invokeExact(target, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glHint$MH() {
        return RuntimeHelper.requireNonNull(constants$654.glHint$MH,"glHint");
    }
    public static void glHint ( int target,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.glHint$MH, "glHint");
        try {
            mh$.invokeExact(target, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexMask$MH() {
        return RuntimeHelper.requireNonNull(constants$655.glIndexMask$MH,"glIndexMask");
    }
    public static void glIndexMask ( int mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.glIndexMask$MH, "glIndexMask");
        try {
            mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$655.glIndexPointer$MH,"glIndexPointer");
    }
    public static void glIndexPointer ( int type,  int stride,  Addressable pointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.glIndexPointer$MH, "glIndexPointer");
        try {
            mh$.invokeExact(type, stride, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexd$MH() {
        return RuntimeHelper.requireNonNull(constants$655.glIndexd$MH,"glIndexd");
    }
    public static void glIndexd ( double c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.glIndexd$MH, "glIndexd");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexdv$MH() {
        return RuntimeHelper.requireNonNull(constants$655.glIndexdv$MH,"glIndexdv");
    }
    public static void glIndexdv ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.glIndexdv$MH, "glIndexdv");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexf$MH() {
        return RuntimeHelper.requireNonNull(constants$655.glIndexf$MH,"glIndexf");
    }
    public static void glIndexf ( float c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.glIndexf$MH, "glIndexf");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexfv$MH() {
        return RuntimeHelper.requireNonNull(constants$655.glIndexfv$MH,"glIndexfv");
    }
    public static void glIndexfv ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.glIndexfv$MH, "glIndexfv");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexi$MH() {
        return RuntimeHelper.requireNonNull(constants$656.glIndexi$MH,"glIndexi");
    }
    public static void glIndexi ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.glIndexi$MH, "glIndexi");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexiv$MH() {
        return RuntimeHelper.requireNonNull(constants$656.glIndexiv$MH,"glIndexiv");
    }
    public static void glIndexiv ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.glIndexiv$MH, "glIndexiv");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexs$MH() {
        return RuntimeHelper.requireNonNull(constants$656.glIndexs$MH,"glIndexs");
    }
    public static void glIndexs ( short c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.glIndexs$MH, "glIndexs");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexsv$MH() {
        return RuntimeHelper.requireNonNull(constants$656.glIndexsv$MH,"glIndexsv");
    }
    public static void glIndexsv ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.glIndexsv$MH, "glIndexsv");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexub$MH() {
        return RuntimeHelper.requireNonNull(constants$656.glIndexub$MH,"glIndexub");
    }
    public static void glIndexub ( byte c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.glIndexub$MH, "glIndexub");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIndexubv$MH() {
        return RuntimeHelper.requireNonNull(constants$656.glIndexubv$MH,"glIndexubv");
    }
    public static void glIndexubv ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.glIndexubv$MH, "glIndexubv");
        try {
            mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glInitNames$MH() {
        return RuntimeHelper.requireNonNull(constants$657.glInitNames$MH,"glInitNames");
    }
    public static void glInitNames () {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.glInitNames$MH, "glInitNames");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glInterleavedArrays$MH() {
        return RuntimeHelper.requireNonNull(constants$657.glInterleavedArrays$MH,"glInterleavedArrays");
    }
    public static void glInterleavedArrays ( int format,  int stride,  Addressable pointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.glInterleavedArrays$MH, "glInterleavedArrays");
        try {
            mh$.invokeExact(format, stride, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIsEnabled$MH() {
        return RuntimeHelper.requireNonNull(constants$657.glIsEnabled$MH,"glIsEnabled");
    }
    public static byte glIsEnabled ( int cap) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.glIsEnabled$MH, "glIsEnabled");
        try {
            return (byte)mh$.invokeExact(cap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIsList$MH() {
        return RuntimeHelper.requireNonNull(constants$657.glIsList$MH,"glIsList");
    }
    public static byte glIsList ( int list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.glIsList$MH, "glIsList");
        try {
            return (byte)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glIsTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$657.glIsTexture$MH,"glIsTexture");
    }
    public static byte glIsTexture ( int texture) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.glIsTexture$MH, "glIsTexture");
        try {
            return (byte)mh$.invokeExact(texture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLightModelf$MH() {
        return RuntimeHelper.requireNonNull(constants$657.glLightModelf$MH,"glLightModelf");
    }
    public static void glLightModelf ( int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.glLightModelf$MH, "glLightModelf");
        try {
            mh$.invokeExact(pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLightModelfv$MH() {
        return RuntimeHelper.requireNonNull(constants$658.glLightModelfv$MH,"glLightModelfv");
    }
    public static void glLightModelfv ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.glLightModelfv$MH, "glLightModelfv");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLightModeli$MH() {
        return RuntimeHelper.requireNonNull(constants$658.glLightModeli$MH,"glLightModeli");
    }
    public static void glLightModeli ( int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.glLightModeli$MH, "glLightModeli");
        try {
            mh$.invokeExact(pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLightModeliv$MH() {
        return RuntimeHelper.requireNonNull(constants$658.glLightModeliv$MH,"glLightModeliv");
    }
    public static void glLightModeliv ( int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.glLightModeliv$MH, "glLightModeliv");
        try {
            mh$.invokeExact(pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLightf$MH() {
        return RuntimeHelper.requireNonNull(constants$658.glLightf$MH,"glLightf");
    }
    public static void glLightf ( int light,  int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.glLightf$MH, "glLightf");
        try {
            mh$.invokeExact(light, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLightfv$MH() {
        return RuntimeHelper.requireNonNull(constants$658.glLightfv$MH,"glLightfv");
    }
    public static void glLightfv ( int light,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.glLightfv$MH, "glLightfv");
        try {
            mh$.invokeExact(light, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLighti$MH() {
        return RuntimeHelper.requireNonNull(constants$658.glLighti$MH,"glLighti");
    }
    public static void glLighti ( int light,  int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.glLighti$MH, "glLighti");
        try {
            mh$.invokeExact(light, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLightiv$MH() {
        return RuntimeHelper.requireNonNull(constants$659.glLightiv$MH,"glLightiv");
    }
    public static void glLightiv ( int light,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.glLightiv$MH, "glLightiv");
        try {
            mh$.invokeExact(light, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLineStipple$MH() {
        return RuntimeHelper.requireNonNull(constants$659.glLineStipple$MH,"glLineStipple");
    }
    public static void glLineStipple ( int factor,  short pattern) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.glLineStipple$MH, "glLineStipple");
        try {
            mh$.invokeExact(factor, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLineWidth$MH() {
        return RuntimeHelper.requireNonNull(constants$659.glLineWidth$MH,"glLineWidth");
    }
    public static void glLineWidth ( float width) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.glLineWidth$MH, "glLineWidth");
        try {
            mh$.invokeExact(width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glListBase$MH() {
        return RuntimeHelper.requireNonNull(constants$659.glListBase$MH,"glListBase");
    }
    public static void glListBase ( int base) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.glListBase$MH, "glListBase");
        try {
            mh$.invokeExact(base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLoadIdentity$MH() {
        return RuntimeHelper.requireNonNull(constants$659.glLoadIdentity$MH,"glLoadIdentity");
    }
    public static void glLoadIdentity () {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.glLoadIdentity$MH, "glLoadIdentity");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLoadMatrixd$MH() {
        return RuntimeHelper.requireNonNull(constants$659.glLoadMatrixd$MH,"glLoadMatrixd");
    }
    public static void glLoadMatrixd ( Addressable m) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.glLoadMatrixd$MH, "glLoadMatrixd");
        try {
            mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLoadMatrixf$MH() {
        return RuntimeHelper.requireNonNull(constants$660.glLoadMatrixf$MH,"glLoadMatrixf");
    }
    public static void glLoadMatrixf ( Addressable m) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.glLoadMatrixf$MH, "glLoadMatrixf");
        try {
            mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLoadName$MH() {
        return RuntimeHelper.requireNonNull(constants$660.glLoadName$MH,"glLoadName");
    }
    public static void glLoadName ( int name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.glLoadName$MH, "glLoadName");
        try {
            mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glLogicOp$MH() {
        return RuntimeHelper.requireNonNull(constants$660.glLogicOp$MH,"glLogicOp");
    }
    public static void glLogicOp ( int opcode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.glLogicOp$MH, "glLogicOp");
        try {
            mh$.invokeExact(opcode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMap1d$MH() {
        return RuntimeHelper.requireNonNull(constants$660.glMap1d$MH,"glMap1d");
    }
    public static void glMap1d ( int target,  double u1,  double u2,  int stride,  int order,  Addressable points) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.glMap1d$MH, "glMap1d");
        try {
            mh$.invokeExact(target, u1, u2, stride, order, points);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMap1f$MH() {
        return RuntimeHelper.requireNonNull(constants$660.glMap1f$MH,"glMap1f");
    }
    public static void glMap1f ( int target,  float u1,  float u2,  int stride,  int order,  Addressable points) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.glMap1f$MH, "glMap1f");
        try {
            mh$.invokeExact(target, u1, u2, stride, order, points);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMap2d$MH() {
        return RuntimeHelper.requireNonNull(constants$660.glMap2d$MH,"glMap2d");
    }
    public static void glMap2d ( int target,  double u1,  double u2,  int ustride,  int uorder,  double v1,  double v2,  int vstride,  int vorder,  Addressable points) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.glMap2d$MH, "glMap2d");
        try {
            mh$.invokeExact(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMap2f$MH() {
        return RuntimeHelper.requireNonNull(constants$661.glMap2f$MH,"glMap2f");
    }
    public static void glMap2f ( int target,  float u1,  float u2,  int ustride,  int uorder,  float v1,  float v2,  int vstride,  int vorder,  Addressable points) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.glMap2f$MH, "glMap2f");
        try {
            mh$.invokeExact(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMapGrid1d$MH() {
        return RuntimeHelper.requireNonNull(constants$661.glMapGrid1d$MH,"glMapGrid1d");
    }
    public static void glMapGrid1d ( int un,  double u1,  double u2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.glMapGrid1d$MH, "glMapGrid1d");
        try {
            mh$.invokeExact(un, u1, u2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMapGrid1f$MH() {
        return RuntimeHelper.requireNonNull(constants$661.glMapGrid1f$MH,"glMapGrid1f");
    }
    public static void glMapGrid1f ( int un,  float u1,  float u2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.glMapGrid1f$MH, "glMapGrid1f");
        try {
            mh$.invokeExact(un, u1, u2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMapGrid2d$MH() {
        return RuntimeHelper.requireNonNull(constants$661.glMapGrid2d$MH,"glMapGrid2d");
    }
    public static void glMapGrid2d ( int un,  double u1,  double u2,  int vn,  double v1,  double v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.glMapGrid2d$MH, "glMapGrid2d");
        try {
            mh$.invokeExact(un, u1, u2, vn, v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMapGrid2f$MH() {
        return RuntimeHelper.requireNonNull(constants$661.glMapGrid2f$MH,"glMapGrid2f");
    }
    public static void glMapGrid2f ( int un,  float u1,  float u2,  int vn,  float v1,  float v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.glMapGrid2f$MH, "glMapGrid2f");
        try {
            mh$.invokeExact(un, u1, u2, vn, v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMaterialf$MH() {
        return RuntimeHelper.requireNonNull(constants$661.glMaterialf$MH,"glMaterialf");
    }
    public static void glMaterialf ( int face,  int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.glMaterialf$MH, "glMaterialf");
        try {
            mh$.invokeExact(face, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMaterialfv$MH() {
        return RuntimeHelper.requireNonNull(constants$662.glMaterialfv$MH,"glMaterialfv");
    }
    public static void glMaterialfv ( int face,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$662.glMaterialfv$MH, "glMaterialfv");
        try {
            mh$.invokeExact(face, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMateriali$MH() {
        return RuntimeHelper.requireNonNull(constants$662.glMateriali$MH,"glMateriali");
    }
    public static void glMateriali ( int face,  int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$662.glMateriali$MH, "glMateriali");
        try {
            mh$.invokeExact(face, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMaterialiv$MH() {
        return RuntimeHelper.requireNonNull(constants$662.glMaterialiv$MH,"glMaterialiv");
    }
    public static void glMaterialiv ( int face,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$662.glMaterialiv$MH, "glMaterialiv");
        try {
            mh$.invokeExact(face, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMatrixMode$MH() {
        return RuntimeHelper.requireNonNull(constants$662.glMatrixMode$MH,"glMatrixMode");
    }
    public static void glMatrixMode ( int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$662.glMatrixMode$MH, "glMatrixMode");
        try {
            mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMultMatrixd$MH() {
        return RuntimeHelper.requireNonNull(constants$662.glMultMatrixd$MH,"glMultMatrixd");
    }
    public static void glMultMatrixd ( Addressable m) {
        var mh$ = RuntimeHelper.requireNonNull(constants$662.glMultMatrixd$MH, "glMultMatrixd");
        try {
            mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glMultMatrixf$MH() {
        return RuntimeHelper.requireNonNull(constants$662.glMultMatrixf$MH,"glMultMatrixf");
    }
    public static void glMultMatrixf ( Addressable m) {
        var mh$ = RuntimeHelper.requireNonNull(constants$662.glMultMatrixf$MH, "glMultMatrixf");
        try {
            mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNewList$MH() {
        return RuntimeHelper.requireNonNull(constants$663.glNewList$MH,"glNewList");
    }
    public static void glNewList ( int list,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$663.glNewList$MH, "glNewList");
        try {
            mh$.invokeExact(list, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3b$MH() {
        return RuntimeHelper.requireNonNull(constants$663.glNormal3b$MH,"glNormal3b");
    }
    public static void glNormal3b ( byte nx,  byte ny,  byte nz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$663.glNormal3b$MH, "glNormal3b");
        try {
            mh$.invokeExact(nx, ny, nz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3bv$MH() {
        return RuntimeHelper.requireNonNull(constants$663.glNormal3bv$MH,"glNormal3bv");
    }
    public static void glNormal3bv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$663.glNormal3bv$MH, "glNormal3bv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3d$MH() {
        return RuntimeHelper.requireNonNull(constants$663.glNormal3d$MH,"glNormal3d");
    }
    public static void glNormal3d ( double nx,  double ny,  double nz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$663.glNormal3d$MH, "glNormal3d");
        try {
            mh$.invokeExact(nx, ny, nz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3dv$MH() {
        return RuntimeHelper.requireNonNull(constants$663.glNormal3dv$MH,"glNormal3dv");
    }
    public static void glNormal3dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$663.glNormal3dv$MH, "glNormal3dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3f$MH() {
        return RuntimeHelper.requireNonNull(constants$663.glNormal3f$MH,"glNormal3f");
    }
    public static void glNormal3f ( float nx,  float ny,  float nz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$663.glNormal3f$MH, "glNormal3f");
        try {
            mh$.invokeExact(nx, ny, nz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3fv$MH() {
        return RuntimeHelper.requireNonNull(constants$664.glNormal3fv$MH,"glNormal3fv");
    }
    public static void glNormal3fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$664.glNormal3fv$MH, "glNormal3fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3i$MH() {
        return RuntimeHelper.requireNonNull(constants$664.glNormal3i$MH,"glNormal3i");
    }
    public static void glNormal3i ( int nx,  int ny,  int nz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$664.glNormal3i$MH, "glNormal3i");
        try {
            mh$.invokeExact(nx, ny, nz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3iv$MH() {
        return RuntimeHelper.requireNonNull(constants$664.glNormal3iv$MH,"glNormal3iv");
    }
    public static void glNormal3iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$664.glNormal3iv$MH, "glNormal3iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3s$MH() {
        return RuntimeHelper.requireNonNull(constants$664.glNormal3s$MH,"glNormal3s");
    }
    public static void glNormal3s ( short nx,  short ny,  short nz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$664.glNormal3s$MH, "glNormal3s");
        try {
            mh$.invokeExact(nx, ny, nz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormal3sv$MH() {
        return RuntimeHelper.requireNonNull(constants$664.glNormal3sv$MH,"glNormal3sv");
    }
    public static void glNormal3sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$664.glNormal3sv$MH, "glNormal3sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glNormalPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$664.glNormalPointer$MH,"glNormalPointer");
    }
    public static void glNormalPointer ( int type,  int stride,  Addressable pointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$664.glNormalPointer$MH, "glNormalPointer");
        try {
            mh$.invokeExact(type, stride, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glOrtho$MH() {
        return RuntimeHelper.requireNonNull(constants$665.glOrtho$MH,"glOrtho");
    }
    public static void glOrtho ( double left,  double right,  double bottom,  double top,  double zNear,  double zFar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$665.glOrtho$MH, "glOrtho");
        try {
            mh$.invokeExact(left, right, bottom, top, zNear, zFar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPassThrough$MH() {
        return RuntimeHelper.requireNonNull(constants$665.glPassThrough$MH,"glPassThrough");
    }
    public static void glPassThrough ( float token) {
        var mh$ = RuntimeHelper.requireNonNull(constants$665.glPassThrough$MH, "glPassThrough");
        try {
            mh$.invokeExact(token);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPixelMapfv$MH() {
        return RuntimeHelper.requireNonNull(constants$665.glPixelMapfv$MH,"glPixelMapfv");
    }
    public static void glPixelMapfv ( int map,  int mapsize,  Addressable values) {
        var mh$ = RuntimeHelper.requireNonNull(constants$665.glPixelMapfv$MH, "glPixelMapfv");
        try {
            mh$.invokeExact(map, mapsize, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPixelMapuiv$MH() {
        return RuntimeHelper.requireNonNull(constants$665.glPixelMapuiv$MH,"glPixelMapuiv");
    }
    public static void glPixelMapuiv ( int map,  int mapsize,  Addressable values) {
        var mh$ = RuntimeHelper.requireNonNull(constants$665.glPixelMapuiv$MH, "glPixelMapuiv");
        try {
            mh$.invokeExact(map, mapsize, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPixelMapusv$MH() {
        return RuntimeHelper.requireNonNull(constants$665.glPixelMapusv$MH,"glPixelMapusv");
    }
    public static void glPixelMapusv ( int map,  int mapsize,  Addressable values) {
        var mh$ = RuntimeHelper.requireNonNull(constants$665.glPixelMapusv$MH, "glPixelMapusv");
        try {
            mh$.invokeExact(map, mapsize, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPixelStoref$MH() {
        return RuntimeHelper.requireNonNull(constants$665.glPixelStoref$MH,"glPixelStoref");
    }
    public static void glPixelStoref ( int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$665.glPixelStoref$MH, "glPixelStoref");
        try {
            mh$.invokeExact(pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPixelStorei$MH() {
        return RuntimeHelper.requireNonNull(constants$666.glPixelStorei$MH,"glPixelStorei");
    }
    public static void glPixelStorei ( int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$666.glPixelStorei$MH, "glPixelStorei");
        try {
            mh$.invokeExact(pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPixelTransferf$MH() {
        return RuntimeHelper.requireNonNull(constants$666.glPixelTransferf$MH,"glPixelTransferf");
    }
    public static void glPixelTransferf ( int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$666.glPixelTransferf$MH, "glPixelTransferf");
        try {
            mh$.invokeExact(pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPixelTransferi$MH() {
        return RuntimeHelper.requireNonNull(constants$666.glPixelTransferi$MH,"glPixelTransferi");
    }
    public static void glPixelTransferi ( int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$666.glPixelTransferi$MH, "glPixelTransferi");
        try {
            mh$.invokeExact(pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPixelZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$666.glPixelZoom$MH,"glPixelZoom");
    }
    public static void glPixelZoom ( float xfactor,  float yfactor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$666.glPixelZoom$MH, "glPixelZoom");
        try {
            mh$.invokeExact(xfactor, yfactor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPointSize$MH() {
        return RuntimeHelper.requireNonNull(constants$666.glPointSize$MH,"glPointSize");
    }
    public static void glPointSize ( float size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$666.glPointSize$MH, "glPointSize");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPolygonMode$MH() {
        return RuntimeHelper.requireNonNull(constants$666.glPolygonMode$MH,"glPolygonMode");
    }
    public static void glPolygonMode ( int face,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$666.glPolygonMode$MH, "glPolygonMode");
        try {
            mh$.invokeExact(face, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPolygonOffset$MH() {
        return RuntimeHelper.requireNonNull(constants$667.glPolygonOffset$MH,"glPolygonOffset");
    }
    public static void glPolygonOffset ( float factor,  float units) {
        var mh$ = RuntimeHelper.requireNonNull(constants$667.glPolygonOffset$MH, "glPolygonOffset");
        try {
            mh$.invokeExact(factor, units);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPolygonStipple$MH() {
        return RuntimeHelper.requireNonNull(constants$667.glPolygonStipple$MH,"glPolygonStipple");
    }
    public static void glPolygonStipple ( Addressable mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$667.glPolygonStipple$MH, "glPolygonStipple");
        try {
            mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPopAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$667.glPopAttrib$MH,"glPopAttrib");
    }
    public static void glPopAttrib () {
        var mh$ = RuntimeHelper.requireNonNull(constants$667.glPopAttrib$MH, "glPopAttrib");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPopClientAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$667.glPopClientAttrib$MH,"glPopClientAttrib");
    }
    public static void glPopClientAttrib () {
        var mh$ = RuntimeHelper.requireNonNull(constants$667.glPopClientAttrib$MH, "glPopClientAttrib");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPopMatrix$MH() {
        return RuntimeHelper.requireNonNull(constants$667.glPopMatrix$MH,"glPopMatrix");
    }
    public static void glPopMatrix () {
        var mh$ = RuntimeHelper.requireNonNull(constants$667.glPopMatrix$MH, "glPopMatrix");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPopName$MH() {
        return RuntimeHelper.requireNonNull(constants$667.glPopName$MH,"glPopName");
    }
    public static void glPopName () {
        var mh$ = RuntimeHelper.requireNonNull(constants$667.glPopName$MH, "glPopName");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPrioritizeTextures$MH() {
        return RuntimeHelper.requireNonNull(constants$668.glPrioritizeTextures$MH,"glPrioritizeTextures");
    }
    public static void glPrioritizeTextures ( int n,  Addressable textures,  Addressable priorities) {
        var mh$ = RuntimeHelper.requireNonNull(constants$668.glPrioritizeTextures$MH, "glPrioritizeTextures");
        try {
            mh$.invokeExact(n, textures, priorities);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPushAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$668.glPushAttrib$MH,"glPushAttrib");
    }
    public static void glPushAttrib ( int mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$668.glPushAttrib$MH, "glPushAttrib");
        try {
            mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPushClientAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$668.glPushClientAttrib$MH,"glPushClientAttrib");
    }
    public static void glPushClientAttrib ( int mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$668.glPushClientAttrib$MH, "glPushClientAttrib");
        try {
            mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPushMatrix$MH() {
        return RuntimeHelper.requireNonNull(constants$668.glPushMatrix$MH,"glPushMatrix");
    }
    public static void glPushMatrix () {
        var mh$ = RuntimeHelper.requireNonNull(constants$668.glPushMatrix$MH, "glPushMatrix");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glPushName$MH() {
        return RuntimeHelper.requireNonNull(constants$668.glPushName$MH,"glPushName");
    }
    public static void glPushName ( int name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$668.glPushName$MH, "glPushName");
        try {
            mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos2d$MH() {
        return RuntimeHelper.requireNonNull(constants$668.glRasterPos2d$MH,"glRasterPos2d");
    }
    public static void glRasterPos2d ( double x,  double y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$668.glRasterPos2d$MH, "glRasterPos2d");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos2dv$MH() {
        return RuntimeHelper.requireNonNull(constants$669.glRasterPos2dv$MH,"glRasterPos2dv");
    }
    public static void glRasterPos2dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.glRasterPos2dv$MH, "glRasterPos2dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos2f$MH() {
        return RuntimeHelper.requireNonNull(constants$669.glRasterPos2f$MH,"glRasterPos2f");
    }
    public static void glRasterPos2f ( float x,  float y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.glRasterPos2f$MH, "glRasterPos2f");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos2fv$MH() {
        return RuntimeHelper.requireNonNull(constants$669.glRasterPos2fv$MH,"glRasterPos2fv");
    }
    public static void glRasterPos2fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.glRasterPos2fv$MH, "glRasterPos2fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos2i$MH() {
        return RuntimeHelper.requireNonNull(constants$669.glRasterPos2i$MH,"glRasterPos2i");
    }
    public static void glRasterPos2i ( int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.glRasterPos2i$MH, "glRasterPos2i");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos2iv$MH() {
        return RuntimeHelper.requireNonNull(constants$669.glRasterPos2iv$MH,"glRasterPos2iv");
    }
    public static void glRasterPos2iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.glRasterPos2iv$MH, "glRasterPos2iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos2s$MH() {
        return RuntimeHelper.requireNonNull(constants$669.glRasterPos2s$MH,"glRasterPos2s");
    }
    public static void glRasterPos2s ( short x,  short y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.glRasterPos2s$MH, "glRasterPos2s");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos2sv$MH() {
        return RuntimeHelper.requireNonNull(constants$670.glRasterPos2sv$MH,"glRasterPos2sv");
    }
    public static void glRasterPos2sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.glRasterPos2sv$MH, "glRasterPos2sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos3d$MH() {
        return RuntimeHelper.requireNonNull(constants$670.glRasterPos3d$MH,"glRasterPos3d");
    }
    public static void glRasterPos3d ( double x,  double y,  double z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.glRasterPos3d$MH, "glRasterPos3d");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos3dv$MH() {
        return RuntimeHelper.requireNonNull(constants$670.glRasterPos3dv$MH,"glRasterPos3dv");
    }
    public static void glRasterPos3dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.glRasterPos3dv$MH, "glRasterPos3dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos3f$MH() {
        return RuntimeHelper.requireNonNull(constants$670.glRasterPos3f$MH,"glRasterPos3f");
    }
    public static void glRasterPos3f ( float x,  float y,  float z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.glRasterPos3f$MH, "glRasterPos3f");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos3fv$MH() {
        return RuntimeHelper.requireNonNull(constants$670.glRasterPos3fv$MH,"glRasterPos3fv");
    }
    public static void glRasterPos3fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.glRasterPos3fv$MH, "glRasterPos3fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos3i$MH() {
        return RuntimeHelper.requireNonNull(constants$670.glRasterPos3i$MH,"glRasterPos3i");
    }
    public static void glRasterPos3i ( int x,  int y,  int z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.glRasterPos3i$MH, "glRasterPos3i");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos3iv$MH() {
        return RuntimeHelper.requireNonNull(constants$671.glRasterPos3iv$MH,"glRasterPos3iv");
    }
    public static void glRasterPos3iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.glRasterPos3iv$MH, "glRasterPos3iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos3s$MH() {
        return RuntimeHelper.requireNonNull(constants$671.glRasterPos3s$MH,"glRasterPos3s");
    }
    public static void glRasterPos3s ( short x,  short y,  short z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.glRasterPos3s$MH, "glRasterPos3s");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos3sv$MH() {
        return RuntimeHelper.requireNonNull(constants$671.glRasterPos3sv$MH,"glRasterPos3sv");
    }
    public static void glRasterPos3sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.glRasterPos3sv$MH, "glRasterPos3sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos4d$MH() {
        return RuntimeHelper.requireNonNull(constants$671.glRasterPos4d$MH,"glRasterPos4d");
    }
    public static void glRasterPos4d ( double x,  double y,  double z,  double w) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.glRasterPos4d$MH, "glRasterPos4d");
        try {
            mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos4dv$MH() {
        return RuntimeHelper.requireNonNull(constants$671.glRasterPos4dv$MH,"glRasterPos4dv");
    }
    public static void glRasterPos4dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.glRasterPos4dv$MH, "glRasterPos4dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos4f$MH() {
        return RuntimeHelper.requireNonNull(constants$671.glRasterPos4f$MH,"glRasterPos4f");
    }
    public static void glRasterPos4f ( float x,  float y,  float z,  float w) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.glRasterPos4f$MH, "glRasterPos4f");
        try {
            mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos4fv$MH() {
        return RuntimeHelper.requireNonNull(constants$672.glRasterPos4fv$MH,"glRasterPos4fv");
    }
    public static void glRasterPos4fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.glRasterPos4fv$MH, "glRasterPos4fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos4i$MH() {
        return RuntimeHelper.requireNonNull(constants$672.glRasterPos4i$MH,"glRasterPos4i");
    }
    public static void glRasterPos4i ( int x,  int y,  int z,  int w) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.glRasterPos4i$MH, "glRasterPos4i");
        try {
            mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos4iv$MH() {
        return RuntimeHelper.requireNonNull(constants$672.glRasterPos4iv$MH,"glRasterPos4iv");
    }
    public static void glRasterPos4iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.glRasterPos4iv$MH, "glRasterPos4iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos4s$MH() {
        return RuntimeHelper.requireNonNull(constants$672.glRasterPos4s$MH,"glRasterPos4s");
    }
    public static void glRasterPos4s ( short x,  short y,  short z,  short w) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.glRasterPos4s$MH, "glRasterPos4s");
        try {
            mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRasterPos4sv$MH() {
        return RuntimeHelper.requireNonNull(constants$672.glRasterPos4sv$MH,"glRasterPos4sv");
    }
    public static void glRasterPos4sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.glRasterPos4sv$MH, "glRasterPos4sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glReadBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$672.glReadBuffer$MH,"glReadBuffer");
    }
    public static void glReadBuffer ( int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.glReadBuffer$MH, "glReadBuffer");
        try {
            mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glReadPixels$MH() {
        return RuntimeHelper.requireNonNull(constants$673.glReadPixels$MH,"glReadPixels");
    }
    public static void glReadPixels ( int x,  int y,  int width,  int height,  int format,  int type,  Addressable pixels) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.glReadPixels$MH, "glReadPixels");
        try {
            mh$.invokeExact(x, y, width, height, format, type, pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRectd$MH() {
        return RuntimeHelper.requireNonNull(constants$673.glRectd$MH,"glRectd");
    }
    public static void glRectd ( double x1,  double y1,  double x2,  double y2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.glRectd$MH, "glRectd");
        try {
            mh$.invokeExact(x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRectdv$MH() {
        return RuntimeHelper.requireNonNull(constants$673.glRectdv$MH,"glRectdv");
    }
    public static void glRectdv ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.glRectdv$MH, "glRectdv");
        try {
            mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRectf$MH() {
        return RuntimeHelper.requireNonNull(constants$673.glRectf$MH,"glRectf");
    }
    public static void glRectf ( float x1,  float y1,  float x2,  float y2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.glRectf$MH, "glRectf");
        try {
            mh$.invokeExact(x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRectfv$MH() {
        return RuntimeHelper.requireNonNull(constants$673.glRectfv$MH,"glRectfv");
    }
    public static void glRectfv ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.glRectfv$MH, "glRectfv");
        try {
            mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRecti$MH() {
        return RuntimeHelper.requireNonNull(constants$673.glRecti$MH,"glRecti");
    }
    public static void glRecti ( int x1,  int y1,  int x2,  int y2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.glRecti$MH, "glRecti");
        try {
            mh$.invokeExact(x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRectiv$MH() {
        return RuntimeHelper.requireNonNull(constants$674.glRectiv$MH,"glRectiv");
    }
    public static void glRectiv ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.glRectiv$MH, "glRectiv");
        try {
            mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRects$MH() {
        return RuntimeHelper.requireNonNull(constants$674.glRects$MH,"glRects");
    }
    public static void glRects ( short x1,  short y1,  short x2,  short y2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.glRects$MH, "glRects");
        try {
            mh$.invokeExact(x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRectsv$MH() {
        return RuntimeHelper.requireNonNull(constants$674.glRectsv$MH,"glRectsv");
    }
    public static void glRectsv ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.glRectsv$MH, "glRectsv");
        try {
            mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRenderMode$MH() {
        return RuntimeHelper.requireNonNull(constants$674.glRenderMode$MH,"glRenderMode");
    }
    public static int glRenderMode ( int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.glRenderMode$MH, "glRenderMode");
        try {
            return (int)mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRotated$MH() {
        return RuntimeHelper.requireNonNull(constants$674.glRotated$MH,"glRotated");
    }
    public static void glRotated ( double angle,  double x,  double y,  double z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.glRotated$MH, "glRotated");
        try {
            mh$.invokeExact(angle, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glRotatef$MH() {
        return RuntimeHelper.requireNonNull(constants$674.glRotatef$MH,"glRotatef");
    }
    public static void glRotatef ( float angle,  float x,  float y,  float z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.glRotatef$MH, "glRotatef");
        try {
            mh$.invokeExact(angle, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glScaled$MH() {
        return RuntimeHelper.requireNonNull(constants$675.glScaled$MH,"glScaled");
    }
    public static void glScaled ( double x,  double y,  double z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.glScaled$MH, "glScaled");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glScalef$MH() {
        return RuntimeHelper.requireNonNull(constants$675.glScalef$MH,"glScalef");
    }
    public static void glScalef ( float x,  float y,  float z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.glScalef$MH, "glScalef");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glScissor$MH() {
        return RuntimeHelper.requireNonNull(constants$675.glScissor$MH,"glScissor");
    }
    public static void glScissor ( int x,  int y,  int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.glScissor$MH, "glScissor");
        try {
            mh$.invokeExact(x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glSelectBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$675.glSelectBuffer$MH,"glSelectBuffer");
    }
    public static void glSelectBuffer ( int size,  Addressable buffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.glSelectBuffer$MH, "glSelectBuffer");
        try {
            mh$.invokeExact(size, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glShadeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$675.glShadeModel$MH,"glShadeModel");
    }
    public static void glShadeModel ( int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.glShadeModel$MH, "glShadeModel");
        try {
            mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glStencilFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$675.glStencilFunc$MH,"glStencilFunc");
    }
    public static void glStencilFunc ( int func,  int ref,  int mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.glStencilFunc$MH, "glStencilFunc");
        try {
            mh$.invokeExact(func, ref, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glStencilMask$MH() {
        return RuntimeHelper.requireNonNull(constants$676.glStencilMask$MH,"glStencilMask");
    }
    public static void glStencilMask ( int mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.glStencilMask$MH, "glStencilMask");
        try {
            mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glStencilOp$MH() {
        return RuntimeHelper.requireNonNull(constants$676.glStencilOp$MH,"glStencilOp");
    }
    public static void glStencilOp ( int fail,  int zfail,  int zpass) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.glStencilOp$MH, "glStencilOp");
        try {
            mh$.invokeExact(fail, zfail, zpass);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord1d$MH() {
        return RuntimeHelper.requireNonNull(constants$676.glTexCoord1d$MH,"glTexCoord1d");
    }
    public static void glTexCoord1d ( double s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.glTexCoord1d$MH, "glTexCoord1d");
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord1dv$MH() {
        return RuntimeHelper.requireNonNull(constants$676.glTexCoord1dv$MH,"glTexCoord1dv");
    }
    public static void glTexCoord1dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.glTexCoord1dv$MH, "glTexCoord1dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord1f$MH() {
        return RuntimeHelper.requireNonNull(constants$676.glTexCoord1f$MH,"glTexCoord1f");
    }
    public static void glTexCoord1f ( float s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.glTexCoord1f$MH, "glTexCoord1f");
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord1fv$MH() {
        return RuntimeHelper.requireNonNull(constants$676.glTexCoord1fv$MH,"glTexCoord1fv");
    }
    public static void glTexCoord1fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.glTexCoord1fv$MH, "glTexCoord1fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord1i$MH() {
        return RuntimeHelper.requireNonNull(constants$677.glTexCoord1i$MH,"glTexCoord1i");
    }
    public static void glTexCoord1i ( int s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.glTexCoord1i$MH, "glTexCoord1i");
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord1iv$MH() {
        return RuntimeHelper.requireNonNull(constants$677.glTexCoord1iv$MH,"glTexCoord1iv");
    }
    public static void glTexCoord1iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.glTexCoord1iv$MH, "glTexCoord1iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord1s$MH() {
        return RuntimeHelper.requireNonNull(constants$677.glTexCoord1s$MH,"glTexCoord1s");
    }
    public static void glTexCoord1s ( short s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.glTexCoord1s$MH, "glTexCoord1s");
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord1sv$MH() {
        return RuntimeHelper.requireNonNull(constants$677.glTexCoord1sv$MH,"glTexCoord1sv");
    }
    public static void glTexCoord1sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.glTexCoord1sv$MH, "glTexCoord1sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord2d$MH() {
        return RuntimeHelper.requireNonNull(constants$677.glTexCoord2d$MH,"glTexCoord2d");
    }
    public static void glTexCoord2d ( double s,  double t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.glTexCoord2d$MH, "glTexCoord2d");
        try {
            mh$.invokeExact(s, t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord2dv$MH() {
        return RuntimeHelper.requireNonNull(constants$677.glTexCoord2dv$MH,"glTexCoord2dv");
    }
    public static void glTexCoord2dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.glTexCoord2dv$MH, "glTexCoord2dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord2f$MH() {
        return RuntimeHelper.requireNonNull(constants$678.glTexCoord2f$MH,"glTexCoord2f");
    }
    public static void glTexCoord2f ( float s,  float t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.glTexCoord2f$MH, "glTexCoord2f");
        try {
            mh$.invokeExact(s, t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord2fv$MH() {
        return RuntimeHelper.requireNonNull(constants$678.glTexCoord2fv$MH,"glTexCoord2fv");
    }
    public static void glTexCoord2fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.glTexCoord2fv$MH, "glTexCoord2fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord2i$MH() {
        return RuntimeHelper.requireNonNull(constants$678.glTexCoord2i$MH,"glTexCoord2i");
    }
    public static void glTexCoord2i ( int s,  int t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.glTexCoord2i$MH, "glTexCoord2i");
        try {
            mh$.invokeExact(s, t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord2iv$MH() {
        return RuntimeHelper.requireNonNull(constants$678.glTexCoord2iv$MH,"glTexCoord2iv");
    }
    public static void glTexCoord2iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.glTexCoord2iv$MH, "glTexCoord2iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord2s$MH() {
        return RuntimeHelper.requireNonNull(constants$678.glTexCoord2s$MH,"glTexCoord2s");
    }
    public static void glTexCoord2s ( short s,  short t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.glTexCoord2s$MH, "glTexCoord2s");
        try {
            mh$.invokeExact(s, t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord2sv$MH() {
        return RuntimeHelper.requireNonNull(constants$678.glTexCoord2sv$MH,"glTexCoord2sv");
    }
    public static void glTexCoord2sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.glTexCoord2sv$MH, "glTexCoord2sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord3d$MH() {
        return RuntimeHelper.requireNonNull(constants$679.glTexCoord3d$MH,"glTexCoord3d");
    }
    public static void glTexCoord3d ( double s,  double t,  double r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.glTexCoord3d$MH, "glTexCoord3d");
        try {
            mh$.invokeExact(s, t, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord3dv$MH() {
        return RuntimeHelper.requireNonNull(constants$679.glTexCoord3dv$MH,"glTexCoord3dv");
    }
    public static void glTexCoord3dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.glTexCoord3dv$MH, "glTexCoord3dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord3f$MH() {
        return RuntimeHelper.requireNonNull(constants$679.glTexCoord3f$MH,"glTexCoord3f");
    }
    public static void glTexCoord3f ( float s,  float t,  float r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.glTexCoord3f$MH, "glTexCoord3f");
        try {
            mh$.invokeExact(s, t, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord3fv$MH() {
        return RuntimeHelper.requireNonNull(constants$679.glTexCoord3fv$MH,"glTexCoord3fv");
    }
    public static void glTexCoord3fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.glTexCoord3fv$MH, "glTexCoord3fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord3i$MH() {
        return RuntimeHelper.requireNonNull(constants$679.glTexCoord3i$MH,"glTexCoord3i");
    }
    public static void glTexCoord3i ( int s,  int t,  int r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.glTexCoord3i$MH, "glTexCoord3i");
        try {
            mh$.invokeExact(s, t, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord3iv$MH() {
        return RuntimeHelper.requireNonNull(constants$679.glTexCoord3iv$MH,"glTexCoord3iv");
    }
    public static void glTexCoord3iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.glTexCoord3iv$MH, "glTexCoord3iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord3s$MH() {
        return RuntimeHelper.requireNonNull(constants$680.glTexCoord3s$MH,"glTexCoord3s");
    }
    public static void glTexCoord3s ( short s,  short t,  short r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.glTexCoord3s$MH, "glTexCoord3s");
        try {
            mh$.invokeExact(s, t, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord3sv$MH() {
        return RuntimeHelper.requireNonNull(constants$680.glTexCoord3sv$MH,"glTexCoord3sv");
    }
    public static void glTexCoord3sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.glTexCoord3sv$MH, "glTexCoord3sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord4d$MH() {
        return RuntimeHelper.requireNonNull(constants$680.glTexCoord4d$MH,"glTexCoord4d");
    }
    public static void glTexCoord4d ( double s,  double t,  double r,  double q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.glTexCoord4d$MH, "glTexCoord4d");
        try {
            mh$.invokeExact(s, t, r, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord4dv$MH() {
        return RuntimeHelper.requireNonNull(constants$680.glTexCoord4dv$MH,"glTexCoord4dv");
    }
    public static void glTexCoord4dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.glTexCoord4dv$MH, "glTexCoord4dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord4f$MH() {
        return RuntimeHelper.requireNonNull(constants$680.glTexCoord4f$MH,"glTexCoord4f");
    }
    public static void glTexCoord4f ( float s,  float t,  float r,  float q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.glTexCoord4f$MH, "glTexCoord4f");
        try {
            mh$.invokeExact(s, t, r, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord4fv$MH() {
        return RuntimeHelper.requireNonNull(constants$680.glTexCoord4fv$MH,"glTexCoord4fv");
    }
    public static void glTexCoord4fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.glTexCoord4fv$MH, "glTexCoord4fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord4i$MH() {
        return RuntimeHelper.requireNonNull(constants$681.glTexCoord4i$MH,"glTexCoord4i");
    }
    public static void glTexCoord4i ( int s,  int t,  int r,  int q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.glTexCoord4i$MH, "glTexCoord4i");
        try {
            mh$.invokeExact(s, t, r, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord4iv$MH() {
        return RuntimeHelper.requireNonNull(constants$681.glTexCoord4iv$MH,"glTexCoord4iv");
    }
    public static void glTexCoord4iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.glTexCoord4iv$MH, "glTexCoord4iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord4s$MH() {
        return RuntimeHelper.requireNonNull(constants$681.glTexCoord4s$MH,"glTexCoord4s");
    }
    public static void glTexCoord4s ( short s,  short t,  short r,  short q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.glTexCoord4s$MH, "glTexCoord4s");
        try {
            mh$.invokeExact(s, t, r, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoord4sv$MH() {
        return RuntimeHelper.requireNonNull(constants$681.glTexCoord4sv$MH,"glTexCoord4sv");
    }
    public static void glTexCoord4sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.glTexCoord4sv$MH, "glTexCoord4sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexCoordPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$681.glTexCoordPointer$MH,"glTexCoordPointer");
    }
    public static void glTexCoordPointer ( int size,  int type,  int stride,  Addressable pointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.glTexCoordPointer$MH, "glTexCoordPointer");
        try {
            mh$.invokeExact(size, type, stride, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexEnvf$MH() {
        return RuntimeHelper.requireNonNull(constants$681.glTexEnvf$MH,"glTexEnvf");
    }
    public static void glTexEnvf ( int target,  int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.glTexEnvf$MH, "glTexEnvf");
        try {
            mh$.invokeExact(target, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexEnvfv$MH() {
        return RuntimeHelper.requireNonNull(constants$682.glTexEnvfv$MH,"glTexEnvfv");
    }
    public static void glTexEnvfv ( int target,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.glTexEnvfv$MH, "glTexEnvfv");
        try {
            mh$.invokeExact(target, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexEnvi$MH() {
        return RuntimeHelper.requireNonNull(constants$682.glTexEnvi$MH,"glTexEnvi");
    }
    public static void glTexEnvi ( int target,  int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.glTexEnvi$MH, "glTexEnvi");
        try {
            mh$.invokeExact(target, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexEnviv$MH() {
        return RuntimeHelper.requireNonNull(constants$682.glTexEnviv$MH,"glTexEnviv");
    }
    public static void glTexEnviv ( int target,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.glTexEnviv$MH, "glTexEnviv");
        try {
            mh$.invokeExact(target, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexGend$MH() {
        return RuntimeHelper.requireNonNull(constants$682.glTexGend$MH,"glTexGend");
    }
    public static void glTexGend ( int coord,  int pname,  double param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.glTexGend$MH, "glTexGend");
        try {
            mh$.invokeExact(coord, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexGendv$MH() {
        return RuntimeHelper.requireNonNull(constants$682.glTexGendv$MH,"glTexGendv");
    }
    public static void glTexGendv ( int coord,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.glTexGendv$MH, "glTexGendv");
        try {
            mh$.invokeExact(coord, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexGenf$MH() {
        return RuntimeHelper.requireNonNull(constants$682.glTexGenf$MH,"glTexGenf");
    }
    public static void glTexGenf ( int coord,  int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.glTexGenf$MH, "glTexGenf");
        try {
            mh$.invokeExact(coord, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexGenfv$MH() {
        return RuntimeHelper.requireNonNull(constants$683.glTexGenfv$MH,"glTexGenfv");
    }
    public static void glTexGenfv ( int coord,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.glTexGenfv$MH, "glTexGenfv");
        try {
            mh$.invokeExact(coord, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexGeni$MH() {
        return RuntimeHelper.requireNonNull(constants$683.glTexGeni$MH,"glTexGeni");
    }
    public static void glTexGeni ( int coord,  int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.glTexGeni$MH, "glTexGeni");
        try {
            mh$.invokeExact(coord, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexGeniv$MH() {
        return RuntimeHelper.requireNonNull(constants$683.glTexGeniv$MH,"glTexGeniv");
    }
    public static void glTexGeniv ( int coord,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.glTexGeniv$MH, "glTexGeniv");
        try {
            mh$.invokeExact(coord, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexImage1D$MH() {
        return RuntimeHelper.requireNonNull(constants$683.glTexImage1D$MH,"glTexImage1D");
    }
    public static void glTexImage1D ( int target,  int level,  int internalformat,  int width,  int border,  int format,  int type,  Addressable pixels) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.glTexImage1D$MH, "glTexImage1D");
        try {
            mh$.invokeExact(target, level, internalformat, width, border, format, type, pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexImage2D$MH() {
        return RuntimeHelper.requireNonNull(constants$683.glTexImage2D$MH,"glTexImage2D");
    }
    public static void glTexImage2D ( int target,  int level,  int internalformat,  int width,  int height,  int border,  int format,  int type,  Addressable pixels) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.glTexImage2D$MH, "glTexImage2D");
        try {
            mh$.invokeExact(target, level, internalformat, width, height, border, format, type, pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexParameterf$MH() {
        return RuntimeHelper.requireNonNull(constants$683.glTexParameterf$MH,"glTexParameterf");
    }
    public static void glTexParameterf ( int target,  int pname,  float param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.glTexParameterf$MH, "glTexParameterf");
        try {
            mh$.invokeExact(target, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexParameterfv$MH() {
        return RuntimeHelper.requireNonNull(constants$684.glTexParameterfv$MH,"glTexParameterfv");
    }
    public static void glTexParameterfv ( int target,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$684.glTexParameterfv$MH, "glTexParameterfv");
        try {
            mh$.invokeExact(target, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexParameteri$MH() {
        return RuntimeHelper.requireNonNull(constants$684.glTexParameteri$MH,"glTexParameteri");
    }
    public static void glTexParameteri ( int target,  int pname,  int param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$684.glTexParameteri$MH, "glTexParameteri");
        try {
            mh$.invokeExact(target, pname, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexParameteriv$MH() {
        return RuntimeHelper.requireNonNull(constants$684.glTexParameteriv$MH,"glTexParameteriv");
    }
    public static void glTexParameteriv ( int target,  int pname,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$684.glTexParameteriv$MH, "glTexParameteriv");
        try {
            mh$.invokeExact(target, pname, params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexSubImage1D$MH() {
        return RuntimeHelper.requireNonNull(constants$684.glTexSubImage1D$MH,"glTexSubImage1D");
    }
    public static void glTexSubImage1D ( int target,  int level,  int xoffset,  int width,  int format,  int type,  Addressable pixels) {
        var mh$ = RuntimeHelper.requireNonNull(constants$684.glTexSubImage1D$MH, "glTexSubImage1D");
        try {
            mh$.invokeExact(target, level, xoffset, width, format, type, pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTexSubImage2D$MH() {
        return RuntimeHelper.requireNonNull(constants$684.glTexSubImage2D$MH,"glTexSubImage2D");
    }
    public static void glTexSubImage2D ( int target,  int level,  int xoffset,  int yoffset,  int width,  int height,  int format,  int type,  Addressable pixels) {
        var mh$ = RuntimeHelper.requireNonNull(constants$684.glTexSubImage2D$MH, "glTexSubImage2D");
        try {
            mh$.invokeExact(target, level, xoffset, yoffset, width, height, format, type, pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTranslated$MH() {
        return RuntimeHelper.requireNonNull(constants$684.glTranslated$MH,"glTranslated");
    }
    public static void glTranslated ( double x,  double y,  double z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$684.glTranslated$MH, "glTranslated");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glTranslatef$MH() {
        return RuntimeHelper.requireNonNull(constants$685.glTranslatef$MH,"glTranslatef");
    }
    public static void glTranslatef ( float x,  float y,  float z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.glTranslatef$MH, "glTranslatef");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex2d$MH() {
        return RuntimeHelper.requireNonNull(constants$685.glVertex2d$MH,"glVertex2d");
    }
    public static void glVertex2d ( double x,  double y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.glVertex2d$MH, "glVertex2d");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex2dv$MH() {
        return RuntimeHelper.requireNonNull(constants$685.glVertex2dv$MH,"glVertex2dv");
    }
    public static void glVertex2dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.glVertex2dv$MH, "glVertex2dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex2f$MH() {
        return RuntimeHelper.requireNonNull(constants$685.glVertex2f$MH,"glVertex2f");
    }
    public static void glVertex2f ( float x,  float y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.glVertex2f$MH, "glVertex2f");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex2fv$MH() {
        return RuntimeHelper.requireNonNull(constants$685.glVertex2fv$MH,"glVertex2fv");
    }
    public static void glVertex2fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.glVertex2fv$MH, "glVertex2fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex2i$MH() {
        return RuntimeHelper.requireNonNull(constants$685.glVertex2i$MH,"glVertex2i");
    }
    public static void glVertex2i ( int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.glVertex2i$MH, "glVertex2i");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex2iv$MH() {
        return RuntimeHelper.requireNonNull(constants$686.glVertex2iv$MH,"glVertex2iv");
    }
    public static void glVertex2iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.glVertex2iv$MH, "glVertex2iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex2s$MH() {
        return RuntimeHelper.requireNonNull(constants$686.glVertex2s$MH,"glVertex2s");
    }
    public static void glVertex2s ( short x,  short y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.glVertex2s$MH, "glVertex2s");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex2sv$MH() {
        return RuntimeHelper.requireNonNull(constants$686.glVertex2sv$MH,"glVertex2sv");
    }
    public static void glVertex2sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.glVertex2sv$MH, "glVertex2sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex3d$MH() {
        return RuntimeHelper.requireNonNull(constants$686.glVertex3d$MH,"glVertex3d");
    }
    public static void glVertex3d ( double x,  double y,  double z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.glVertex3d$MH, "glVertex3d");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex3dv$MH() {
        return RuntimeHelper.requireNonNull(constants$686.glVertex3dv$MH,"glVertex3dv");
    }
    public static void glVertex3dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.glVertex3dv$MH, "glVertex3dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex3f$MH() {
        return RuntimeHelper.requireNonNull(constants$686.glVertex3f$MH,"glVertex3f");
    }
    public static void glVertex3f ( float x,  float y,  float z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.glVertex3f$MH, "glVertex3f");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex3fv$MH() {
        return RuntimeHelper.requireNonNull(constants$687.glVertex3fv$MH,"glVertex3fv");
    }
    public static void glVertex3fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.glVertex3fv$MH, "glVertex3fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex3i$MH() {
        return RuntimeHelper.requireNonNull(constants$687.glVertex3i$MH,"glVertex3i");
    }
    public static void glVertex3i ( int x,  int y,  int z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.glVertex3i$MH, "glVertex3i");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex3iv$MH() {
        return RuntimeHelper.requireNonNull(constants$687.glVertex3iv$MH,"glVertex3iv");
    }
    public static void glVertex3iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.glVertex3iv$MH, "glVertex3iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex3s$MH() {
        return RuntimeHelper.requireNonNull(constants$687.glVertex3s$MH,"glVertex3s");
    }
    public static void glVertex3s ( short x,  short y,  short z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.glVertex3s$MH, "glVertex3s");
        try {
            mh$.invokeExact(x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex3sv$MH() {
        return RuntimeHelper.requireNonNull(constants$687.glVertex3sv$MH,"glVertex3sv");
    }
    public static void glVertex3sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.glVertex3sv$MH, "glVertex3sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex4d$MH() {
        return RuntimeHelper.requireNonNull(constants$687.glVertex4d$MH,"glVertex4d");
    }
    public static void glVertex4d ( double x,  double y,  double z,  double w) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.glVertex4d$MH, "glVertex4d");
        try {
            mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex4dv$MH() {
        return RuntimeHelper.requireNonNull(constants$688.glVertex4dv$MH,"glVertex4dv");
    }
    public static void glVertex4dv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.glVertex4dv$MH, "glVertex4dv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex4f$MH() {
        return RuntimeHelper.requireNonNull(constants$688.glVertex4f$MH,"glVertex4f");
    }
    public static void glVertex4f ( float x,  float y,  float z,  float w) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.glVertex4f$MH, "glVertex4f");
        try {
            mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex4fv$MH() {
        return RuntimeHelper.requireNonNull(constants$688.glVertex4fv$MH,"glVertex4fv");
    }
    public static void glVertex4fv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.glVertex4fv$MH, "glVertex4fv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex4i$MH() {
        return RuntimeHelper.requireNonNull(constants$688.glVertex4i$MH,"glVertex4i");
    }
    public static void glVertex4i ( int x,  int y,  int z,  int w) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.glVertex4i$MH, "glVertex4i");
        try {
            mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex4iv$MH() {
        return RuntimeHelper.requireNonNull(constants$688.glVertex4iv$MH,"glVertex4iv");
    }
    public static void glVertex4iv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.glVertex4iv$MH, "glVertex4iv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex4s$MH() {
        return RuntimeHelper.requireNonNull(constants$688.glVertex4s$MH,"glVertex4s");
    }
    public static void glVertex4s ( short x,  short y,  short z,  short w) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.glVertex4s$MH, "glVertex4s");
        try {
            mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertex4sv$MH() {
        return RuntimeHelper.requireNonNull(constants$689.glVertex4sv$MH,"glVertex4sv");
    }
    public static void glVertex4sv ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$689.glVertex4sv$MH, "glVertex4sv");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glVertexPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$689.glVertexPointer$MH,"glVertexPointer");
    }
    public static void glVertexPointer ( int size,  int type,  int stride,  Addressable pointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$689.glVertexPointer$MH, "glVertexPointer");
        try {
            mh$.invokeExact(size, type, stride, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$689.glViewport$MH,"glViewport");
    }
    public static void glViewport ( int x,  int y,  int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$689.glViewport$MH, "glViewport");
        try {
            mh$.invokeExact(x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluErrorString$MH() {
        return RuntimeHelper.requireNonNull(constants$695.gluErrorString$MH,"gluErrorString");
    }
    public static MemoryAddress gluErrorString ( int errCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.gluErrorString$MH, "gluErrorString");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(errCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluErrorUnicodeStringEXT$MH() {
        return RuntimeHelper.requireNonNull(constants$695.gluErrorUnicodeStringEXT$MH,"gluErrorUnicodeStringEXT");
    }
    public static MemoryAddress gluErrorUnicodeStringEXT ( int errCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.gluErrorUnicodeStringEXT$MH, "gluErrorUnicodeStringEXT");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(errCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluGetString$MH() {
        return RuntimeHelper.requireNonNull(constants$695.gluGetString$MH,"gluGetString");
    }
    public static MemoryAddress gluGetString ( int name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.gluGetString$MH, "gluGetString");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluOrtho2D$MH() {
        return RuntimeHelper.requireNonNull(constants$695.gluOrtho2D$MH,"gluOrtho2D");
    }
    public static void gluOrtho2D ( double left,  double right,  double bottom,  double top) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.gluOrtho2D$MH, "gluOrtho2D");
        try {
            mh$.invokeExact(left, right, bottom, top);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluPerspective$MH() {
        return RuntimeHelper.requireNonNull(constants$695.gluPerspective$MH,"gluPerspective");
    }
    public static void gluPerspective ( double fovy,  double aspect,  double zNear,  double zFar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.gluPerspective$MH, "gluPerspective");
        try {
            mh$.invokeExact(fovy, aspect, zNear, zFar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluPickMatrix$MH() {
        return RuntimeHelper.requireNonNull(constants$696.gluPickMatrix$MH,"gluPickMatrix");
    }
    public static void gluPickMatrix ( double x,  double y,  double width,  double height,  Addressable viewport) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.gluPickMatrix$MH, "gluPickMatrix");
        try {
            mh$.invokeExact(x, y, width, height, viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluLookAt$MH() {
        return RuntimeHelper.requireNonNull(constants$696.gluLookAt$MH,"gluLookAt");
    }
    public static void gluLookAt ( double eyex,  double eyey,  double eyez,  double centerx,  double centery,  double centerz,  double upx,  double upy,  double upz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.gluLookAt$MH, "gluLookAt");
        try {
            mh$.invokeExact(eyex, eyey, eyez, centerx, centery, centerz, upx, upy, upz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluProject$MH() {
        return RuntimeHelper.requireNonNull(constants$696.gluProject$MH,"gluProject");
    }
    public static int gluProject ( double objx,  double objy,  double objz,  Addressable modelMatrix,  Addressable projMatrix,  Addressable viewport,  Addressable winx,  Addressable winy,  Addressable winz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.gluProject$MH, "gluProject");
        try {
            return (int)mh$.invokeExact(objx, objy, objz, modelMatrix, projMatrix, viewport, winx, winy, winz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluUnProject$MH() {
        return RuntimeHelper.requireNonNull(constants$696.gluUnProject$MH,"gluUnProject");
    }
    public static int gluUnProject ( double winx,  double winy,  double winz,  Addressable modelMatrix,  Addressable projMatrix,  Addressable viewport,  Addressable objx,  Addressable objy,  Addressable objz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.gluUnProject$MH, "gluUnProject");
        try {
            return (int)mh$.invokeExact(winx, winy, winz, modelMatrix, projMatrix, viewport, objx, objy, objz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluScaleImage$MH() {
        return RuntimeHelper.requireNonNull(constants$696.gluScaleImage$MH,"gluScaleImage");
    }
    public static int gluScaleImage ( int format,  int widthin,  int heightin,  int typein,  Addressable datain,  int widthout,  int heightout,  int typeout,  Addressable dataout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.gluScaleImage$MH, "gluScaleImage");
        try {
            return (int)mh$.invokeExact(format, widthin, heightin, typein, datain, widthout, heightout, typeout, dataout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluBuild1DMipmaps$MH() {
        return RuntimeHelper.requireNonNull(constants$696.gluBuild1DMipmaps$MH,"gluBuild1DMipmaps");
    }
    public static int gluBuild1DMipmaps ( int target,  int components,  int width,  int format,  int type,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.gluBuild1DMipmaps$MH, "gluBuild1DMipmaps");
        try {
            return (int)mh$.invokeExact(target, components, width, format, type, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluBuild2DMipmaps$MH() {
        return RuntimeHelper.requireNonNull(constants$697.gluBuild2DMipmaps$MH,"gluBuild2DMipmaps");
    }
    public static int gluBuild2DMipmaps ( int target,  int components,  int width,  int height,  int format,  int type,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.gluBuild2DMipmaps$MH, "gluBuild2DMipmaps");
        try {
            return (int)mh$.invokeExact(target, components, width, height, format, type, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluNewQuadric$MH() {
        return RuntimeHelper.requireNonNull(constants$697.gluNewQuadric$MH,"gluNewQuadric");
    }
    public static MemoryAddress gluNewQuadric () {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.gluNewQuadric$MH, "gluNewQuadric");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluDeleteQuadric$MH() {
        return RuntimeHelper.requireNonNull(constants$697.gluDeleteQuadric$MH,"gluDeleteQuadric");
    }
    public static void gluDeleteQuadric ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.gluDeleteQuadric$MH, "gluDeleteQuadric");
        try {
            mh$.invokeExact(state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluQuadricNormals$MH() {
        return RuntimeHelper.requireNonNull(constants$697.gluQuadricNormals$MH,"gluQuadricNormals");
    }
    public static void gluQuadricNormals ( Addressable quadObject,  int normals) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.gluQuadricNormals$MH, "gluQuadricNormals");
        try {
            mh$.invokeExact(quadObject, normals);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluQuadricTexture$MH() {
        return RuntimeHelper.requireNonNull(constants$697.gluQuadricTexture$MH,"gluQuadricTexture");
    }
    public static void gluQuadricTexture ( Addressable quadObject,  byte textureCoords) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.gluQuadricTexture$MH, "gluQuadricTexture");
        try {
            mh$.invokeExact(quadObject, textureCoords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluQuadricOrientation$MH() {
        return RuntimeHelper.requireNonNull(constants$697.gluQuadricOrientation$MH,"gluQuadricOrientation");
    }
    public static void gluQuadricOrientation ( Addressable quadObject,  int orientation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.gluQuadricOrientation$MH, "gluQuadricOrientation");
        try {
            mh$.invokeExact(quadObject, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluQuadricDrawStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$698.gluQuadricDrawStyle$MH,"gluQuadricDrawStyle");
    }
    public static void gluQuadricDrawStyle ( Addressable quadObject,  int drawStyle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.gluQuadricDrawStyle$MH, "gluQuadricDrawStyle");
        try {
            mh$.invokeExact(quadObject, drawStyle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluCylinder$MH() {
        return RuntimeHelper.requireNonNull(constants$698.gluCylinder$MH,"gluCylinder");
    }
    public static void gluCylinder ( Addressable qobj,  double baseRadius,  double topRadius,  double height,  int slices,  int stacks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.gluCylinder$MH, "gluCylinder");
        try {
            mh$.invokeExact(qobj, baseRadius, topRadius, height, slices, stacks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$698.gluDisk$MH,"gluDisk");
    }
    public static void gluDisk ( Addressable qobj,  double innerRadius,  double outerRadius,  int slices,  int loops) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.gluDisk$MH, "gluDisk");
        try {
            mh$.invokeExact(qobj, innerRadius, outerRadius, slices, loops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluPartialDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$698.gluPartialDisk$MH,"gluPartialDisk");
    }
    public static void gluPartialDisk ( Addressable qobj,  double innerRadius,  double outerRadius,  int slices,  int loops,  double startAngle,  double sweepAngle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.gluPartialDisk$MH, "gluPartialDisk");
        try {
            mh$.invokeExact(qobj, innerRadius, outerRadius, slices, loops, startAngle, sweepAngle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluSphere$MH() {
        return RuntimeHelper.requireNonNull(constants$698.gluSphere$MH,"gluSphere");
    }
    public static void gluSphere ( Addressable qobj,  double radius,  int slices,  int stacks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.gluSphere$MH, "gluSphere");
        try {
            mh$.invokeExact(qobj, radius, slices, stacks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluQuadricCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$699.gluQuadricCallback$MH,"gluQuadricCallback");
    }
    public static void gluQuadricCallback ( Addressable qobj,  int which,  Addressable fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.gluQuadricCallback$MH, "gluQuadricCallback");
        try {
            mh$.invokeExact(qobj, which, fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluNewTess$MH() {
        return RuntimeHelper.requireNonNull(constants$699.gluNewTess$MH,"gluNewTess");
    }
    public static MemoryAddress gluNewTess () {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.gluNewTess$MH, "gluNewTess");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluDeleteTess$MH() {
        return RuntimeHelper.requireNonNull(constants$699.gluDeleteTess$MH,"gluDeleteTess");
    }
    public static void gluDeleteTess ( Addressable tess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.gluDeleteTess$MH, "gluDeleteTess");
        try {
            mh$.invokeExact(tess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluTessBeginPolygon$MH() {
        return RuntimeHelper.requireNonNull(constants$699.gluTessBeginPolygon$MH,"gluTessBeginPolygon");
    }
    public static void gluTessBeginPolygon ( Addressable tess,  Addressable polygon_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.gluTessBeginPolygon$MH, "gluTessBeginPolygon");
        try {
            mh$.invokeExact(tess, polygon_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluTessBeginContour$MH() {
        return RuntimeHelper.requireNonNull(constants$699.gluTessBeginContour$MH,"gluTessBeginContour");
    }
    public static void gluTessBeginContour ( Addressable tess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.gluTessBeginContour$MH, "gluTessBeginContour");
        try {
            mh$.invokeExact(tess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluTessVertex$MH() {
        return RuntimeHelper.requireNonNull(constants$700.gluTessVertex$MH,"gluTessVertex");
    }
    public static void gluTessVertex ( Addressable tess,  Addressable coords,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.gluTessVertex$MH, "gluTessVertex");
        try {
            mh$.invokeExact(tess, coords, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluTessEndContour$MH() {
        return RuntimeHelper.requireNonNull(constants$700.gluTessEndContour$MH,"gluTessEndContour");
    }
    public static void gluTessEndContour ( Addressable tess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.gluTessEndContour$MH, "gluTessEndContour");
        try {
            mh$.invokeExact(tess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluTessEndPolygon$MH() {
        return RuntimeHelper.requireNonNull(constants$700.gluTessEndPolygon$MH,"gluTessEndPolygon");
    }
    public static void gluTessEndPolygon ( Addressable tess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.gluTessEndPolygon$MH, "gluTessEndPolygon");
        try {
            mh$.invokeExact(tess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluTessProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$700.gluTessProperty$MH,"gluTessProperty");
    }
    public static void gluTessProperty ( Addressable tess,  int which,  double value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.gluTessProperty$MH, "gluTessProperty");
        try {
            mh$.invokeExact(tess, which, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluTessNormal$MH() {
        return RuntimeHelper.requireNonNull(constants$700.gluTessNormal$MH,"gluTessNormal");
    }
    public static void gluTessNormal ( Addressable tess,  double x,  double y,  double z) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.gluTessNormal$MH, "gluTessNormal");
        try {
            mh$.invokeExact(tess, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluTessCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$701.gluTessCallback$MH,"gluTessCallback");
    }
    public static void gluTessCallback ( Addressable tess,  int which,  Addressable fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.gluTessCallback$MH, "gluTessCallback");
        try {
            mh$.invokeExact(tess, which, fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluGetTessProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$701.gluGetTessProperty$MH,"gluGetTessProperty");
    }
    public static void gluGetTessProperty ( Addressable tess,  int which,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.gluGetTessProperty$MH, "gluGetTessProperty");
        try {
            mh$.invokeExact(tess, which, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluNewNurbsRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$701.gluNewNurbsRenderer$MH,"gluNewNurbsRenderer");
    }
    public static MemoryAddress gluNewNurbsRenderer () {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.gluNewNurbsRenderer$MH, "gluNewNurbsRenderer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluDeleteNurbsRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$701.gluDeleteNurbsRenderer$MH,"gluDeleteNurbsRenderer");
    }
    public static void gluDeleteNurbsRenderer ( Addressable nobj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.gluDeleteNurbsRenderer$MH, "gluDeleteNurbsRenderer");
        try {
            mh$.invokeExact(nobj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluBeginSurface$MH() {
        return RuntimeHelper.requireNonNull(constants$701.gluBeginSurface$MH,"gluBeginSurface");
    }
    public static void gluBeginSurface ( Addressable nobj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.gluBeginSurface$MH, "gluBeginSurface");
        try {
            mh$.invokeExact(nobj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluBeginCurve$MH() {
        return RuntimeHelper.requireNonNull(constants$702.gluBeginCurve$MH,"gluBeginCurve");
    }
    public static void gluBeginCurve ( Addressable nobj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.gluBeginCurve$MH, "gluBeginCurve");
        try {
            mh$.invokeExact(nobj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluEndCurve$MH() {
        return RuntimeHelper.requireNonNull(constants$702.gluEndCurve$MH,"gluEndCurve");
    }
    public static void gluEndCurve ( Addressable nobj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.gluEndCurve$MH, "gluEndCurve");
        try {
            mh$.invokeExact(nobj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluEndSurface$MH() {
        return RuntimeHelper.requireNonNull(constants$702.gluEndSurface$MH,"gluEndSurface");
    }
    public static void gluEndSurface ( Addressable nobj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.gluEndSurface$MH, "gluEndSurface");
        try {
            mh$.invokeExact(nobj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluBeginTrim$MH() {
        return RuntimeHelper.requireNonNull(constants$702.gluBeginTrim$MH,"gluBeginTrim");
    }
    public static void gluBeginTrim ( Addressable nobj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.gluBeginTrim$MH, "gluBeginTrim");
        try {
            mh$.invokeExact(nobj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluEndTrim$MH() {
        return RuntimeHelper.requireNonNull(constants$702.gluEndTrim$MH,"gluEndTrim");
    }
    public static void gluEndTrim ( Addressable nobj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.gluEndTrim$MH, "gluEndTrim");
        try {
            mh$.invokeExact(nobj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluPwlCurve$MH() {
        return RuntimeHelper.requireNonNull(constants$702.gluPwlCurve$MH,"gluPwlCurve");
    }
    public static void gluPwlCurve ( Addressable nobj,  int count,  Addressable array,  int stride,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.gluPwlCurve$MH, "gluPwlCurve");
        try {
            mh$.invokeExact(nobj, count, array, stride, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluNurbsCurve$MH() {
        return RuntimeHelper.requireNonNull(constants$703.gluNurbsCurve$MH,"gluNurbsCurve");
    }
    public static void gluNurbsCurve ( Addressable nobj,  int nknots,  Addressable knot,  int stride,  Addressable ctlarray,  int order,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.gluNurbsCurve$MH, "gluNurbsCurve");
        try {
            mh$.invokeExact(nobj, nknots, knot, stride, ctlarray, order, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluNurbsSurface$MH() {
        return RuntimeHelper.requireNonNull(constants$703.gluNurbsSurface$MH,"gluNurbsSurface");
    }
    public static void gluNurbsSurface ( Addressable nobj,  int sknot_count,  Addressable sknot,  int tknot_count,  Addressable tknot,  int s_stride,  int t_stride,  Addressable ctlarray,  int sorder,  int torder,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.gluNurbsSurface$MH, "gluNurbsSurface");
        try {
            mh$.invokeExact(nobj, sknot_count, sknot, tknot_count, tknot, s_stride, t_stride, ctlarray, sorder, torder, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluLoadSamplingMatrices$MH() {
        return RuntimeHelper.requireNonNull(constants$703.gluLoadSamplingMatrices$MH,"gluLoadSamplingMatrices");
    }
    public static void gluLoadSamplingMatrices ( Addressable nobj,  Addressable modelMatrix,  Addressable projMatrix,  Addressable viewport) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.gluLoadSamplingMatrices$MH, "gluLoadSamplingMatrices");
        try {
            mh$.invokeExact(nobj, modelMatrix, projMatrix, viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluNurbsProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$703.gluNurbsProperty$MH,"gluNurbsProperty");
    }
    public static void gluNurbsProperty ( Addressable nobj,  int property,  float value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.gluNurbsProperty$MH, "gluNurbsProperty");
        try {
            mh$.invokeExact(nobj, property, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluGetNurbsProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$703.gluGetNurbsProperty$MH,"gluGetNurbsProperty");
    }
    public static void gluGetNurbsProperty ( Addressable nobj,  int property,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.gluGetNurbsProperty$MH, "gluGetNurbsProperty");
        try {
            mh$.invokeExact(nobj, property, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluNurbsCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$704.gluNurbsCallback$MH,"gluNurbsCallback");
    }
    public static void gluNurbsCallback ( Addressable nobj,  int which,  Addressable fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$704.gluNurbsCallback$MH, "gluNurbsCallback");
        try {
            mh$.invokeExact(nobj, which, fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluBeginPolygon$MH() {
        return RuntimeHelper.requireNonNull(constants$709.gluBeginPolygon$MH,"gluBeginPolygon");
    }
    public static void gluBeginPolygon ( Addressable tess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.gluBeginPolygon$MH, "gluBeginPolygon");
        try {
            mh$.invokeExact(tess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluNextContour$MH() {
        return RuntimeHelper.requireNonNull(constants$709.gluNextContour$MH,"gluNextContour");
    }
    public static void gluNextContour ( Addressable tess,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.gluNextContour$MH, "gluNextContour");
        try {
            mh$.invokeExact(tess, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gluEndPolygon$MH() {
        return RuntimeHelper.requireNonNull(constants$709.gluEndPolygon$MH,"gluEndPolygon");
    }
    public static void gluEndPolygon ( Addressable tess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.gluEndPolygon$MH, "gluEndPolygon");
        try {
            mh$.invokeExact(tess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInit$MH() {
        return RuntimeHelper.requireNonNull(constants$709.glutInit$MH,"glutInit");
    }
    public static void glutInit ( Addressable pargc,  Addressable argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.glutInit$MH, "glutInit");
        try {
            mh$.invokeExact(pargc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitWindowPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$709.glutInitWindowPosition$MH,"glutInitWindowPosition");
    }
    public static void glutInitWindowPosition ( int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.glutInitWindowPosition$MH, "glutInitWindowPosition");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitWindowSize$MH() {
        return RuntimeHelper.requireNonNull(constants$709.glutInitWindowSize$MH,"glutInitWindowSize");
    }
    public static void glutInitWindowSize ( int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.glutInitWindowSize$MH, "glutInitWindowSize");
        try {
            mh$.invokeExact(width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitDisplayMode$MH() {
        return RuntimeHelper.requireNonNull(constants$710.glutInitDisplayMode$MH,"glutInitDisplayMode");
    }
    public static void glutInitDisplayMode ( int displayMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.glutInitDisplayMode$MH, "glutInitDisplayMode");
        try {
            mh$.invokeExact(displayMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitDisplayString$MH() {
        return RuntimeHelper.requireNonNull(constants$710.glutInitDisplayString$MH,"glutInitDisplayString");
    }
    public static void glutInitDisplayString ( Addressable displayMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.glutInitDisplayString$MH, "glutInitDisplayString");
        try {
            mh$.invokeExact(displayMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMainLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$710.glutMainLoop$MH,"glutMainLoop");
    }
    public static void glutMainLoop () {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.glutMainLoop$MH, "glutMainLoop");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutCreateWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$710.glutCreateWindow$MH,"glutCreateWindow");
    }
    public static int glutCreateWindow ( Addressable title) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.glutCreateWindow$MH, "glutCreateWindow");
        try {
            return (int)mh$.invokeExact(title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutCreateSubWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$710.glutCreateSubWindow$MH,"glutCreateSubWindow");
    }
    public static int glutCreateSubWindow ( int window,  int x,  int y,  int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.glutCreateSubWindow$MH, "glutCreateSubWindow");
        try {
            return (int)mh$.invokeExact(window, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutDestroyWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$710.glutDestroyWindow$MH,"glutDestroyWindow");
    }
    public static void glutDestroyWindow ( int window) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.glutDestroyWindow$MH, "glutDestroyWindow");
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$711.glutSetWindow$MH,"glutSetWindow");
    }
    public static void glutSetWindow ( int window) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.glutSetWindow$MH, "glutSetWindow");
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGetWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$711.glutGetWindow$MH,"glutGetWindow");
    }
    public static int glutGetWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.glutGetWindow$MH, "glutGetWindow");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetWindowTitle$MH() {
        return RuntimeHelper.requireNonNull(constants$711.glutSetWindowTitle$MH,"glutSetWindowTitle");
    }
    public static void glutSetWindowTitle ( Addressable title) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.glutSetWindowTitle$MH, "glutSetWindowTitle");
        try {
            mh$.invokeExact(title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetIconTitle$MH() {
        return RuntimeHelper.requireNonNull(constants$711.glutSetIconTitle$MH,"glutSetIconTitle");
    }
    public static void glutSetIconTitle ( Addressable title) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.glutSetIconTitle$MH, "glutSetIconTitle");
        try {
            mh$.invokeExact(title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutReshapeWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$711.glutReshapeWindow$MH,"glutReshapeWindow");
    }
    public static void glutReshapeWindow ( int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.glutReshapeWindow$MH, "glutReshapeWindow");
        try {
            mh$.invokeExact(width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPositionWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$711.glutPositionWindow$MH,"glutPositionWindow");
    }
    public static void glutPositionWindow ( int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.glutPositionWindow$MH, "glutPositionWindow");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutShowWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$712.glutShowWindow$MH,"glutShowWindow");
    }
    public static void glutShowWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.glutShowWindow$MH, "glutShowWindow");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutHideWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$712.glutHideWindow$MH,"glutHideWindow");
    }
    public static void glutHideWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.glutHideWindow$MH, "glutHideWindow");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutIconifyWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$712.glutIconifyWindow$MH,"glutIconifyWindow");
    }
    public static void glutIconifyWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.glutIconifyWindow$MH, "glutIconifyWindow");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPushWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$712.glutPushWindow$MH,"glutPushWindow");
    }
    public static void glutPushWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.glutPushWindow$MH, "glutPushWindow");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPopWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$712.glutPopWindow$MH,"glutPopWindow");
    }
    public static void glutPopWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.glutPopWindow$MH, "glutPopWindow");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutFullScreen$MH() {
        return RuntimeHelper.requireNonNull(constants$712.glutFullScreen$MH,"glutFullScreen");
    }
    public static void glutFullScreen () {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.glutFullScreen$MH, "glutFullScreen");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPostWindowRedisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$713.glutPostWindowRedisplay$MH,"glutPostWindowRedisplay");
    }
    public static void glutPostWindowRedisplay ( int window) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.glutPostWindowRedisplay$MH, "glutPostWindowRedisplay");
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPostRedisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$713.glutPostRedisplay$MH,"glutPostRedisplay");
    }
    public static void glutPostRedisplay () {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.glutPostRedisplay$MH, "glutPostRedisplay");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSwapBuffers$MH() {
        return RuntimeHelper.requireNonNull(constants$713.glutSwapBuffers$MH,"glutSwapBuffers");
    }
    public static void glutSwapBuffers () {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.glutSwapBuffers$MH, "glutSwapBuffers");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWarpPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$713.glutWarpPointer$MH,"glutWarpPointer");
    }
    public static void glutWarpPointer ( int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.glutWarpPointer$MH, "glutWarpPointer");
        try {
            mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$713.glutSetCursor$MH,"glutSetCursor");
    }
    public static void glutSetCursor ( int cursor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.glutSetCursor$MH, "glutSetCursor");
        try {
            mh$.invokeExact(cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutEstablishOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$713.glutEstablishOverlay$MH,"glutEstablishOverlay");
    }
    public static void glutEstablishOverlay () {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.glutEstablishOverlay$MH, "glutEstablishOverlay");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutRemoveOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$714.glutRemoveOverlay$MH,"glutRemoveOverlay");
    }
    public static void glutRemoveOverlay () {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.glutRemoveOverlay$MH, "glutRemoveOverlay");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutUseLayer$MH() {
        return RuntimeHelper.requireNonNull(constants$714.glutUseLayer$MH,"glutUseLayer");
    }
    public static void glutUseLayer ( int layer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.glutUseLayer$MH, "glutUseLayer");
        try {
            mh$.invokeExact(layer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPostOverlayRedisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$714.glutPostOverlayRedisplay$MH,"glutPostOverlayRedisplay");
    }
    public static void glutPostOverlayRedisplay () {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.glutPostOverlayRedisplay$MH, "glutPostOverlayRedisplay");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPostWindowOverlayRedisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$714.glutPostWindowOverlayRedisplay$MH,"glutPostWindowOverlayRedisplay");
    }
    public static void glutPostWindowOverlayRedisplay ( int window) {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.glutPostWindowOverlayRedisplay$MH, "glutPostWindowOverlayRedisplay");
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutShowOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$714.glutShowOverlay$MH,"glutShowOverlay");
    }
    public static void glutShowOverlay () {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.glutShowOverlay$MH, "glutShowOverlay");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutHideOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$714.glutHideOverlay$MH,"glutHideOverlay");
    }
    public static void glutHideOverlay () {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.glutHideOverlay$MH, "glutHideOverlay");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutCreateMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$715.glutCreateMenu$MH,"glutCreateMenu");
    }
    public static int glutCreateMenu ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.glutCreateMenu$MH, "glutCreateMenu");
        try {
            return (int)mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutDestroyMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$715.glutDestroyMenu$MH,"glutDestroyMenu");
    }
    public static void glutDestroyMenu ( int menu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.glutDestroyMenu$MH, "glutDestroyMenu");
        try {
            mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGetMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$715.glutGetMenu$MH,"glutGetMenu");
    }
    public static int glutGetMenu () {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.glutGetMenu$MH, "glutGetMenu");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$715.glutSetMenu$MH,"glutSetMenu");
    }
    public static void glutSetMenu ( int menu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.glutSetMenu$MH, "glutSetMenu");
        try {
            mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutAddMenuEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$716.glutAddMenuEntry$MH,"glutAddMenuEntry");
    }
    public static void glutAddMenuEntry ( Addressable label,  int value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.glutAddMenuEntry$MH, "glutAddMenuEntry");
        try {
            mh$.invokeExact(label, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutAddSubMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$716.glutAddSubMenu$MH,"glutAddSubMenu");
    }
    public static void glutAddSubMenu ( Addressable label,  int subMenu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.glutAddSubMenu$MH, "glutAddSubMenu");
        try {
            mh$.invokeExact(label, subMenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutChangeToMenuEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$716.glutChangeToMenuEntry$MH,"glutChangeToMenuEntry");
    }
    public static void glutChangeToMenuEntry ( int item,  Addressable label,  int value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.glutChangeToMenuEntry$MH, "glutChangeToMenuEntry");
        try {
            mh$.invokeExact(item, label, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutChangeToSubMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$716.glutChangeToSubMenu$MH,"glutChangeToSubMenu");
    }
    public static void glutChangeToSubMenu ( int item,  Addressable label,  int value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.glutChangeToSubMenu$MH, "glutChangeToSubMenu");
        try {
            mh$.invokeExact(item, label, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutRemoveMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$716.glutRemoveMenuItem$MH,"glutRemoveMenuItem");
    }
    public static void glutRemoveMenuItem ( int item) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.glutRemoveMenuItem$MH, "glutRemoveMenuItem");
        try {
            mh$.invokeExact(item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutAttachMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$716.glutAttachMenu$MH,"glutAttachMenu");
    }
    public static void glutAttachMenu ( int button) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.glutAttachMenu$MH, "glutAttachMenu");
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutDetachMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$717.glutDetachMenu$MH,"glutDetachMenu");
    }
    public static void glutDetachMenu ( int button) {
        var mh$ = RuntimeHelper.requireNonNull(constants$717.glutDetachMenu$MH, "glutDetachMenu");
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutTimerFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$717.glutTimerFunc$MH,"glutTimerFunc");
    }
    public static void glutTimerFunc ( int time,  Addressable callback,  int value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$717.glutTimerFunc$MH, "glutTimerFunc");
        try {
            mh$.invokeExact(time, callback, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutIdleFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$718.glutIdleFunc$MH,"glutIdleFunc");
    }
    public static void glutIdleFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$718.glutIdleFunc$MH, "glutIdleFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutKeyboardFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$718.glutKeyboardFunc$MH,"glutKeyboardFunc");
    }
    public static void glutKeyboardFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$718.glutKeyboardFunc$MH, "glutKeyboardFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSpecialFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$719.glutSpecialFunc$MH,"glutSpecialFunc");
    }
    public static void glutSpecialFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$719.glutSpecialFunc$MH, "glutSpecialFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutReshapeFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$719.glutReshapeFunc$MH,"glutReshapeFunc");
    }
    public static void glutReshapeFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$719.glutReshapeFunc$MH, "glutReshapeFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutVisibilityFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$720.glutVisibilityFunc$MH,"glutVisibilityFunc");
    }
    public static void glutVisibilityFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$720.glutVisibilityFunc$MH, "glutVisibilityFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutDisplayFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$720.glutDisplayFunc$MH,"glutDisplayFunc");
    }
    public static void glutDisplayFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$720.glutDisplayFunc$MH, "glutDisplayFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMouseFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$721.glutMouseFunc$MH,"glutMouseFunc");
    }
    public static void glutMouseFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$721.glutMouseFunc$MH, "glutMouseFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMotionFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$721.glutMotionFunc$MH,"glutMotionFunc");
    }
    public static void glutMotionFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$721.glutMotionFunc$MH, "glutMotionFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPassiveMotionFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$722.glutPassiveMotionFunc$MH,"glutPassiveMotionFunc");
    }
    public static void glutPassiveMotionFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$722.glutPassiveMotionFunc$MH, "glutPassiveMotionFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutEntryFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$722.glutEntryFunc$MH,"glutEntryFunc");
    }
    public static void glutEntryFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$722.glutEntryFunc$MH, "glutEntryFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutKeyboardUpFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$723.glutKeyboardUpFunc$MH,"glutKeyboardUpFunc");
    }
    public static void glutKeyboardUpFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$723.glutKeyboardUpFunc$MH, "glutKeyboardUpFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSpecialUpFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$723.glutSpecialUpFunc$MH,"glutSpecialUpFunc");
    }
    public static void glutSpecialUpFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$723.glutSpecialUpFunc$MH, "glutSpecialUpFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$724.glutJoystickFunc$MH,"glutJoystickFunc");
    }
    public static void glutJoystickFunc ( Addressable callback,  int pollInterval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$724.glutJoystickFunc$MH, "glutJoystickFunc");
        try {
            mh$.invokeExact(callback, pollInterval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMenuStateFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$724.glutMenuStateFunc$MH,"glutMenuStateFunc");
    }
    public static void glutMenuStateFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$724.glutMenuStateFunc$MH, "glutMenuStateFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMenuStatusFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$725.glutMenuStatusFunc$MH,"glutMenuStatusFunc");
    }
    public static void glutMenuStatusFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$725.glutMenuStatusFunc$MH, "glutMenuStatusFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutOverlayDisplayFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$725.glutOverlayDisplayFunc$MH,"glutOverlayDisplayFunc");
    }
    public static void glutOverlayDisplayFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$725.glutOverlayDisplayFunc$MH, "glutOverlayDisplayFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWindowStatusFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$726.glutWindowStatusFunc$MH,"glutWindowStatusFunc");
    }
    public static void glutWindowStatusFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$726.glutWindowStatusFunc$MH, "glutWindowStatusFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSpaceballMotionFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$726.glutSpaceballMotionFunc$MH,"glutSpaceballMotionFunc");
    }
    public static void glutSpaceballMotionFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$726.glutSpaceballMotionFunc$MH, "glutSpaceballMotionFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSpaceballRotateFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$727.glutSpaceballRotateFunc$MH,"glutSpaceballRotateFunc");
    }
    public static void glutSpaceballRotateFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$727.glutSpaceballRotateFunc$MH, "glutSpaceballRotateFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSpaceballButtonFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$727.glutSpaceballButtonFunc$MH,"glutSpaceballButtonFunc");
    }
    public static void glutSpaceballButtonFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$727.glutSpaceballButtonFunc$MH, "glutSpaceballButtonFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutButtonBoxFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$728.glutButtonBoxFunc$MH,"glutButtonBoxFunc");
    }
    public static void glutButtonBoxFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$728.glutButtonBoxFunc$MH, "glutButtonBoxFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutDialsFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$728.glutDialsFunc$MH,"glutDialsFunc");
    }
    public static void glutDialsFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$728.glutDialsFunc$MH, "glutDialsFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutTabletMotionFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$729.glutTabletMotionFunc$MH,"glutTabletMotionFunc");
    }
    public static void glutTabletMotionFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$729.glutTabletMotionFunc$MH, "glutTabletMotionFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutTabletButtonFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$729.glutTabletButtonFunc$MH,"glutTabletButtonFunc");
    }
    public static void glutTabletButtonFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$729.glutTabletButtonFunc$MH, "glutTabletButtonFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGet$MH() {
        return RuntimeHelper.requireNonNull(constants$729.glutGet$MH,"glutGet");
    }
    public static int glutGet ( int query) {
        var mh$ = RuntimeHelper.requireNonNull(constants$729.glutGet$MH, "glutGet");
        try {
            return (int)mh$.invokeExact(query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutDeviceGet$MH() {
        return RuntimeHelper.requireNonNull(constants$729.glutDeviceGet$MH,"glutDeviceGet");
    }
    public static int glutDeviceGet ( int query) {
        var mh$ = RuntimeHelper.requireNonNull(constants$729.glutDeviceGet$MH, "glutDeviceGet");
        try {
            return (int)mh$.invokeExact(query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGetModifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$730.glutGetModifiers$MH,"glutGetModifiers");
    }
    public static int glutGetModifiers () {
        var mh$ = RuntimeHelper.requireNonNull(constants$730.glutGetModifiers$MH, "glutGetModifiers");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutLayerGet$MH() {
        return RuntimeHelper.requireNonNull(constants$730.glutLayerGet$MH,"glutLayerGet");
    }
    public static int glutLayerGet ( int query) {
        var mh$ = RuntimeHelper.requireNonNull(constants$730.glutLayerGet$MH, "glutLayerGet");
        try {
            return (int)mh$.invokeExact(query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutBitmapCharacter$MH() {
        return RuntimeHelper.requireNonNull(constants$730.glutBitmapCharacter$MH,"glutBitmapCharacter");
    }
    public static void glutBitmapCharacter ( Addressable font,  int character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$730.glutBitmapCharacter$MH, "glutBitmapCharacter");
        try {
            mh$.invokeExact(font, character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutBitmapWidth$MH() {
        return RuntimeHelper.requireNonNull(constants$730.glutBitmapWidth$MH,"glutBitmapWidth");
    }
    public static int glutBitmapWidth ( Addressable font,  int character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$730.glutBitmapWidth$MH, "glutBitmapWidth");
        try {
            return (int)mh$.invokeExact(font, character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutStrokeCharacter$MH() {
        return RuntimeHelper.requireNonNull(constants$730.glutStrokeCharacter$MH,"glutStrokeCharacter");
    }
    public static void glutStrokeCharacter ( Addressable font,  int character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$730.glutStrokeCharacter$MH, "glutStrokeCharacter");
        try {
            mh$.invokeExact(font, character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutStrokeWidth$MH() {
        return RuntimeHelper.requireNonNull(constants$730.glutStrokeWidth$MH,"glutStrokeWidth");
    }
    public static int glutStrokeWidth ( Addressable font,  int character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$730.glutStrokeWidth$MH, "glutStrokeWidth");
        try {
            return (int)mh$.invokeExact(font, character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutStrokeWidthf$MH() {
        return RuntimeHelper.requireNonNull(constants$731.glutStrokeWidthf$MH,"glutStrokeWidthf");
    }
    public static float glutStrokeWidthf ( Addressable font,  int character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.glutStrokeWidthf$MH, "glutStrokeWidthf");
        try {
            return (float)mh$.invokeExact(font, character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutBitmapLength$MH() {
        return RuntimeHelper.requireNonNull(constants$731.glutBitmapLength$MH,"glutBitmapLength");
    }
    public static int glutBitmapLength ( Addressable font,  Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.glutBitmapLength$MH, "glutBitmapLength");
        try {
            return (int)mh$.invokeExact(font, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutStrokeLength$MH() {
        return RuntimeHelper.requireNonNull(constants$731.glutStrokeLength$MH,"glutStrokeLength");
    }
    public static int glutStrokeLength ( Addressable font,  Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.glutStrokeLength$MH, "glutStrokeLength");
        try {
            return (int)mh$.invokeExact(font, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutStrokeLengthf$MH() {
        return RuntimeHelper.requireNonNull(constants$731.glutStrokeLengthf$MH,"glutStrokeLengthf");
    }
    public static float glutStrokeLengthf ( Addressable font,  Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.glutStrokeLengthf$MH, "glutStrokeLengthf");
        try {
            return (float)mh$.invokeExact(font, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireCube$MH() {
        return RuntimeHelper.requireNonNull(constants$731.glutWireCube$MH,"glutWireCube");
    }
    public static void glutWireCube ( double size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.glutWireCube$MH, "glutWireCube");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidCube$MH() {
        return RuntimeHelper.requireNonNull(constants$731.glutSolidCube$MH,"glutSolidCube");
    }
    public static void glutSolidCube ( double size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.glutSolidCube$MH, "glutSolidCube");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireSphere$MH() {
        return RuntimeHelper.requireNonNull(constants$732.glutWireSphere$MH,"glutWireSphere");
    }
    public static void glutWireSphere ( double radius,  int slices,  int stacks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.glutWireSphere$MH, "glutWireSphere");
        try {
            mh$.invokeExact(radius, slices, stacks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidSphere$MH() {
        return RuntimeHelper.requireNonNull(constants$732.glutSolidSphere$MH,"glutSolidSphere");
    }
    public static void glutSolidSphere ( double radius,  int slices,  int stacks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.glutSolidSphere$MH, "glutSolidSphere");
        try {
            mh$.invokeExact(radius, slices, stacks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireCone$MH() {
        return RuntimeHelper.requireNonNull(constants$732.glutWireCone$MH,"glutWireCone");
    }
    public static void glutWireCone ( double base,  double height,  int slices,  int stacks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.glutWireCone$MH, "glutWireCone");
        try {
            mh$.invokeExact(base, height, slices, stacks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidCone$MH() {
        return RuntimeHelper.requireNonNull(constants$732.glutSolidCone$MH,"glutSolidCone");
    }
    public static void glutSolidCone ( double base,  double height,  int slices,  int stacks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.glutSolidCone$MH, "glutSolidCone");
        try {
            mh$.invokeExact(base, height, slices, stacks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireTorus$MH() {
        return RuntimeHelper.requireNonNull(constants$732.glutWireTorus$MH,"glutWireTorus");
    }
    public static void glutWireTorus ( double innerRadius,  double outerRadius,  int sides,  int rings) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.glutWireTorus$MH, "glutWireTorus");
        try {
            mh$.invokeExact(innerRadius, outerRadius, sides, rings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidTorus$MH() {
        return RuntimeHelper.requireNonNull(constants$732.glutSolidTorus$MH,"glutSolidTorus");
    }
    public static void glutSolidTorus ( double innerRadius,  double outerRadius,  int sides,  int rings) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.glutSolidTorus$MH, "glutSolidTorus");
        try {
            mh$.invokeExact(innerRadius, outerRadius, sides, rings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireDodecahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$733.glutWireDodecahedron$MH,"glutWireDodecahedron");
    }
    public static void glutWireDodecahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.glutWireDodecahedron$MH, "glutWireDodecahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidDodecahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$733.glutSolidDodecahedron$MH,"glutSolidDodecahedron");
    }
    public static void glutSolidDodecahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.glutSolidDodecahedron$MH, "glutSolidDodecahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireOctahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$733.glutWireOctahedron$MH,"glutWireOctahedron");
    }
    public static void glutWireOctahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.glutWireOctahedron$MH, "glutWireOctahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidOctahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$733.glutSolidOctahedron$MH,"glutSolidOctahedron");
    }
    public static void glutSolidOctahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.glutSolidOctahedron$MH, "glutSolidOctahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireTetrahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$733.glutWireTetrahedron$MH,"glutWireTetrahedron");
    }
    public static void glutWireTetrahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.glutWireTetrahedron$MH, "glutWireTetrahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidTetrahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$733.glutSolidTetrahedron$MH,"glutSolidTetrahedron");
    }
    public static void glutSolidTetrahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.glutSolidTetrahedron$MH, "glutSolidTetrahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireIcosahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$734.glutWireIcosahedron$MH,"glutWireIcosahedron");
    }
    public static void glutWireIcosahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.glutWireIcosahedron$MH, "glutWireIcosahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidIcosahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$734.glutSolidIcosahedron$MH,"glutSolidIcosahedron");
    }
    public static void glutSolidIcosahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.glutSolidIcosahedron$MH, "glutSolidIcosahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireTeapot$MH() {
        return RuntimeHelper.requireNonNull(constants$734.glutWireTeapot$MH,"glutWireTeapot");
    }
    public static void glutWireTeapot ( double size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.glutWireTeapot$MH, "glutWireTeapot");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidTeapot$MH() {
        return RuntimeHelper.requireNonNull(constants$734.glutSolidTeapot$MH,"glutSolidTeapot");
    }
    public static void glutSolidTeapot ( double size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.glutSolidTeapot$MH, "glutSolidTeapot");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGameModeString$MH() {
        return RuntimeHelper.requireNonNull(constants$734.glutGameModeString$MH,"glutGameModeString");
    }
    public static void glutGameModeString ( Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.glutGameModeString$MH, "glutGameModeString");
        try {
            mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutEnterGameMode$MH() {
        return RuntimeHelper.requireNonNull(constants$734.glutEnterGameMode$MH,"glutEnterGameMode");
    }
    public static int glutEnterGameMode () {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.glutEnterGameMode$MH, "glutEnterGameMode");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutLeaveGameMode$MH() {
        return RuntimeHelper.requireNonNull(constants$735.glutLeaveGameMode$MH,"glutLeaveGameMode");
    }
    public static void glutLeaveGameMode () {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.glutLeaveGameMode$MH, "glutLeaveGameMode");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGameModeGet$MH() {
        return RuntimeHelper.requireNonNull(constants$735.glutGameModeGet$MH,"glutGameModeGet");
    }
    public static int glutGameModeGet ( int query) {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.glutGameModeGet$MH, "glutGameModeGet");
        try {
            return (int)mh$.invokeExact(query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutVideoResizeGet$MH() {
        return RuntimeHelper.requireNonNull(constants$735.glutVideoResizeGet$MH,"glutVideoResizeGet");
    }
    public static int glutVideoResizeGet ( int query) {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.glutVideoResizeGet$MH, "glutVideoResizeGet");
        try {
            return (int)mh$.invokeExact(query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetupVideoResizing$MH() {
        return RuntimeHelper.requireNonNull(constants$735.glutSetupVideoResizing$MH,"glutSetupVideoResizing");
    }
    public static void glutSetupVideoResizing () {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.glutSetupVideoResizing$MH, "glutSetupVideoResizing");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutStopVideoResizing$MH() {
        return RuntimeHelper.requireNonNull(constants$735.glutStopVideoResizing$MH,"glutStopVideoResizing");
    }
    public static void glutStopVideoResizing () {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.glutStopVideoResizing$MH, "glutStopVideoResizing");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutVideoResize$MH() {
        return RuntimeHelper.requireNonNull(constants$735.glutVideoResize$MH,"glutVideoResize");
    }
    public static void glutVideoResize ( int x,  int y,  int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.glutVideoResize$MH, "glutVideoResize");
        try {
            mh$.invokeExact(x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutVideoPan$MH() {
        return RuntimeHelper.requireNonNull(constants$736.glutVideoPan$MH,"glutVideoPan");
    }
    public static void glutVideoPan ( int x,  int y,  int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.glutVideoPan$MH, "glutVideoPan");
        try {
            mh$.invokeExact(x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetColor$MH() {
        return RuntimeHelper.requireNonNull(constants$736.glutSetColor$MH,"glutSetColor");
    }
    public static void glutSetColor ( int color,  float red,  float green,  float blue) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.glutSetColor$MH, "glutSetColor");
        try {
            mh$.invokeExact(color, red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGetColor$MH() {
        return RuntimeHelper.requireNonNull(constants$736.glutGetColor$MH,"glutGetColor");
    }
    public static float glutGetColor ( int color,  int component) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.glutGetColor$MH, "glutGetColor");
        try {
            return (float)mh$.invokeExact(color, component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutCopyColormap$MH() {
        return RuntimeHelper.requireNonNull(constants$736.glutCopyColormap$MH,"glutCopyColormap");
    }
    public static void glutCopyColormap ( int window) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.glutCopyColormap$MH, "glutCopyColormap");
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutIgnoreKeyRepeat$MH() {
        return RuntimeHelper.requireNonNull(constants$736.glutIgnoreKeyRepeat$MH,"glutIgnoreKeyRepeat");
    }
    public static void glutIgnoreKeyRepeat ( int ignore) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.glutIgnoreKeyRepeat$MH, "glutIgnoreKeyRepeat");
        try {
            mh$.invokeExact(ignore);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetKeyRepeat$MH() {
        return RuntimeHelper.requireNonNull(constants$736.glutSetKeyRepeat$MH,"glutSetKeyRepeat");
    }
    public static void glutSetKeyRepeat ( int repeatMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.glutSetKeyRepeat$MH, "glutSetKeyRepeat");
        try {
            mh$.invokeExact(repeatMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutForceJoystickFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$737.glutForceJoystickFunc$MH,"glutForceJoystickFunc");
    }
    public static void glutForceJoystickFunc () {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.glutForceJoystickFunc$MH, "glutForceJoystickFunc");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutExtensionSupported$MH() {
        return RuntimeHelper.requireNonNull(constants$737.glutExtensionSupported$MH,"glutExtensionSupported");
    }
    public static int glutExtensionSupported ( Addressable extension) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.glutExtensionSupported$MH, "glutExtensionSupported");
        try {
            return (int)mh$.invokeExact(extension);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutReportErrors$MH() {
        return RuntimeHelper.requireNonNull(constants$737.glutReportErrors$MH,"glutReportErrors");
    }
    public static void glutReportErrors () {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.glutReportErrors$MH, "glutReportErrors");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _calloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$737._calloc_base$MH,"_calloc_base");
    }
    public static MemoryAddress _calloc_base ( long _Count,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737._calloc_base$MH, "_calloc_base");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle calloc$MH() {
        return RuntimeHelper.requireNonNull(constants$737.calloc$MH,"calloc");
    }
    public static MemoryAddress calloc ( long _Count,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.calloc$MH, "calloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _callnewh$MH() {
        return RuntimeHelper.requireNonNull(constants$737._callnewh$MH,"_callnewh");
    }
    public static int _callnewh ( long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737._callnewh$MH, "_callnewh");
        try {
            return (int)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _expand$MH() {
        return RuntimeHelper.requireNonNull(constants$738._expand$MH,"_expand");
    }
    public static MemoryAddress _expand ( Addressable _Block,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738._expand$MH, "_expand");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _free_base$MH() {
        return RuntimeHelper.requireNonNull(constants$738._free_base$MH,"_free_base");
    }
    public static void _free_base ( Addressable _Block) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738._free_base$MH, "_free_base");
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle free$MH() {
        return RuntimeHelper.requireNonNull(constants$738.free$MH,"free");
    }
    public static void free ( Addressable _Block) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738.free$MH, "free");
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _malloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$738._malloc_base$MH,"_malloc_base");
    }
    public static MemoryAddress _malloc_base ( long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738._malloc_base$MH, "_malloc_base");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$738.malloc$MH,"malloc");
    }
    public static MemoryAddress malloc ( long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738.malloc$MH, "malloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize_base$MH() {
        return RuntimeHelper.requireNonNull(constants$738._msize_base$MH,"_msize_base");
    }
    public static long _msize_base ( Addressable _Block) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738._msize_base$MH, "_msize_base");
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize$MH() {
        return RuntimeHelper.requireNonNull(constants$739._msize$MH,"_msize");
    }
    public static long _msize ( Addressable _Block) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739._msize$MH, "_msize");
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _realloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$739._realloc_base$MH,"_realloc_base");
    }
    public static MemoryAddress _realloc_base ( Addressable _Block,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739._realloc_base$MH, "_realloc_base");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$739.realloc$MH,"realloc");
    }
    public static MemoryAddress realloc ( Addressable _Block,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739.realloc$MH, "realloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$739._recalloc_base$MH,"_recalloc_base");
    }
    public static MemoryAddress _recalloc_base ( Addressable _Block,  long _Count,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739._recalloc_base$MH, "_recalloc_base");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$739._recalloc$MH,"_recalloc");
    }
    public static MemoryAddress _recalloc ( Addressable _Block,  long _Count,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739._recalloc$MH, "_recalloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_free$MH() {
        return RuntimeHelper.requireNonNull(constants$739._aligned_free$MH,"_aligned_free");
    }
    public static void _aligned_free ( Addressable _Block) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739._aligned_free$MH, "_aligned_free");
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$740._aligned_malloc$MH,"_aligned_malloc");
    }
    public static MemoryAddress _aligned_malloc ( long _Size,  long _Alignment) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740._aligned_malloc$MH, "_aligned_malloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$740._aligned_offset_malloc$MH,"_aligned_offset_malloc");
    }
    public static MemoryAddress _aligned_offset_malloc ( long _Size,  long _Alignment,  long _Offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740._aligned_offset_malloc$MH, "_aligned_offset_malloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_msize$MH() {
        return RuntimeHelper.requireNonNull(constants$740._aligned_msize$MH,"_aligned_msize");
    }
    public static long _aligned_msize ( Addressable _Block,  long _Alignment,  long _Offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740._aligned_msize$MH, "_aligned_msize");
        try {
            return (long)mh$.invokeExact(_Block, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$740._aligned_offset_realloc$MH,"_aligned_offset_realloc");
    }
    public static MemoryAddress _aligned_offset_realloc ( Addressable _Block,  long _Size,  long _Alignment,  long _Offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740._aligned_offset_realloc$MH, "_aligned_offset_realloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$740._aligned_offset_recalloc$MH,"_aligned_offset_recalloc");
    }
    public static MemoryAddress _aligned_offset_recalloc ( Addressable _Block,  long _Count,  long _Size,  long _Alignment,  long _Offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740._aligned_offset_recalloc$MH, "_aligned_offset_recalloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$740._aligned_realloc$MH,"_aligned_realloc");
    }
    public static MemoryAddress _aligned_realloc ( Addressable _Block,  long _Size,  long _Alignment) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740._aligned_realloc$MH, "_aligned_realloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$741._aligned_recalloc$MH,"_aligned_recalloc");
    }
    public static MemoryAddress _aligned_recalloc ( Addressable _Block,  long _Count,  long _Size,  long _Alignment) {
        var mh$ = RuntimeHelper.requireNonNull(constants$741._aligned_recalloc$MH, "_aligned_recalloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong ptrdiff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfDouble max_align_t = Constants$root.C_DOUBLE$LAYOUT;
    public static MethodHandle bsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$741.bsearch_s$MH,"bsearch_s");
    }
    public static MemoryAddress bsearch_s ( Addressable _Key,  Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$741.bsearch_s$MH, "bsearch_s");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort_s$MH() {
        return RuntimeHelper.requireNonNull(constants$742.qsort_s$MH,"qsort_s");
    }
    public static void qsort_s ( Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.qsort_s$MH, "qsort_s");
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$742.bsearch$MH,"bsearch");
    }
    public static MemoryAddress bsearch ( Addressable _Key,  Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.bsearch$MH, "bsearch");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort$MH() {
        return RuntimeHelper.requireNonNull(constants$742.qsort$MH,"qsort");
    }
    public static void qsort ( Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.qsort$MH, "qsort");
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind_s$MH() {
        return RuntimeHelper.requireNonNull(constants$742._lfind_s$MH,"_lfind_s");
    }
    public static MemoryAddress _lfind_s ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742._lfind_s$MH, "_lfind_s");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$742._lfind$MH,"_lfind");
    }
    public static MemoryAddress _lfind ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742._lfind$MH, "_lfind");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$742._lsearch_s$MH,"_lsearch_s");
    }
    public static MemoryAddress _lsearch_s ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742._lsearch_s$MH, "_lsearch_s");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$743._lsearch$MH,"_lsearch");
    }
    public static MemoryAddress _lsearch ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743._lsearch$MH, "_lsearch");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$743.lfind$MH,"lfind");
    }
    public static MemoryAddress lfind ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743.lfind$MH, "lfind");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$743.lsearch$MH,"lsearch");
    }
    public static MemoryAddress lsearch ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743.lsearch$MH, "lsearch");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$743._itow_s$MH,"_itow_s");
    }
    public static int _itow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743._itow_s$MH, "_itow_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow$MH() {
        return RuntimeHelper.requireNonNull(constants$743._itow$MH,"_itow");
    }
    public static MemoryAddress _itow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743._itow$MH, "_itow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$743._ltow_s$MH,"_ltow_s");
    }
    public static int _ltow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743._ltow_s$MH, "_ltow_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow$MH() {
        return RuntimeHelper.requireNonNull(constants$744._ltow$MH,"_ltow");
    }
    public static MemoryAddress _ltow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744._ltow$MH, "_ltow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$744._ultow_s$MH,"_ultow_s");
    }
    public static int _ultow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744._ultow_s$MH, "_ultow_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow$MH() {
        return RuntimeHelper.requireNonNull(constants$744._ultow$MH,"_ultow");
    }
    public static MemoryAddress _ultow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744._ultow$MH, "_ultow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstod$MH() {
        return RuntimeHelper.requireNonNull(constants$744.wcstod$MH,"wcstod");
    }
    public static double wcstod ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744.wcstod$MH, "wcstod");
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$744._wcstod_l$MH,"_wcstod_l");
    }
    public static double _wcstod_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744._wcstod_l$MH, "_wcstod_l");
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstol$MH() {
        return RuntimeHelper.requireNonNull(constants$744.wcstol$MH,"wcstol");
    }
    public static int wcstol ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744.wcstol$MH, "wcstol");
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$745._wcstol_l$MH,"_wcstol_l");
    }
    public static int _wcstol_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$745._wcstol_l$MH, "_wcstol_l");
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoll$MH() {
        return RuntimeHelper.requireNonNull(constants$745.wcstoll$MH,"wcstoll");
    }
    public static long wcstoll ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$745.wcstoll$MH, "wcstoll");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$745._wcstoll_l$MH,"_wcstoll_l");
    }
    public static long _wcstoll_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$745._wcstoll_l$MH, "_wcstoll_l");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoul$MH() {
        return RuntimeHelper.requireNonNull(constants$745.wcstoul$MH,"wcstoul");
    }
    public static int wcstoul ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$745.wcstoul$MH, "wcstoul");
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$745._wcstoul_l$MH,"_wcstoul_l");
    }
    public static int _wcstoul_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$745._wcstoul_l$MH, "_wcstoul_l");
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoull$MH() {
        return RuntimeHelper.requireNonNull(constants$745.wcstoull$MH,"wcstoull");
    }
    public static long wcstoull ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$745.wcstoull$MH, "wcstoull");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$746._wcstoull_l$MH,"_wcstoull_l");
    }
    public static long _wcstoull_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$746._wcstoull_l$MH, "_wcstoull_l");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstof$MH() {
        return RuntimeHelper.requireNonNull(constants$746.wcstof$MH,"wcstof");
    }
    public static float wcstof ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$746.wcstof$MH, "wcstof");
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$746._wcstof_l$MH,"_wcstof_l");
    }
    public static float _wcstof_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$746._wcstof_l$MH, "_wcstof_l");
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof$MH() {
        return RuntimeHelper.requireNonNull(constants$746._wtof$MH,"_wtof");
    }
    public static double _wtof ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$746._wtof$MH, "_wtof");
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$746._wtof_l$MH,"_wtof_l");
    }
    public static double _wtof_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$746._wtof_l$MH, "_wtof_l");
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi$MH() {
        return RuntimeHelper.requireNonNull(constants$746._wtoi$MH,"_wtoi");
    }
    public static int _wtoi ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$746._wtoi$MH, "_wtoi");
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$747._wtoi_l$MH,"_wtoi_l");
    }
    public static int _wtoi_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747._wtoi_l$MH, "_wtoi_l");
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol$MH() {
        return RuntimeHelper.requireNonNull(constants$747._wtol$MH,"_wtol");
    }
    public static int _wtol ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747._wtol$MH, "_wtol");
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$747._wtol_l$MH,"_wtol_l");
    }
    public static int _wtol_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747._wtol_l$MH, "_wtol_l");
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$747._wtoll$MH,"_wtoll");
    }
    public static long _wtoll ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747._wtoll$MH, "_wtoll");
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$747._wtoll_l$MH,"_wtoll_l");
    }
    public static long _wtoll_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747._wtoll_l$MH, "_wtoll_l");
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$747._i64tow_s$MH,"_i64tow_s");
    }
    public static int _i64tow_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747._i64tow_s$MH, "_i64tow_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$748._i64tow$MH,"_i64tow");
    }
    public static MemoryAddress _i64tow ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748._i64tow$MH, "_i64tow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$748._ui64tow_s$MH,"_ui64tow_s");
    }
    public static int _ui64tow_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748._ui64tow_s$MH, "_ui64tow_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$748._ui64tow$MH,"_ui64tow");
    }
    public static MemoryAddress _ui64tow ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748._ui64tow$MH, "_ui64tow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$748._wtoi64$MH,"_wtoi64");
    }
    public static long _wtoi64 ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748._wtoi64$MH, "_wtoi64");
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$748._wtoi64_l$MH,"_wtoi64_l");
    }
    public static long _wtoi64_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748._wtoi64_l$MH, "_wtoi64_l");
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$748._wcstoi64$MH,"_wcstoi64");
    }
    public static long _wcstoi64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748._wcstoi64$MH, "_wcstoi64");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$749._wcstoi64_l$MH,"_wcstoi64_l");
    }
    public static long _wcstoi64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749._wcstoi64_l$MH, "_wcstoi64_l");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$749._wcstoui64$MH,"_wcstoui64");
    }
    public static long _wcstoui64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749._wcstoui64$MH, "_wcstoui64");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$749._wcstoui64_l$MH,"_wcstoui64_l");
    }
    public static long _wcstoui64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749._wcstoui64_l$MH, "_wcstoui64_l");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$749._wfullpath$MH,"_wfullpath");
    }
    public static MemoryAddress _wfullpath ( Addressable _Buffer,  Addressable _Path,  long _BufferCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749._wfullpath$MH, "_wfullpath");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$749._wmakepath_s$MH,"_wmakepath_s");
    }
    public static int _wmakepath_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749._wmakepath_s$MH, "_wmakepath_s");
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath$MH() {
        return RuntimeHelper.requireNonNull(constants$749._wmakepath$MH,"_wmakepath");
    }
    public static void _wmakepath ( Addressable _Buffer,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749._wmakepath$MH, "_wmakepath");
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wperror$MH() {
        return RuntimeHelper.requireNonNull(constants$750._wperror$MH,"_wperror");
    }
    public static void _wperror ( Addressable _ErrorMessage) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750._wperror$MH, "_wperror");
        try {
            mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$750._wsplitpath$MH,"_wsplitpath");
    }
    public static void _wsplitpath ( Addressable _FullPath,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750._wsplitpath$MH, "_wsplitpath");
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$750._wsplitpath_s$MH,"_wsplitpath_s");
    }
    public static int _wsplitpath_s ( Addressable _FullPath,  Addressable _Drive,  long _DriveCount,  Addressable _Dir,  long _DirCount,  Addressable _Filename,  long _FilenameCount,  Addressable _Ext,  long _ExtCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750._wsplitpath_s$MH, "_wsplitpath_s");
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wdupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$750._wdupenv_s$MH,"_wdupenv_s");
    }
    public static int _wdupenv_s ( Addressable _Buffer,  Addressable _BufferCount,  Addressable _VarName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750._wdupenv_s$MH, "_wdupenv_s");
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$750._wgetenv$MH,"_wgetenv");
    }
    public static MemoryAddress _wgetenv ( Addressable _VarName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750._wgetenv$MH, "_wgetenv");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$750._wgetenv_s$MH,"_wgetenv_s");
    }
    public static int _wgetenv_s ( Addressable _RequiredCount,  Addressable _Buffer,  long _BufferCount,  Addressable _VarName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750._wgetenv_s$MH, "_wgetenv_s");
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv$MH() {
        return RuntimeHelper.requireNonNull(constants$751._wputenv$MH,"_wputenv");
    }
    public static int _wputenv ( Addressable _EnvString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751._wputenv$MH, "_wputenv");
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$751._wputenv_s$MH,"_wputenv_s");
    }
    public static int _wputenv_s ( Addressable _Name,  Addressable _Value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751._wputenv_s$MH, "_wputenv_s");
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$751._wsearchenv_s$MH,"_wsearchenv_s");
    }
    public static int _wsearchenv_s ( Addressable _Filename,  Addressable _VarName,  Addressable _Buffer,  long _BufferCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751._wsearchenv_s$MH, "_wsearchenv_s");
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$751._wsearchenv$MH,"_wsearchenv");
    }
    public static void _wsearchenv ( Addressable _Filename,  Addressable _VarName,  Addressable _ResultPath) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751._wsearchenv$MH, "_wsearchenv");
        try {
            mh$.invokeExact(_Filename, _VarName, _ResultPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsystem$MH() {
        return RuntimeHelper.requireNonNull(constants$751._wsystem$MH,"_wsystem");
    }
    public static int _wsystem ( Addressable _Command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751._wsystem$MH, "_wsystem");
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swab$MH() {
        return RuntimeHelper.requireNonNull(constants$751._swab$MH,"_swab");
    }
    public static void _swab ( Addressable _Buf1,  Addressable _Buf2,  int _SizeInBytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751._swab$MH, "_swab");
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exit$MH() {
        return RuntimeHelper.requireNonNull(constants$752.exit$MH,"exit");
    }
    public static void exit ( int _Code) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.exit$MH, "exit");
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exit$MH() {
        return RuntimeHelper.requireNonNull(constants$752._exit$MH,"_exit");
    }
    public static void _exit ( int _Code) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752._exit$MH, "_exit");
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _Exit$MH() {
        return RuntimeHelper.requireNonNull(constants$752._Exit$MH,"_Exit");
    }
    public static void _Exit ( int _Code) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752._Exit$MH, "_Exit");
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$752.quick_exit$MH,"quick_exit");
    }
    public static void quick_exit ( int _Code) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.quick_exit$MH, "quick_exit");
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abort$MH() {
        return RuntimeHelper.requireNonNull(constants$752.abort$MH,"abort");
    }
    public static void abort () {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.abort$MH, "abort");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_abort_behavior$MH() {
        return RuntimeHelper.requireNonNull(constants$752._set_abort_behavior$MH,"_set_abort_behavior");
    }
    public static int _set_abort_behavior ( int _Flags,  int _Mask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752._set_abort_behavior$MH, "_set_abort_behavior");
        try {
            return (int)mh$.invokeExact(_Flags, _Mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atexit$MH() {
        return RuntimeHelper.requireNonNull(constants$753.atexit$MH,"atexit");
    }
    public static int atexit ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$753.atexit$MH, "atexit");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$753._onexit$MH,"_onexit");
    }
    public static MemoryAddress _onexit ( Addressable _Func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$753._onexit$MH, "_onexit");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle at_quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$754.at_quick_exit$MH,"at_quick_exit");
    }
    public static int at_quick_exit ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$754.at_quick_exit$MH, "at_quick_exit");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$755._set_purecall_handler$MH,"_set_purecall_handler");
    }
    public static MemoryAddress _set_purecall_handler ( Addressable _Handler) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755._set_purecall_handler$MH, "_set_purecall_handler");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$755._get_purecall_handler$MH,"_get_purecall_handler");
    }
    public static MemoryAddress _get_purecall_handler () {
        var mh$ = RuntimeHelper.requireNonNull(constants$755._get_purecall_handler$MH, "_get_purecall_handler");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$755._set_invalid_parameter_handler$MH,"_set_invalid_parameter_handler");
    }
    public static MemoryAddress _set_invalid_parameter_handler ( Addressable _Handler) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755._set_invalid_parameter_handler$MH, "_set_invalid_parameter_handler");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$755._get_invalid_parameter_handler$MH,"_get_invalid_parameter_handler");
    }
    public static MemoryAddress _get_invalid_parameter_handler () {
        var mh$ = RuntimeHelper.requireNonNull(constants$755._get_invalid_parameter_handler$MH, "_get_invalid_parameter_handler");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$755._set_thread_local_invalid_parameter_handler$MH,"_set_thread_local_invalid_parameter_handler");
    }
    public static MemoryAddress _set_thread_local_invalid_parameter_handler ( Addressable _Handler) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755._set_thread_local_invalid_parameter_handler$MH, "_set_thread_local_invalid_parameter_handler");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$756._get_thread_local_invalid_parameter_handler$MH,"_get_thread_local_invalid_parameter_handler");
    }
    public static MemoryAddress _get_thread_local_invalid_parameter_handler () {
        var mh$ = RuntimeHelper.requireNonNull(constants$756._get_thread_local_invalid_parameter_handler$MH, "_get_thread_local_invalid_parameter_handler");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_error_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$756._set_error_mode$MH,"_set_error_mode");
    }
    public static int _set_error_mode ( int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$756._set_error_mode$MH, "_set_error_mode");
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_errlist$MH() {
        return RuntimeHelper.requireNonNull(constants$756.__sys_errlist$MH,"__sys_errlist");
    }
    public static MemoryAddress __sys_errlist () {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.__sys_errlist$MH, "__sys_errlist");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_nerr$MH() {
        return RuntimeHelper.requireNonNull(constants$756.__sys_nerr$MH,"__sys_nerr");
    }
    public static MemoryAddress __sys_nerr () {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.__sys_nerr$MH, "__sys_nerr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle perror$MH() {
        return RuntimeHelper.requireNonNull(constants$756.perror$MH,"perror");
    }
    public static void perror ( Addressable _ErrMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.perror$MH, "perror");
        try {
            mh$.invokeExact(_ErrMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$756.__p__pgmptr$MH,"__p__pgmptr");
    }
    public static MemoryAddress __p__pgmptr () {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.__p__pgmptr$MH, "__p__pgmptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$757.__p__wpgmptr$MH,"__p__wpgmptr");
    }
    public static MemoryAddress __p__wpgmptr () {
        var mh$ = RuntimeHelper.requireNonNull(constants$757.__p__wpgmptr$MH, "__p__wpgmptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$757.__p__fmode$MH,"__p__fmode");
    }
    public static MemoryAddress __p__fmode () {
        var mh$ = RuntimeHelper.requireNonNull(constants$757.__p__fmode$MH, "__p__fmode");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$757._get_pgmptr$MH,"_get_pgmptr");
    }
    public static int _get_pgmptr ( Addressable _Value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757._get_pgmptr$MH, "_get_pgmptr");
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$757._get_wpgmptr$MH,"_get_wpgmptr");
    }
    public static int _get_wpgmptr ( Addressable _Value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757._get_wpgmptr$MH, "_get_wpgmptr");
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$757._set_fmode$MH,"_set_fmode");
    }
    public static int _set_fmode ( int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757._set_fmode$MH, "_set_fmode");
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$757._get_fmode$MH,"_get_fmode");
    }
    public static int _get_fmode ( Addressable _PMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757._get_fmode$MH, "_get_fmode");
        try {
            return (int)mh$.invokeExact(_PMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abs$MH() {
        return RuntimeHelper.requireNonNull(constants$758.abs$MH,"abs");
    }
    public static int abs ( int _Number) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.abs$MH, "abs");
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle labs$MH() {
        return RuntimeHelper.requireNonNull(constants$758.labs$MH,"labs");
    }
    public static int labs ( int _Number) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.labs$MH, "labs");
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llabs$MH() {
        return RuntimeHelper.requireNonNull(constants$758.llabs$MH,"llabs");
    }
    public static long llabs ( long _Number) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.llabs$MH, "llabs");
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _abs64$MH() {
        return RuntimeHelper.requireNonNull(constants$758._abs64$MH,"_abs64");
    }
    public static long _abs64 ( long _Number) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758._abs64$MH, "_abs64");
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ushort$MH() {
        return RuntimeHelper.requireNonNull(constants$758._byteswap_ushort$MH,"_byteswap_ushort");
    }
    public static short _byteswap_ushort ( short _Number) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758._byteswap_ushort$MH, "_byteswap_ushort");
        try {
            return (short)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$758._byteswap_ulong$MH,"_byteswap_ulong");
    }
    public static int _byteswap_ulong ( int _Number) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758._byteswap_ulong$MH, "_byteswap_ulong");
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$759._byteswap_uint64$MH,"_byteswap_uint64");
    }
    public static long _byteswap_uint64 ( long _Number) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759._byteswap_uint64$MH, "_byteswap_uint64");
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle div$MH() {
        return RuntimeHelper.requireNonNull(constants$759.div$MH,"div");
    }
    public static MemorySegment div ( SegmentAllocator allocator,  int _Numerator,  int _Denominator) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.div$MH, "div");
        try {
            return (jdk.incubator.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment div ( ResourceScope scope,  int _Numerator,  int _Denominator) {
        return div(SegmentAllocator.nativeAllocator(scope), _Numerator, _Denominator);
    }
    public static MethodHandle ldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$759.ldiv$MH,"ldiv");
    }
    public static MemorySegment ldiv ( SegmentAllocator allocator,  int _Numerator,  int _Denominator) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.ldiv$MH, "ldiv");
        try {
            return (jdk.incubator.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment ldiv ( ResourceScope scope,  int _Numerator,  int _Denominator) {
        return ldiv(SegmentAllocator.nativeAllocator(scope), _Numerator, _Denominator);
    }
    public static MethodHandle lldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$759.lldiv$MH,"lldiv");
    }
    public static MemorySegment lldiv ( SegmentAllocator allocator,  long _Numerator,  long _Denominator) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.lldiv$MH, "lldiv");
        try {
            return (jdk.incubator.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment lldiv ( ResourceScope scope,  long _Numerator,  long _Denominator) {
        return lldiv(SegmentAllocator.nativeAllocator(scope), _Numerator, _Denominator);
    }
    public static MethodHandle _lrotl$MH() {
        return RuntimeHelper.requireNonNull(constants$759._lrotl$MH,"_lrotl");
    }
    public static int _lrotl ( int _Value,  int _Shift) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759._lrotl$MH, "_lrotl");
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotr$MH() {
        return RuntimeHelper.requireNonNull(constants$759._lrotr$MH,"_lrotr");
    }
    public static int _lrotr ( int _Value,  int _Shift) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759._lrotr$MH, "_lrotr");
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srand$MH() {
        return RuntimeHelper.requireNonNull(constants$760.srand$MH,"srand");
    }
    public static void srand ( int _Seed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.srand$MH, "srand");
        try {
            mh$.invokeExact(_Seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rand$MH() {
        return RuntimeHelper.requireNonNull(constants$760.rand$MH,"rand");
    }
    public static int rand () {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.rand$MH, "rand");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atof$MH() {
        return RuntimeHelper.requireNonNull(constants$760.atof$MH,"atof");
    }
    public static double atof ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.atof$MH, "atof");
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoi$MH() {
        return RuntimeHelper.requireNonNull(constants$760.atoi$MH,"atoi");
    }
    public static int atoi ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.atoi$MH, "atoi");
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atol$MH() {
        return RuntimeHelper.requireNonNull(constants$760.atol$MH,"atol");
    }
    public static int atol ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.atol$MH, "atol");
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoll$MH() {
        return RuntimeHelper.requireNonNull(constants$760.atoll$MH,"atoll");
    }
    public static long atoll ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.atoll$MH, "atoll");
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$761._atoi64$MH,"_atoi64");
    }
    public static long _atoi64 ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761._atoi64$MH, "_atoi64");
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$761._atof_l$MH,"_atof_l");
    }
    public static double _atof_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761._atof_l$MH, "_atof_l");
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$761._atoi_l$MH,"_atoi_l");
    }
    public static int _atoi_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761._atoi_l$MH, "_atoi_l");
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$761._atol_l$MH,"_atol_l");
    }
    public static int _atol_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761._atol_l$MH, "_atol_l");
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$761._atoll_l$MH,"_atoll_l");
    }
    public static long _atoll_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761._atoll_l$MH, "_atoll_l");
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$761._atoi64_l$MH,"_atoi64_l");
    }
    public static long _atoi64_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761._atoi64_l$MH, "_atoi64_l");
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt$MH() {
        return RuntimeHelper.requireNonNull(constants$762._atoflt$MH,"_atoflt");
    }
    public static int _atoflt ( Addressable _Result,  Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762._atoflt$MH, "_atoflt");
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl$MH() {
        return RuntimeHelper.requireNonNull(constants$762._atodbl$MH,"_atodbl");
    }
    public static int _atodbl ( Addressable _Result,  Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762._atodbl$MH, "_atodbl");
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl$MH() {
        return RuntimeHelper.requireNonNull(constants$762._atoldbl$MH,"_atoldbl");
    }
    public static int _atoldbl ( Addressable _Result,  Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762._atoldbl$MH, "_atoldbl");
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt_l$MH() {
        return RuntimeHelper.requireNonNull(constants$762._atoflt_l$MH,"_atoflt_l");
    }
    public static int _atoflt_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762._atoflt_l$MH, "_atoflt_l");
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$762._atodbl_l$MH,"_atodbl_l");
    }
    public static int _atodbl_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762._atodbl_l$MH, "_atodbl_l");
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$762._atoldbl_l$MH,"_atoldbl_l");
    }
    public static int _atoldbl_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762._atoldbl_l$MH, "_atoldbl_l");
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtof$MH() {
        return RuntimeHelper.requireNonNull(constants$763.strtof$MH,"strtof");
    }
    public static float strtof ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.strtof$MH, "strtof");
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$763._strtof_l$MH,"_strtof_l");
    }
    public static float _strtof_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763._strtof_l$MH, "_strtof_l");
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$763.strtod$MH,"strtod");
    }
    public static double strtod ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.strtod$MH, "strtod");
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$763._strtod_l$MH,"_strtod_l");
    }
    public static double _strtod_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763._strtod_l$MH, "_strtod_l");
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtol$MH() {
        return RuntimeHelper.requireNonNull(constants$763.strtol$MH,"strtol");
    }
    public static int strtol ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.strtol$MH, "strtol");
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$763._strtol_l$MH,"_strtol_l");
    }
    public static int _strtol_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763._strtol_l$MH, "_strtol_l");
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$764.strtoll$MH,"strtoll");
    }
    public static long strtoll ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764.strtoll$MH, "strtoll");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$764._strtoll_l$MH,"_strtoll_l");
    }
    public static long _strtoll_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764._strtoll_l$MH, "_strtoll_l");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoul$MH() {
        return RuntimeHelper.requireNonNull(constants$764.strtoul$MH,"strtoul");
    }
    public static int strtoul ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764.strtoul$MH, "strtoul");
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$764._strtoul_l$MH,"_strtoul_l");
    }
    public static int _strtoul_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764._strtoul_l$MH, "_strtoul_l");
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoull$MH() {
        return RuntimeHelper.requireNonNull(constants$764.strtoull$MH,"strtoull");
    }
    public static long strtoull ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764.strtoull$MH, "strtoull");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$764._strtoull_l$MH,"_strtoull_l");
    }
    public static long _strtoull_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764._strtoull_l$MH, "_strtoull_l");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$765._strtoi64$MH,"_strtoi64");
    }
    public static long _strtoi64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765._strtoi64$MH, "_strtoi64");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$765._strtoi64_l$MH,"_strtoi64_l");
    }
    public static long _strtoi64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765._strtoi64_l$MH, "_strtoi64_l");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$765._strtoui64$MH,"_strtoui64");
    }
    public static long _strtoui64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765._strtoui64$MH, "_strtoui64");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$765._strtoui64_l$MH,"_strtoui64_l");
    }
    public static long _strtoui64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765._strtoui64_l$MH, "_strtoui64_l");
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$765._itoa_s$MH,"_itoa_s");
    }
    public static int _itoa_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765._itoa_s$MH, "_itoa_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itoa$MH() {
        return RuntimeHelper.requireNonNull(constants$765._itoa$MH,"_itoa");
    }
    public static MemoryAddress _itoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765._itoa$MH, "_itoa");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$766._ltoa_s$MH,"_ltoa_s");
    }
    public static int _ltoa_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766._ltoa_s$MH, "_ltoa_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltoa$MH() {
        return RuntimeHelper.requireNonNull(constants$766._ltoa$MH,"_ltoa");
    }
    public static MemoryAddress _ltoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766._ltoa$MH, "_ltoa");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$766._ultoa_s$MH,"_ultoa_s");
    }
    public static int _ultoa_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766._ultoa_s$MH, "_ultoa_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultoa$MH() {
        return RuntimeHelper.requireNonNull(constants$766._ultoa$MH,"_ultoa");
    }
    public static MemoryAddress _ultoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766._ultoa$MH, "_ultoa");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64toa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$766._i64toa_s$MH,"_i64toa_s");
    }
    public static int _i64toa_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766._i64toa_s$MH, "_i64toa_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64toa$MH() {
        return RuntimeHelper.requireNonNull(constants$766._i64toa$MH,"_i64toa");
    }
    public static MemoryAddress _i64toa ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766._i64toa$MH, "_i64toa");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64toa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$767._ui64toa_s$MH,"_ui64toa_s");
    }
    public static int _ui64toa_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767._ui64toa_s$MH, "_ui64toa_s");
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64toa$MH() {
        return RuntimeHelper.requireNonNull(constants$767._ui64toa$MH,"_ui64toa");
    }
    public static MemoryAddress _ui64toa ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767._ui64toa$MH, "_ui64toa");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ecvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$767._ecvt_s$MH,"_ecvt_s");
    }
    public static int _ecvt_s ( Addressable _Buffer,  long _BufferCount,  double _Value,  int _DigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767._ecvt_s$MH, "_ecvt_s");
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$767._ecvt$MH,"_ecvt");
    }
    public static MemoryAddress _ecvt ( double _Value,  int _DigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767._ecvt$MH, "_ecvt");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$767._fcvt_s$MH,"_fcvt_s");
    }
    public static int _fcvt_s ( Addressable _Buffer,  long _BufferCount,  double _Value,  int _FractionalDigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767._fcvt_s$MH, "_fcvt_s");
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$767._fcvt$MH,"_fcvt");
    }
    public static MemoryAddress _fcvt ( double _Value,  int _FractionalDigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767._fcvt$MH, "_fcvt");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gcvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$768._gcvt_s$MH,"_gcvt_s");
    }
    public static int _gcvt_s ( Addressable _Buffer,  long _BufferCount,  double _Value,  int _DigitCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$768._gcvt_s$MH, "_gcvt_s");
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _DigitCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$768._gcvt$MH,"_gcvt");
    }
    public static MemoryAddress _gcvt ( double _Value,  int _DigitCount,  Addressable _Buffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$768._gcvt$MH, "_gcvt");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _DigitCount, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mblen$MH() {
        return RuntimeHelper.requireNonNull(constants$768.mblen$MH,"mblen");
    }
    public static int mblen ( Addressable _Ch,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$768.mblen$MH, "mblen");
        try {
            return (int)mh$.invokeExact(_Ch, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mblen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$768._mblen_l$MH,"_mblen_l");
    }
    public static int _mblen_l ( Addressable _Ch,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$768._mblen_l$MH, "_mblen_l");
        try {
            return (int)mh$.invokeExact(_Ch, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrlen$MH() {
        return RuntimeHelper.requireNonNull(constants$768._mbstrlen$MH,"_mbstrlen");
    }
    public static long _mbstrlen ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$768._mbstrlen$MH, "_mbstrlen");
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrlen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$768._mbstrlen_l$MH,"_mbstrlen_l");
    }
    public static long _mbstrlen_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$768._mbstrlen_l$MH, "_mbstrlen_l");
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$769._mbstrnlen$MH,"_mbstrnlen");
    }
    public static long _mbstrnlen ( Addressable _String,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769._mbstrnlen$MH, "_mbstrnlen");
        try {
            return (long)mh$.invokeExact(_String, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrnlen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$769._mbstrnlen_l$MH,"_mbstrnlen_l");
    }
    public static long _mbstrnlen_l ( Addressable _String,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769._mbstrnlen_l$MH, "_mbstrnlen_l");
        try {
            return (long)mh$.invokeExact(_String, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbtowc$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mbtowc$MH,"mbtowc");
    }
    public static int mbtowc ( Addressable _DstCh,  Addressable _SrcCh,  long _SrcSizeInBytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mbtowc$MH, "mbtowc");
        try {
            return (int)mh$.invokeExact(_DstCh, _SrcCh, _SrcSizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbtowc_l$MH() {
        return RuntimeHelper.requireNonNull(constants$769._mbtowc_l$MH,"_mbtowc_l");
    }
    public static int _mbtowc_l ( Addressable _DstCh,  Addressable _SrcCh,  long _SrcSizeInBytes,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769._mbtowc_l$MH, "_mbtowc_l");
        try {
            return (int)mh$.invokeExact(_DstCh, _SrcCh, _SrcSizeInBytes, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs_s$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mbstowcs_s$MH,"mbstowcs_s");
    }
    public static int mbstowcs_s ( Addressable _PtNumOfCharConverted,  Addressable _DstBuf,  long _SizeInWords,  Addressable _SrcBuf,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mbstowcs_s$MH, "mbstowcs_s");
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _DstBuf, _SizeInWords, _SrcBuf, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mbstowcs$MH,"mbstowcs");
    }
    public static long mbstowcs ( Addressable _Dest,  Addressable _Source,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mbstowcs$MH, "mbstowcs");
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstowcs_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$770._mbstowcs_s_l$MH,"_mbstowcs_s_l");
    }
    public static int _mbstowcs_s_l ( Addressable _PtNumOfCharConverted,  Addressable _DstBuf,  long _SizeInWords,  Addressable _SrcBuf,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770._mbstowcs_s_l$MH, "_mbstowcs_s_l");
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _DstBuf, _SizeInWords, _SrcBuf, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstowcs_l$MH() {
        return RuntimeHelper.requireNonNull(constants$770._mbstowcs_l$MH,"_mbstowcs_l");
    }
    public static long _mbstowcs_l ( Addressable _Dest,  Addressable _Source,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770._mbstowcs_l$MH, "_mbstowcs_l");
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb$MH() {
        return RuntimeHelper.requireNonNull(constants$770.wctomb$MH,"wctomb");
    }
    public static int wctomb ( Addressable _MbCh,  short _WCh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770.wctomb$MH, "wctomb");
        try {
            return (int)mh$.invokeExact(_MbCh, _WCh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctomb_l$MH() {
        return RuntimeHelper.requireNonNull(constants$770._wctomb_l$MH,"_wctomb_l");
    }
    public static int _wctomb_l ( Addressable _MbCh,  short _WCh,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770._wctomb_l$MH, "_wctomb_l");
        try {
            return (int)mh$.invokeExact(_MbCh, _WCh, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb_s$MH() {
        return RuntimeHelper.requireNonNull(constants$770.wctomb_s$MH,"wctomb_s");
    }
    public static int wctomb_s ( Addressable _SizeConverted,  Addressable _MbCh,  long _SizeInBytes,  short _WCh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770.wctomb_s$MH, "wctomb_s");
        try {
            return (int)mh$.invokeExact(_SizeConverted, _MbCh, _SizeInBytes, _WCh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctomb_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$770._wctomb_s_l$MH,"_wctomb_s_l");
    }
    public static int _wctomb_s_l ( Addressable _SizeConverted,  Addressable _MbCh,  long _SizeInBytes,  short _WCh,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770._wctomb_s_l$MH, "_wctomb_s_l");
        try {
            return (int)mh$.invokeExact(_SizeConverted, _MbCh, _SizeInBytes, _WCh, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs_s$MH() {
        return RuntimeHelper.requireNonNull(constants$771.wcstombs_s$MH,"wcstombs_s");
    }
    public static int wcstombs_s ( Addressable _PtNumOfCharConverted,  Addressable _Dst,  long _DstSizeInBytes,  Addressable _Src,  long _MaxCountInBytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771.wcstombs_s$MH, "wcstombs_s");
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _Dst, _DstSizeInBytes, _Src, _MaxCountInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs$MH() {
        return RuntimeHelper.requireNonNull(constants$771.wcstombs$MH,"wcstombs");
    }
    public static long wcstombs ( Addressable _Dest,  Addressable _Source,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771.wcstombs$MH, "wcstombs");
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstombs_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$771._wcstombs_s_l$MH,"_wcstombs_s_l");
    }
    public static int _wcstombs_s_l ( Addressable _PtNumOfCharConverted,  Addressable _Dst,  long _DstSizeInBytes,  Addressable _Src,  long _MaxCountInBytes,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771._wcstombs_s_l$MH, "_wcstombs_s_l");
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _Dst, _DstSizeInBytes, _Src, _MaxCountInBytes, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstombs_l$MH() {
        return RuntimeHelper.requireNonNull(constants$771._wcstombs_l$MH,"_wcstombs_l");
    }
    public static long _wcstombs_l ( Addressable _Dest,  Addressable _Source,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771._wcstombs_l$MH, "_wcstombs_l");
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$771._fullpath$MH,"_fullpath");
    }
    public static MemoryAddress _fullpath ( Addressable _Buffer,  Addressable _Path,  long _BufferCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771._fullpath$MH, "_fullpath");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _makepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$771._makepath_s$MH,"_makepath_s");
    }
    public static int _makepath_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771._makepath_s$MH, "_makepath_s");
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _makepath$MH() {
        return RuntimeHelper.requireNonNull(constants$772._makepath$MH,"_makepath");
    }
    public static void _makepath ( Addressable _Buffer,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$772._makepath$MH, "_makepath");
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _splitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$772._splitpath$MH,"_splitpath");
    }
    public static void _splitpath ( Addressable _FullPath,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$772._splitpath$MH, "_splitpath");
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _splitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$772._splitpath_s$MH,"_splitpath_s");
    }
    public static int _splitpath_s ( Addressable _FullPath,  Addressable _Drive,  long _DriveCount,  Addressable _Dir,  long _DirCount,  Addressable _Filename,  long _FilenameCount,  Addressable _Ext,  long _ExtCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$772._splitpath_s$MH, "_splitpath_s");
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$772.getenv_s$MH,"getenv_s");
    }
    public static int getenv_s ( Addressable _RequiredCount,  Addressable _Buffer,  long _BufferCount,  Addressable _VarName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$772.getenv_s$MH, "getenv_s");
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___argc$MH() {
        return RuntimeHelper.requireNonNull(constants$772.__p___argc$MH,"__p___argc");
    }
    public static MemoryAddress __p___argc () {
        var mh$ = RuntimeHelper.requireNonNull(constants$772.__p___argc$MH, "__p___argc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___argv$MH() {
        return RuntimeHelper.requireNonNull(constants$772.__p___argv$MH,"__p___argv");
    }
    public static MemoryAddress __p___argv () {
        var mh$ = RuntimeHelper.requireNonNull(constants$772.__p___argv$MH, "__p___argv");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___wargv$MH() {
        return RuntimeHelper.requireNonNull(constants$773.__p___wargv$MH,"__p___wargv");
    }
    public static MemoryAddress __p___wargv () {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.__p___wargv$MH, "__p___wargv");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__environ$MH() {
        return RuntimeHelper.requireNonNull(constants$773.__p__environ$MH,"__p__environ");
    }
    public static MemoryAddress __p__environ () {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.__p__environ$MH, "__p__environ");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wenviron$MH() {
        return RuntimeHelper.requireNonNull(constants$773.__p__wenviron$MH,"__p__wenviron");
    }
    public static MemoryAddress __p__wenviron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.__p__wenviron$MH, "__p__wenviron");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$773.getenv$MH,"getenv");
    }
    public static MemoryAddress getenv ( Addressable _VarName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.getenv$MH, "getenv");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _dupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$773._dupenv_s$MH,"_dupenv_s");
    }
    public static int _dupenv_s ( Addressable _Buffer,  Addressable _BufferCount,  Addressable _VarName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773._dupenv_s$MH, "_dupenv_s");
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle system$MH() {
        return RuntimeHelper.requireNonNull(constants$773.system$MH,"system");
    }
    public static int system ( Addressable _Command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.system$MH, "system");
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$774._putenv$MH,"_putenv");
    }
    public static int _putenv ( Addressable _EnvString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774._putenv$MH, "_putenv");
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$774._putenv_s$MH,"_putenv_s");
    }
    public static int _putenv_s ( Addressable _Name,  Addressable _Value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774._putenv_s$MH, "_putenv_s");
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _searchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$774._searchenv_s$MH,"_searchenv_s");
    }
    public static int _searchenv_s ( Addressable _Filename,  Addressable _VarName,  Addressable _Buffer,  long _BufferCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774._searchenv_s$MH, "_searchenv_s");
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _searchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$774._searchenv$MH,"_searchenv");
    }
    public static void _searchenv ( Addressable _Filename,  Addressable _VarName,  Addressable _Buffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774._searchenv$MH, "_searchenv");
        try {
            mh$.invokeExact(_Filename, _VarName, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _seterrormode$MH() {
        return RuntimeHelper.requireNonNull(constants$774._seterrormode$MH,"_seterrormode");
    }
    public static void _seterrormode ( int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774._seterrormode$MH, "_seterrormode");
        try {
            mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _beep$MH() {
        return RuntimeHelper.requireNonNull(constants$774._beep$MH,"_beep");
    }
    public static void _beep ( int _Frequency,  int _Duration) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774._beep$MH, "_beep");
        try {
            mh$.invokeExact(_Frequency, _Duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sleep$MH() {
        return RuntimeHelper.requireNonNull(constants$775._sleep$MH,"_sleep");
    }
    public static void _sleep ( int _Duration) {
        var mh$ = RuntimeHelper.requireNonNull(constants$775._sleep$MH, "_sleep");
        try {
            mh$.invokeExact(_Duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$775.ecvt$MH,"ecvt");
    }
    public static MemoryAddress ecvt ( double _Value,  int _DigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = RuntimeHelper.requireNonNull(constants$775.ecvt$MH, "ecvt");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$775.fcvt$MH,"fcvt");
    }
    public static MemoryAddress fcvt ( double _Value,  int _FractionalDigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = RuntimeHelper.requireNonNull(constants$775.fcvt$MH, "fcvt");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$775.gcvt$MH,"gcvt");
    }
    public static MemoryAddress gcvt ( double _Value,  int _DigitCount,  Addressable _DstBuf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$775.gcvt$MH, "gcvt");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _DigitCount, _DstBuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle itoa$MH() {
        return RuntimeHelper.requireNonNull(constants$775.itoa$MH,"itoa");
    }
    public static MemoryAddress itoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$775.itoa$MH, "itoa");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ltoa$MH() {
        return RuntimeHelper.requireNonNull(constants$775.ltoa$MH,"ltoa");
    }
    public static MemoryAddress ltoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$775.ltoa$MH, "ltoa");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swab$MH() {
        return RuntimeHelper.requireNonNull(constants$776.swab$MH,"swab");
    }
    public static void swab ( Addressable _Buf1,  Addressable _Buf2,  int _SizeInBytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.swab$MH, "swab");
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ultoa$MH() {
        return RuntimeHelper.requireNonNull(constants$776.ultoa$MH,"ultoa");
    }
    public static MemoryAddress ultoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.ultoa$MH, "ultoa");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$776.putenv$MH,"putenv");
    }
    public static int putenv ( Addressable _EnvString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.putenv$MH, "putenv");
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$776.onexit$MH,"onexit");
    }
    public static MemoryAddress onexit ( Addressable _Func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.onexit$MH, "onexit");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __glutInitWithExit$MH() {
        return RuntimeHelper.requireNonNull(constants$777.__glutInitWithExit$MH,"__glutInitWithExit");
    }
    public static void __glutInitWithExit ( Addressable argcp,  Addressable argv,  Addressable exitfunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$777.__glutInitWithExit$MH, "__glutInitWithExit");
        try {
            mh$.invokeExact(argcp, argv, exitfunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __glutCreateWindowWithExit$MH() {
        return RuntimeHelper.requireNonNull(constants$777.__glutCreateWindowWithExit$MH,"__glutCreateWindowWithExit");
    }
    public static int __glutCreateWindowWithExit ( Addressable title,  Addressable exitfunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$777.__glutCreateWindowWithExit$MH, "__glutCreateWindowWithExit");
        try {
            return (int)mh$.invokeExact(title, exitfunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __glutCreateMenuWithExit$MH() {
        return RuntimeHelper.requireNonNull(constants$778.__glutCreateMenuWithExit$MH,"__glutCreateMenuWithExit");
    }
    public static int __glutCreateMenuWithExit ( Addressable func,  Addressable exitfunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.__glutCreateMenuWithExit$MH, "__glutCreateMenuWithExit");
        try {
            return (int)mh$.invokeExact(func, exitfunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInit_ATEXIT_HACK$MH() {
        return RuntimeHelper.requireNonNull(constants$778.glutInit_ATEXIT_HACK$MH,"glutInit_ATEXIT_HACK");
    }
    public static void glutInit_ATEXIT_HACK ( Addressable argcp,  Addressable argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.glutInit_ATEXIT_HACK$MH, "glutInit_ATEXIT_HACK");
        try {
            mh$.invokeExact(argcp, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutCreateWindow_ATEXIT_HACK$MH() {
        return RuntimeHelper.requireNonNull(constants$778.glutCreateWindow_ATEXIT_HACK$MH,"glutCreateWindow_ATEXIT_HACK");
    }
    public static int glutCreateWindow_ATEXIT_HACK ( Addressable title) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.glutCreateWindow_ATEXIT_HACK$MH, "glutCreateWindow_ATEXIT_HACK");
        try {
            return (int)mh$.invokeExact(title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutCreateMenu_ATEXIT_HACK$MH() {
        return RuntimeHelper.requireNonNull(constants$779.glutCreateMenu_ATEXIT_HACK$MH,"glutCreateMenu_ATEXIT_HACK");
    }
    public static int glutCreateMenu_ATEXIT_HACK ( Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.glutCreateMenu_ATEXIT_HACK$MH, "glutCreateMenu_ATEXIT_HACK");
        try {
            return (int)mh$.invokeExact(func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMainLoopEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$779.glutMainLoopEvent$MH,"glutMainLoopEvent");
    }
    public static void glutMainLoopEvent () {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.glutMainLoopEvent$MH, "glutMainLoopEvent");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutLeaveMainLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$779.glutLeaveMainLoop$MH,"glutLeaveMainLoop");
    }
    public static void glutLeaveMainLoop () {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.glutLeaveMainLoop$MH, "glutLeaveMainLoop");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutExit$MH() {
        return RuntimeHelper.requireNonNull(constants$779.glutExit$MH,"glutExit");
    }
    public static void glutExit () {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.glutExit$MH, "glutExit");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutFullScreenToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$779.glutFullScreenToggle$MH,"glutFullScreenToggle");
    }
    public static void glutFullScreenToggle () {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.glutFullScreenToggle$MH, "glutFullScreenToggle");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutLeaveFullScreen$MH() {
        return RuntimeHelper.requireNonNull(constants$780.glutLeaveFullScreen$MH,"glutLeaveFullScreen");
    }
    public static void glutLeaveFullScreen () {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.glutLeaveFullScreen$MH, "glutLeaveFullScreen");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetMenuFont$MH() {
        return RuntimeHelper.requireNonNull(constants$780.glutSetMenuFont$MH,"glutSetMenuFont");
    }
    public static void glutSetMenuFont ( int menuID,  Addressable font) {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.glutSetMenuFont$MH, "glutSetMenuFont");
        try {
            mh$.invokeExact(menuID, font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMouseWheelFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$780.glutMouseWheelFunc$MH,"glutMouseWheelFunc");
    }
    public static void glutMouseWheelFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.glutMouseWheelFunc$MH, "glutMouseWheelFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutPositionFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$781.glutPositionFunc$MH,"glutPositionFunc");
    }
    public static void glutPositionFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$781.glutPositionFunc$MH, "glutPositionFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutCloseFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$781.glutCloseFunc$MH,"glutCloseFunc");
    }
    public static void glutCloseFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$781.glutCloseFunc$MH, "glutCloseFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWMCloseFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$782.glutWMCloseFunc$MH,"glutWMCloseFunc");
    }
    public static void glutWMCloseFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.glutWMCloseFunc$MH, "glutWMCloseFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMenuDestroyFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$782.glutMenuDestroyFunc$MH,"glutMenuDestroyFunc");
    }
    public static void glutMenuDestroyFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.glutMenuDestroyFunc$MH, "glutMenuDestroyFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetOption$MH() {
        return RuntimeHelper.requireNonNull(constants$782.glutSetOption$MH,"glutSetOption");
    }
    public static void glutSetOption ( int option_flag,  int value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.glutSetOption$MH, "glutSetOption");
        try {
            mh$.invokeExact(option_flag, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGetModeValues$MH() {
        return RuntimeHelper.requireNonNull(constants$783.glutGetModeValues$MH,"glutGetModeValues");
    }
    public static MemoryAddress glutGetModeValues ( int mode,  Addressable size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.glutGetModeValues$MH, "glutGetModeValues");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(mode, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGetWindowData$MH() {
        return RuntimeHelper.requireNonNull(constants$783.glutGetWindowData$MH,"glutGetWindowData");
    }
    public static MemoryAddress glutGetWindowData () {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.glutGetWindowData$MH, "glutGetWindowData");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetWindowData$MH() {
        return RuntimeHelper.requireNonNull(constants$783.glutSetWindowData$MH,"glutSetWindowData");
    }
    public static void glutSetWindowData ( Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.glutSetWindowData$MH, "glutSetWindowData");
        try {
            mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGetMenuData$MH() {
        return RuntimeHelper.requireNonNull(constants$783.glutGetMenuData$MH,"glutGetMenuData");
    }
    public static MemoryAddress glutGetMenuData () {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.glutGetMenuData$MH, "glutGetMenuData");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetMenuData$MH() {
        return RuntimeHelper.requireNonNull(constants$783.glutSetMenuData$MH,"glutSetMenuData");
    }
    public static void glutSetMenuData ( Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.glutSetMenuData$MH, "glutSetMenuData");
        try {
            mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutBitmapHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$783.glutBitmapHeight$MH,"glutBitmapHeight");
    }
    public static int glutBitmapHeight ( Addressable font) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.glutBitmapHeight$MH, "glutBitmapHeight");
        try {
            return (int)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutStrokeHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$784.glutStrokeHeight$MH,"glutStrokeHeight");
    }
    public static float glutStrokeHeight ( Addressable font) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.glutStrokeHeight$MH, "glutStrokeHeight");
        try {
            return (float)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutBitmapString$MH() {
        return RuntimeHelper.requireNonNull(constants$784.glutBitmapString$MH,"glutBitmapString");
    }
    public static void glutBitmapString ( Addressable font,  Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.glutBitmapString$MH, "glutBitmapString");
        try {
            mh$.invokeExact(font, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutStrokeString$MH() {
        return RuntimeHelper.requireNonNull(constants$784.glutStrokeString$MH,"glutStrokeString");
    }
    public static void glutStrokeString ( Addressable font,  Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.glutStrokeString$MH, "glutStrokeString");
        try {
            mh$.invokeExact(font, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireRhombicDodecahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$784.glutWireRhombicDodecahedron$MH,"glutWireRhombicDodecahedron");
    }
    public static void glutWireRhombicDodecahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.glutWireRhombicDodecahedron$MH, "glutWireRhombicDodecahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidRhombicDodecahedron$MH() {
        return RuntimeHelper.requireNonNull(constants$784.glutSolidRhombicDodecahedron$MH,"glutSolidRhombicDodecahedron");
    }
    public static void glutSolidRhombicDodecahedron () {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.glutSolidRhombicDodecahedron$MH, "glutSolidRhombicDodecahedron");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireSierpinskiSponge$MH() {
        return RuntimeHelper.requireNonNull(constants$784.glutWireSierpinskiSponge$MH,"glutWireSierpinskiSponge");
    }
    public static void glutWireSierpinskiSponge ( int num_levels,  Addressable offset,  double scale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.glutWireSierpinskiSponge$MH, "glutWireSierpinskiSponge");
        try {
            mh$.invokeExact(num_levels, offset, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidSierpinskiSponge$MH() {
        return RuntimeHelper.requireNonNull(constants$785.glutSolidSierpinskiSponge$MH,"glutSolidSierpinskiSponge");
    }
    public static void glutSolidSierpinskiSponge ( int num_levels,  Addressable offset,  double scale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.glutSolidSierpinskiSponge$MH, "glutSolidSierpinskiSponge");
        try {
            mh$.invokeExact(num_levels, offset, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireCylinder$MH() {
        return RuntimeHelper.requireNonNull(constants$785.glutWireCylinder$MH,"glutWireCylinder");
    }
    public static void glutWireCylinder ( double radius,  double height,  int slices,  int stacks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.glutWireCylinder$MH, "glutWireCylinder");
        try {
            mh$.invokeExact(radius, height, slices, stacks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidCylinder$MH() {
        return RuntimeHelper.requireNonNull(constants$785.glutSolidCylinder$MH,"glutSolidCylinder");
    }
    public static void glutSolidCylinder ( double radius,  double height,  int slices,  int stacks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.glutSolidCylinder$MH, "glutSolidCylinder");
        try {
            mh$.invokeExact(radius, height, slices, stacks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireTeacup$MH() {
        return RuntimeHelper.requireNonNull(constants$785.glutWireTeacup$MH,"glutWireTeacup");
    }
    public static void glutWireTeacup ( double size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.glutWireTeacup$MH, "glutWireTeacup");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidTeacup$MH() {
        return RuntimeHelper.requireNonNull(constants$785.glutSolidTeacup$MH,"glutSolidTeacup");
    }
    public static void glutSolidTeacup ( double size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.glutSolidTeacup$MH, "glutSolidTeacup");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutWireTeaspoon$MH() {
        return RuntimeHelper.requireNonNull(constants$785.glutWireTeaspoon$MH,"glutWireTeaspoon");
    }
    public static void glutWireTeaspoon ( double size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.glutWireTeaspoon$MH, "glutWireTeaspoon");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSolidTeaspoon$MH() {
        return RuntimeHelper.requireNonNull(constants$786.glutSolidTeaspoon$MH,"glutSolidTeaspoon");
    }
    public static void glutSolidTeaspoon ( double size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$786.glutSolidTeaspoon$MH, "glutSolidTeaspoon");
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutGetProcAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$786.glutGetProcAddress$MH,"glutGetProcAddress");
    }
    public static MemoryAddress glutGetProcAddress ( Addressable procName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$786.glutGetProcAddress$MH, "glutGetProcAddress");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(procName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMultiEntryFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$787.glutMultiEntryFunc$MH,"glutMultiEntryFunc");
    }
    public static void glutMultiEntryFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$787.glutMultiEntryFunc$MH, "glutMultiEntryFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMultiButtonFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$787.glutMultiButtonFunc$MH,"glutMultiButtonFunc");
    }
    public static void glutMultiButtonFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$787.glutMultiButtonFunc$MH, "glutMultiButtonFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMultiMotionFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$788.glutMultiMotionFunc$MH,"glutMultiMotionFunc");
    }
    public static void glutMultiMotionFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$788.glutMultiMotionFunc$MH, "glutMultiMotionFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutMultiPassiveFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$788.glutMultiPassiveFunc$MH,"glutMultiPassiveFunc");
    }
    public static void glutMultiPassiveFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$788.glutMultiPassiveFunc$MH, "glutMultiPassiveFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickGetNumAxes$MH() {
        return RuntimeHelper.requireNonNull(constants$788.glutJoystickGetNumAxes$MH,"glutJoystickGetNumAxes");
    }
    public static int glutJoystickGetNumAxes ( int ident) {
        var mh$ = RuntimeHelper.requireNonNull(constants$788.glutJoystickGetNumAxes$MH, "glutJoystickGetNumAxes");
        try {
            return (int)mh$.invokeExact(ident);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickGetNumButtons$MH() {
        return RuntimeHelper.requireNonNull(constants$788.glutJoystickGetNumButtons$MH,"glutJoystickGetNumButtons");
    }
    public static int glutJoystickGetNumButtons ( int ident) {
        var mh$ = RuntimeHelper.requireNonNull(constants$788.glutJoystickGetNumButtons$MH, "glutJoystickGetNumButtons");
        try {
            return (int)mh$.invokeExact(ident);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickNotWorking$MH() {
        return RuntimeHelper.requireNonNull(constants$789.glutJoystickNotWorking$MH,"glutJoystickNotWorking");
    }
    public static int glutJoystickNotWorking ( int ident) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.glutJoystickNotWorking$MH, "glutJoystickNotWorking");
        try {
            return (int)mh$.invokeExact(ident);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickGetDeadBand$MH() {
        return RuntimeHelper.requireNonNull(constants$789.glutJoystickGetDeadBand$MH,"glutJoystickGetDeadBand");
    }
    public static float glutJoystickGetDeadBand ( int ident,  int axis) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.glutJoystickGetDeadBand$MH, "glutJoystickGetDeadBand");
        try {
            return (float)mh$.invokeExact(ident, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickSetDeadBand$MH() {
        return RuntimeHelper.requireNonNull(constants$789.glutJoystickSetDeadBand$MH,"glutJoystickSetDeadBand");
    }
    public static void glutJoystickSetDeadBand ( int ident,  int axis,  float db) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.glutJoystickSetDeadBand$MH, "glutJoystickSetDeadBand");
        try {
            mh$.invokeExact(ident, axis, db);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickGetSaturation$MH() {
        return RuntimeHelper.requireNonNull(constants$789.glutJoystickGetSaturation$MH,"glutJoystickGetSaturation");
    }
    public static float glutJoystickGetSaturation ( int ident,  int axis) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.glutJoystickGetSaturation$MH, "glutJoystickGetSaturation");
        try {
            return (float)mh$.invokeExact(ident, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickSetSaturation$MH() {
        return RuntimeHelper.requireNonNull(constants$789.glutJoystickSetSaturation$MH,"glutJoystickSetSaturation");
    }
    public static void glutJoystickSetSaturation ( int ident,  int axis,  float st) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.glutJoystickSetSaturation$MH, "glutJoystickSetSaturation");
        try {
            mh$.invokeExact(ident, axis, st);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickSetMinRange$MH() {
        return RuntimeHelper.requireNonNull(constants$789.glutJoystickSetMinRange$MH,"glutJoystickSetMinRange");
    }
    public static void glutJoystickSetMinRange ( int ident,  Addressable axes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.glutJoystickSetMinRange$MH, "glutJoystickSetMinRange");
        try {
            mh$.invokeExact(ident, axes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickSetMaxRange$MH() {
        return RuntimeHelper.requireNonNull(constants$790.glutJoystickSetMaxRange$MH,"glutJoystickSetMaxRange");
    }
    public static void glutJoystickSetMaxRange ( int ident,  Addressable axes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.glutJoystickSetMaxRange$MH, "glutJoystickSetMaxRange");
        try {
            mh$.invokeExact(ident, axes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickSetCenter$MH() {
        return RuntimeHelper.requireNonNull(constants$790.glutJoystickSetCenter$MH,"glutJoystickSetCenter");
    }
    public static void glutJoystickSetCenter ( int ident,  Addressable axes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.glutJoystickSetCenter$MH, "glutJoystickSetCenter");
        try {
            mh$.invokeExact(ident, axes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickGetMinRange$MH() {
        return RuntimeHelper.requireNonNull(constants$790.glutJoystickGetMinRange$MH,"glutJoystickGetMinRange");
    }
    public static void glutJoystickGetMinRange ( int ident,  Addressable axes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.glutJoystickGetMinRange$MH, "glutJoystickGetMinRange");
        try {
            mh$.invokeExact(ident, axes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickGetMaxRange$MH() {
        return RuntimeHelper.requireNonNull(constants$790.glutJoystickGetMaxRange$MH,"glutJoystickGetMaxRange");
    }
    public static void glutJoystickGetMaxRange ( int ident,  Addressable axes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.glutJoystickGetMaxRange$MH, "glutJoystickGetMaxRange");
        try {
            mh$.invokeExact(ident, axes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutJoystickGetCenter$MH() {
        return RuntimeHelper.requireNonNull(constants$790.glutJoystickGetCenter$MH,"glutJoystickGetCenter");
    }
    public static void glutJoystickGetCenter ( int ident,  Addressable axes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.glutJoystickGetCenter$MH, "glutJoystickGetCenter");
        try {
            mh$.invokeExact(ident, axes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitContextVersion$MH() {
        return RuntimeHelper.requireNonNull(constants$790.glutInitContextVersion$MH,"glutInitContextVersion");
    }
    public static void glutInitContextVersion ( int majorVersion,  int minorVersion) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.glutInitContextVersion$MH, "glutInitContextVersion");
        try {
            mh$.invokeExact(majorVersion, minorVersion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitContextFlags$MH() {
        return RuntimeHelper.requireNonNull(constants$791.glutInitContextFlags$MH,"glutInitContextFlags");
    }
    public static void glutInitContextFlags ( int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$791.glutInitContextFlags$MH, "glutInitContextFlags");
        try {
            mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitContextProfile$MH() {
        return RuntimeHelper.requireNonNull(constants$791.glutInitContextProfile$MH,"glutInitContextProfile");
    }
    public static void glutInitContextProfile ( int profile) {
        var mh$ = RuntimeHelper.requireNonNull(constants$791.glutInitContextProfile$MH, "glutInitContextProfile");
        try {
            mh$.invokeExact(profile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitErrorFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$791.glutInitErrorFunc$MH,"glutInitErrorFunc");
    }
    public static void glutInitErrorFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$791.glutInitErrorFunc$MH, "glutInitErrorFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitWarningFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$792.glutInitWarningFunc$MH,"glutInitWarningFunc");
    }
    public static void glutInitWarningFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.glutInitWarningFunc$MH, "glutInitWarningFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetVertexAttribCoord3$MH() {
        return RuntimeHelper.requireNonNull(constants$792.glutSetVertexAttribCoord3$MH,"glutSetVertexAttribCoord3");
    }
    public static void glutSetVertexAttribCoord3 ( int attrib) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.glutSetVertexAttribCoord3$MH, "glutSetVertexAttribCoord3");
        try {
            mh$.invokeExact(attrib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetVertexAttribNormal$MH() {
        return RuntimeHelper.requireNonNull(constants$792.glutSetVertexAttribNormal$MH,"glutSetVertexAttribNormal");
    }
    public static void glutSetVertexAttribNormal ( int attrib) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.glutSetVertexAttribNormal$MH, "glutSetVertexAttribNormal");
        try {
            mh$.invokeExact(attrib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutSetVertexAttribTexCoord2$MH() {
        return RuntimeHelper.requireNonNull(constants$792.glutSetVertexAttribTexCoord2$MH,"glutSetVertexAttribTexCoord2");
    }
    public static void glutSetVertexAttribTexCoord2 ( int attrib) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.glutSetVertexAttribTexCoord2$MH, "glutSetVertexAttribTexCoord2");
        try {
            mh$.invokeExact(attrib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutInitContextFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$793.glutInitContextFunc$MH,"glutInitContextFunc");
    }
    public static void glutInitContextFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$793.glutInitContextFunc$MH, "glutInitContextFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glutAppStatusFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$793.glutAppStatusFunc$MH,"glutAppStatusFunc");
    }
    public static void glutAppStatusFunc ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$793.glutAppStatusFunc$MH, "glutAppStatusFunc");
        try {
            mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int WINAPI_PARTITION_SERVER() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_WINTRUST() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_WEBSERVICES() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_EVENTLOGSERVICE() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_VHD() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_PERFCOUNTER() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_SECURESTARTUP() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_REMOTEFS() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_BOOTABLESKU() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_CMDTOOLS() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_DISM() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_CORESETUP() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_APPRUNTIME() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_ESENT() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_WINMGMT() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_WNV() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_CLUSTER() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_VSS() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_TRAFFIC() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_ISCSI() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_STORAGE() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_MPSSVC() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_APPXDEPLOYMENT() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PKG_WER() {
        return (int)0L;
    }
    public static int WINAPI_FAMILY_APP() {
        return (int)2L;
    }
    public static int WINAPI_FAMILY() {
        return (int)100L;
    }
    public static int WINAPI_PARTITION_DESKTOP() {
        return (int)1L;
    }
    public static int WINAPI_PARTITION_APP() {
        return (int)1L;
    }
    public static int WINAPI_PARTITION_PC_APP() {
        return (int)1L;
    }
    public static int WINAPI_PARTITION_PHONE_APP() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_GAMES() {
        return (int)1L;
    }
    public static int WINAPI_PARTITION_SYSTEM() {
        return (int)0L;
    }
    public static int WINAPI_PARTITION_PHONE() {
        return (int)0L;
    }
    public static int _WIN32_IE_NT4() {
        return (int)512L;
    }
    public static int _WIN32_IE_NT4SP1() {
        return (int)512L;
    }
    public static int _WIN32_IE_NT4SP2() {
        return (int)512L;
    }
    public static int _WIN32_IE_NT4SP3() {
        return (int)770L;
    }
    public static int _WIN32_IE_NT4SP4() {
        return (int)1025L;
    }
    public static int _WIN32_IE_NT4SP5() {
        return (int)1025L;
    }
    public static int _WIN32_IE_NT4SP6() {
        return (int)1280L;
    }
    public static int _WIN32_IE_WIN98() {
        return (int)1025L;
    }
    public static int _WIN32_IE_WIN98SE() {
        return (int)1280L;
    }
    public static int _WIN32_IE_WINME() {
        return (int)1360L;
    }
    public static int _WIN32_IE_WIN2K() {
        return (int)1281L;
    }
    public static int _WIN32_IE_WIN2KSP1() {
        return (int)1281L;
    }
    public static int _WIN32_IE_WIN2KSP2() {
        return (int)1281L;
    }
    public static int _WIN32_IE_WIN2KSP3() {
        return (int)1281L;
    }
    public static int _WIN32_IE_WIN2KSP4() {
        return (int)1281L;
    }
    public static int _WIN32_IE_XP() {
        return (int)1536L;
    }
    public static int _WIN32_IE_XPSP1() {
        return (int)1537L;
    }
    public static int _WIN32_IE_XPSP2() {
        return (int)1539L;
    }
    public static int _WIN32_IE_WS03SP1() {
        return (int)1539L;
    }
    public static int _WIN32_IE_WIN6() {
        return (int)1792L;
    }
    public static int _WIN32_IE_LONGHORN() {
        return (int)1792L;
    }
    public static int _WIN32_IE_WIN7() {
        return (int)2048L;
    }
    public static int _WIN32_IE_WIN8() {
        return (int)2560L;
    }
    public static int _WIN32_IE_WINBLUE() {
        return (int)2560L;
    }
    public static int _WIN32_IE_WINTHRESHOLD() {
        return (int)2560L;
    }
    public static int _WIN32_IE_WIN10() {
        return (int)2560L;
    }
    public static int NTDDI_VISTA() {
        return (int)100663296L;
    }
    public static int NTDDI_VISTASP1() {
        return (int)100663552L;
    }
    public static int NTDDI_VISTASP2() {
        return (int)100663808L;
    }
    public static int NTDDI_VISTASP3() {
        return (int)100664064L;
    }
    public static int NTDDI_VISTASP4() {
        return (int)100664320L;
    }
    public static int NTDDI_LONGHORN() {
        return (int)100663296L;
    }
    public static int NTDDI_WS08() {
        return (int)100663552L;
    }
    public static int NTDDI_WS08SP2() {
        return (int)100663808L;
    }
    public static int NTDDI_WS08SP3() {
        return (int)100664064L;
    }
    public static int NTDDI_WS08SP4() {
        return (int)100664320L;
    }
    public static int WDK_NTDDI_VERSION() {
        return (int)167772168L;
    }
    public static int OSVERSION_MASK() {
        return (int)4294901760L;
    }
    public static int NTDDI_VERSION() {
        return (int)167772168L;
    }
    public static int WINVER() {
        return (int)2560L;
    }
    public static int _VCRUNTIME_DISABLED_WARNINGS() {
        return (int)4514L;
    }
    public static MemoryAddress NULL() {
        return constants$793.NULL$ADDR;
    }
    public static int EXCEPTION_CONTINUE_EXECUTION() {
        return (int)-1L;
    }
    public static int _UCRT_DISABLED_WARNINGS() {
        return (int)4324L;
    }
    public static long _TRUNCATE() {
        return -1L;
    }
    public static long _CRT_SIZE_MAX() {
        return -1L;
    }
    public static MemorySegment __FILEW__() {
        return constants$794.__FILEW__$SEGMENT;
    }
    public static int __STDC_SECURE_LIB__() {
        return (int)200411L;
    }
    public static int __GOT_SECURE_LIB__() {
        return (int)200411L;
    }
    public static short WEOF() {
        return (short)65535L;
    }
    public static int _ALPHA() {
        return (int)259L;
    }
    public static long MAX_NATURAL_ALIGNMENT() {
        return 8L;
    }
    public static long ADDRESS_TAG_BIT() {
        return 4398046511104L;
    }
    public static long MAXUINT_PTR() {
        return -1L;
    }
    public static long MAXINT_PTR() {
        return 9223372036854775807L;
    }
    public static long MININT_PTR() {
        return -9223372036854775808L;
    }
    public static long MAXULONG_PTR() {
        return -1L;
    }
    public static long MAXLONG_PTR() {
        return 9223372036854775807L;
    }
    public static long MINLONG_PTR() {
        return -9223372036854775808L;
    }
    public static int MAXUHALF_PTR() {
        return (int)4294967295L;
    }
    public static int MAXHALF_PTR() {
        return (int)2147483647L;
    }
    public static int MINHALF_PTR() {
        return (int)-2147483648L;
    }
    public static byte MAXUINT8() {
        return (byte)255L;
    }
    public static byte MAXINT8() {
        return (byte)127L;
    }
    public static byte MININT8() {
        return (byte)-128L;
    }
    public static short MAXUINT16() {
        return (short)65535L;
    }
    public static short MAXINT16() {
        return (short)32767L;
    }
    public static short MININT16() {
        return (short)-32768L;
    }
    public static int MAXUINT32() {
        return (int)4294967295L;
    }
    public static int MAXINT32() {
        return (int)2147483647L;
    }
    public static int MININT32() {
        return (int)-2147483648L;
    }
    public static long MAXUINT64() {
        return -1L;
    }
    public static long MAXINT64() {
        return 9223372036854775807L;
    }
    public static long MININT64() {
        return -9223372036854775808L;
    }
    public static int MAXULONG32() {
        return (int)4294967295L;
    }
    public static int MAXLONG32() {
        return (int)2147483647L;
    }
    public static int MINLONG32() {
        return (int)-2147483648L;
    }
    public static long MAXULONG64() {
        return -1L;
    }
    public static long MAXLONG64() {
        return 9223372036854775807L;
    }
    public static long MINLONG64() {
        return -9223372036854775808L;
    }
    public static long MAXULONGLONG() {
        return -1L;
    }
    public static long MINLONGLONG() {
        return -9223372036854775808L;
    }
    public static long MAXSIZE_T() {
        return -1L;
    }
    public static long MAXSSIZE_T() {
        return 9223372036854775807L;
    }
    public static long MINSSIZE_T() {
        return -9223372036854775808L;
    }
    public static int MAXUINT() {
        return (int)4294967295L;
    }
    public static int MAXINT() {
        return (int)2147483647L;
    }
    public static int MININT() {
        return (int)-2147483648L;
    }
    public static int MAXDWORD32() {
        return (int)4294967295L;
    }
    public static long MAXDWORD64() {
        return -1L;
    }
    public static int UCSCHAR_INVALID_CHARACTER() {
        return (int)4294967295L;
    }
    public static int MIN_UCSCHAR() {
        return (int)0L;
    }
    public static int MAX_UCSCHAR() {
        return (int)1114111L;
    }
    public static int MAXIMUM_PROCESSORS() {
        return (int)64L;
    }
    public static int ERROR_SEVERITY_WARNING() {
        return (int)2147483648L;
    }
    public static int ERROR_SEVERITY_ERROR() {
        return (int)3221225472L;
    }
    public static long MAXLONGLONG() {
        return 9223372036854775807L;
    }
    public static byte ANSI_NULL() {
        return (byte)0L;
    }
    public static short UNICODE_NULL() {
        return (short)0L;
    }
    public static short UNICODE_STRING_MAX_BYTES() {
        return (short)65534L;
    }
    public static int UNICODE_STRING_MAX_CHARS() {
        return (int)32767L;
    }
    public static int EDEADLOCK() {
        return (int)36L;
    }
    public static int _NLSCMPERROR() {
        return (int)2147483647L;
    }
    public static int MINLONG() {
        return (int)2147483648L;
    }
    public static int MAXDWORD() {
        return (int)4294967295L;
    }
    public static int VER_SERVER_NT() {
        return (int)2147483648L;
    }
    public static int PRODUCT_UNLICENSED() {
        return (int)2882382797L;
    }
    public static int LANG_SYSTEM_DEFAULT() {
        return (int)2048L;
    }
    public static int LANG_USER_DEFAULT() {
        return (int)1024L;
    }
    public static int LOCALE_SYSTEM_DEFAULT() {
        return (int)2048L;
    }
    public static int LOCALE_USER_DEFAULT() {
        return (int)1024L;
    }
    public static int LOCALE_CUSTOM_DEFAULT() {
        return (int)3072L;
    }
    public static int LOCALE_CUSTOM_UNSPECIFIED() {
        return (int)4096L;
    }
    public static int LOCALE_CUSTOM_UI_DEFAULT() {
        return (int)5120L;
    }
    public static int LOCALE_NEUTRAL() {
        return (int)0L;
    }
    public static int LOCALE_INVARIANT() {
        return (int)127L;
    }
    public static int LOCALE_UNASSIGNED_LCID() {
        return (int)4096L;
    }
    public static int STATUS_WAIT_0() {
        return (int)0L;
    }
    public static int STATUS_ABANDONED_WAIT_0() {
        return (int)128L;
    }
    public static int STATUS_USER_APC() {
        return (int)192L;
    }
    public static int STATUS_TIMEOUT() {
        return (int)258L;
    }
    public static int STATUS_PENDING() {
        return (int)259L;
    }
    public static int DBG_EXCEPTION_HANDLED() {
        return (int)65537L;
    }
    public static int DBG_CONTINUE() {
        return (int)65538L;
    }
    public static int STATUS_SEGMENT_NOTIFICATION() {
        return (int)1073741829L;
    }
    public static int STATUS_FATAL_APP_EXIT() {
        return (int)1073741845L;
    }
    public static int DBG_REPLY_LATER() {
        return (int)1073807361L;
    }
    public static int DBG_TERMINATE_THREAD() {
        return (int)1073807363L;
    }
    public static int DBG_TERMINATE_PROCESS() {
        return (int)1073807364L;
    }
    public static int DBG_CONTROL_C() {
        return (int)1073807365L;
    }
    public static int DBG_PRINTEXCEPTION_C() {
        return (int)1073807366L;
    }
    public static int DBG_RIPEXCEPTION() {
        return (int)1073807367L;
    }
    public static int DBG_CONTROL_BREAK() {
        return (int)1073807368L;
    }
    public static int DBG_COMMAND_EXCEPTION() {
        return (int)1073807369L;
    }
    public static int DBG_PRINTEXCEPTION_WIDE_C() {
        return (int)1073807370L;
    }
    public static int STATUS_GUARD_PAGE_VIOLATION() {
        return (int)2147483649L;
    }
    public static int STATUS_DATATYPE_MISALIGNMENT() {
        return (int)2147483650L;
    }
    public static int STATUS_BREAKPOINT() {
        return (int)2147483651L;
    }
    public static int STATUS_SINGLE_STEP() {
        return (int)2147483652L;
    }
    public static int STATUS_LONGJUMP() {
        return (int)2147483686L;
    }
    public static int STATUS_UNWIND_CONSOLIDATE() {
        return (int)2147483689L;
    }
    public static int DBG_EXCEPTION_NOT_HANDLED() {
        return (int)2147549185L;
    }
    public static int STATUS_ACCESS_VIOLATION() {
        return (int)3221225477L;
    }
    public static int STATUS_IN_PAGE_ERROR() {
        return (int)3221225478L;
    }
    public static int STATUS_INVALID_HANDLE() {
        return (int)3221225480L;
    }
    public static int STATUS_INVALID_PARAMETER() {
        return (int)3221225485L;
    }
    public static int STATUS_NO_MEMORY() {
        return (int)3221225495L;
    }
    public static int STATUS_ILLEGAL_INSTRUCTION() {
        return (int)3221225501L;
    }
    public static int STATUS_NONCONTINUABLE_EXCEPTION() {
        return (int)3221225509L;
    }
    public static int STATUS_INVALID_DISPOSITION() {
        return (int)3221225510L;
    }
    public static int STATUS_ARRAY_BOUNDS_EXCEEDED() {
        return (int)3221225612L;
    }
    public static int STATUS_FLOAT_DENORMAL_OPERAND() {
        return (int)3221225613L;
    }
    public static int STATUS_FLOAT_DIVIDE_BY_ZERO() {
        return (int)3221225614L;
    }
    public static int STATUS_FLOAT_INEXACT_RESULT() {
        return (int)3221225615L;
    }
    public static int STATUS_FLOAT_INVALID_OPERATION() {
        return (int)3221225616L;
    }
    public static int STATUS_FLOAT_OVERFLOW() {
        return (int)3221225617L;
    }
    public static int STATUS_FLOAT_STACK_CHECK() {
        return (int)3221225618L;
    }
    public static int STATUS_FLOAT_UNDERFLOW() {
        return (int)3221225619L;
    }
    public static int STATUS_INTEGER_DIVIDE_BY_ZERO() {
        return (int)3221225620L;
    }
    public static int STATUS_INTEGER_OVERFLOW() {
        return (int)3221225621L;
    }
    public static int STATUS_PRIVILEGED_INSTRUCTION() {
        return (int)3221225622L;
    }
    public static int STATUS_STACK_OVERFLOW() {
        return (int)3221225725L;
    }
    public static int STATUS_DLL_NOT_FOUND() {
        return (int)3221225781L;
    }
    public static int STATUS_ORDINAL_NOT_FOUND() {
        return (int)3221225784L;
    }
    public static int STATUS_ENTRYPOINT_NOT_FOUND() {
        return (int)3221225785L;
    }
    public static int STATUS_CONTROL_C_EXIT() {
        return (int)3221225786L;
    }
    public static int STATUS_DLL_INIT_FAILED() {
        return (int)3221225794L;
    }
    public static int STATUS_CONTROL_STACK_VIOLATION() {
        return (int)3221225906L;
    }
    public static int STATUS_FLOAT_MULTIPLE_FAULTS() {
        return (int)3221226164L;
    }
    public static int STATUS_FLOAT_MULTIPLE_TRAPS() {
        return (int)3221226165L;
    }
    public static int STATUS_REG_NAT_CONSUMPTION() {
        return (int)3221226185L;
    }
    public static int STATUS_HEAP_CORRUPTION() {
        return (int)3221226356L;
    }
    public static int STATUS_STACK_BUFFER_OVERRUN() {
        return (int)3221226505L;
    }
    public static int STATUS_INVALID_CRUNTIME_PARAMETER() {
        return (int)3221226519L;
    }
    public static int STATUS_ASSERTION_FAILURE() {
        return (int)3221226528L;
    }
    public static int STATUS_ENCLAVE_VIOLATION() {
        return (int)3221226658L;
    }
    public static int STATUS_INTERRUPTED() {
        return (int)3221226773L;
    }
    public static int STATUS_THREAD_NOT_RUNNING() {
        return (int)3221226774L;
    }
    public static int STATUS_ALREADY_REGISTERED() {
        return (int)3221227288L;
    }
    public static int STATUS_SXS_EARLY_DEACTIVATION() {
        return (int)3222601743L;
    }
    public static int STATUS_SXS_INVALID_DEACTIVATION() {
        return (int)3222601744L;
    }
    public static int MAXIMUM_SUSPEND_COUNT() {
        return (int)127L;
    }
    public static int PF_TEMPORAL_LEVEL_1() {
        return (int)1L;
    }
    public static int PF_TEMPORAL_LEVEL_2() {
        return (int)2L;
    }
    public static int PF_TEMPORAL_LEVEL_3() {
        return (int)3L;
    }
    public static int PF_NON_TEMPORAL_LEVEL_ALL() {
        return (int)0L;
    }
    public static int CONTEXT_AMD64() {
        return (int)1048576L;
    }
    public static int CONTEXT_CONTROL() {
        return (int)1048577L;
    }
    public static int CONTEXT_INTEGER() {
        return (int)1048578L;
    }
    public static int CONTEXT_SEGMENTS() {
        return (int)1048580L;
    }
    public static int CONTEXT_FLOATING_POINT() {
        return (int)1048584L;
    }
    public static int CONTEXT_DEBUG_REGISTERS() {
        return (int)1048592L;
    }
    public static int CONTEXT_FULL() {
        return (int)1048587L;
    }
    public static int CONTEXT_ALL() {
        return (int)1048607L;
    }
    public static int CONTEXT_XSTATE() {
        return (int)1048640L;
    }
    public static int CONTEXT_EXCEPTION_ACTIVE() {
        return (int)134217728L;
    }
    public static int CONTEXT_SERVICE_ACTIVE() {
        return (int)268435456L;
    }
    public static int CONTEXT_EXCEPTION_REQUEST() {
        return (int)1073741824L;
    }
    public static int CONTEXT_EXCEPTION_REPORTING() {
        return (int)2147483648L;
    }
    public static int UNW_FLAG_NO_EPILOGUE() {
        return (int)2147483648L;
    }
    public static MemorySegment OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME() {
        return constants$794.OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME$SEGMENT;
    }
    public static int WOW64_CONTEXT_CONTROL() {
        return (int)65537L;
    }
    public static int WOW64_CONTEXT_INTEGER() {
        return (int)65538L;
    }
    public static int WOW64_CONTEXT_SEGMENTS() {
        return (int)65540L;
    }
    public static int WOW64_CONTEXT_FLOATING_POINT() {
        return (int)65544L;
    }
    public static int WOW64_CONTEXT_DEBUG_REGISTERS() {
        return (int)65552L;
    }
    public static int WOW64_CONTEXT_EXTENDED_REGISTERS() {
        return (int)65568L;
    }
    public static int WOW64_CONTEXT_FULL() {
        return (int)65543L;
    }
    public static int WOW64_CONTEXT_ALL() {
        return (int)65599L;
    }
    public static int WOW64_CONTEXT_XSTATE() {
        return (int)65600L;
    }
    public static int WOW64_CONTEXT_EXCEPTION_REPORTING() {
        return (int)2147483648L;
    }
    public static int EXCEPTION_UNWIND() {
        return (int)102L;
    }
    public static int DELETE() {
        return (int)65536L;
    }
    public static int READ_CONTROL() {
        return (int)131072L;
    }
    public static int WRITE_DAC() {
        return (int)262144L;
    }
    public static int WRITE_OWNER() {
        return (int)524288L;
    }
    public static int SYNCHRONIZE() {
        return (int)1048576L;
    }
    public static int STANDARD_RIGHTS_REQUIRED() {
        return (int)983040L;
    }
}


