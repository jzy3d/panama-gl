// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class freeglut_h_19 extends freeglut_h_18 {

    public static int ERROR_TRANSACTION_NOT_FOUND() {
        return (int)6715L;
    }
    public static int ERROR_RESOURCEMANAGER_NOT_FOUND() {
        return (int)6716L;
    }
    public static int ERROR_ENLISTMENT_NOT_FOUND() {
        return (int)6717L;
    }
    public static int ERROR_TRANSACTIONMANAGER_NOT_FOUND() {
        return (int)6718L;
    }
    public static int ERROR_TRANSACTIONMANAGER_NOT_ONLINE() {
        return (int)6719L;
    }
    public static int ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION() {
        return (int)6720L;
    }
    public static int ERROR_TRANSACTION_NOT_ROOT() {
        return (int)6721L;
    }
    public static int ERROR_TRANSACTION_OBJECT_EXPIRED() {
        return (int)6722L;
    }
    public static int ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED() {
        return (int)6723L;
    }
    public static int ERROR_TRANSACTION_RECORD_TOO_LONG() {
        return (int)6724L;
    }
    public static int ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED() {
        return (int)6725L;
    }
    public static int ERROR_TRANSACTION_INTEGRITY_VIOLATED() {
        return (int)6726L;
    }
    public static int ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH() {
        return (int)6727L;
    }
    public static int ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT() {
        return (int)6728L;
    }
    public static int ERROR_TRANSACTION_MUST_WRITETHROUGH() {
        return (int)6729L;
    }
    public static int ERROR_TRANSACTION_NO_SUPERIOR() {
        return (int)6730L;
    }
    public static int ERROR_HEURISTIC_DAMAGE_POSSIBLE() {
        return (int)6731L;
    }
    public static int ERROR_TRANSACTIONAL_CONFLICT() {
        return (int)6800L;
    }
    public static int ERROR_RM_NOT_ACTIVE() {
        return (int)6801L;
    }
    public static int ERROR_RM_METADATA_CORRUPT() {
        return (int)6802L;
    }
    public static int ERROR_DIRECTORY_NOT_RM() {
        return (int)6803L;
    }
    public static int ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE() {
        return (int)6805L;
    }
    public static int ERROR_LOG_RESIZE_INVALID_SIZE() {
        return (int)6806L;
    }
    public static int ERROR_OBJECT_NO_LONGER_EXISTS() {
        return (int)6807L;
    }
    public static int ERROR_STREAM_MINIVERSION_NOT_FOUND() {
        return (int)6808L;
    }
    public static int ERROR_STREAM_MINIVERSION_NOT_VALID() {
        return (int)6809L;
    }
    public static int ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION() {
        return (int)6810L;
    }
    public static int ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT() {
        return (int)6811L;
    }
    public static int ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS() {
        return (int)6812L;
    }
    public static int ERROR_REMOTE_FILE_VERSION_MISMATCH() {
        return (int)6814L;
    }
    public static int ERROR_HANDLE_NO_LONGER_VALID() {
        return (int)6815L;
    }
    public static int ERROR_NO_TXF_METADATA() {
        return (int)6816L;
    }
    public static int ERROR_LOG_CORRUPTION_DETECTED() {
        return (int)6817L;
    }
    public static int ERROR_CANT_RECOVER_WITH_HANDLE_OPEN() {
        return (int)6818L;
    }
    public static int ERROR_RM_DISCONNECTED() {
        return (int)6819L;
    }
    public static int ERROR_ENLISTMENT_NOT_SUPERIOR() {
        return (int)6820L;
    }
    public static int ERROR_RECOVERY_NOT_NEEDED() {
        return (int)6821L;
    }
    public static int ERROR_RM_ALREADY_STARTED() {
        return (int)6822L;
    }
    public static int ERROR_FILE_IDENTITY_NOT_PERSISTENT() {
        return (int)6823L;
    }
    public static int ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY() {
        return (int)6824L;
    }
    public static int ERROR_CANT_CROSS_RM_BOUNDARY() {
        return (int)6825L;
    }
    public static int ERROR_TXF_DIR_NOT_EMPTY() {
        return (int)6826L;
    }
    public static int ERROR_INDOUBT_TRANSACTIONS_EXIST() {
        return (int)6827L;
    }
    public static int ERROR_TM_VOLATILE() {
        return (int)6828L;
    }
    public static int ERROR_ROLLBACK_TIMER_EXPIRED() {
        return (int)6829L;
    }
    public static int ERROR_TXF_ATTRIBUTE_CORRUPT() {
        return (int)6830L;
    }
    public static int ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION() {
        return (int)6831L;
    }
    public static int ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED() {
        return (int)6832L;
    }
    public static int ERROR_LOG_GROWTH_FAILED() {
        return (int)6833L;
    }
    public static int ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE() {
        return (int)6834L;
    }
    public static int ERROR_TXF_METADATA_ALREADY_PRESENT() {
        return (int)6835L;
    }
    public static int ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET() {
        return (int)6836L;
    }
    public static int ERROR_TRANSACTION_REQUIRED_PROMOTION() {
        return (int)6837L;
    }
    public static int ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION() {
        return (int)6838L;
    }
    public static int ERROR_TRANSACTIONS_NOT_FROZEN() {
        return (int)6839L;
    }
    public static int ERROR_TRANSACTION_FREEZE_IN_PROGRESS() {
        return (int)6840L;
    }
    public static int ERROR_NOT_SNAPSHOT_VOLUME() {
        return (int)6841L;
    }
    public static int ERROR_NO_SAVEPOINT_WITH_OPEN_FILES() {
        return (int)6842L;
    }
    public static int ERROR_DATA_LOST_REPAIR() {
        return (int)6843L;
    }
    public static int ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION() {
        return (int)6844L;
    }
    public static int ERROR_TM_IDENTITY_MISMATCH() {
        return (int)6845L;
    }
    public static int ERROR_FLOATED_SECTION() {
        return (int)6846L;
    }
    public static int ERROR_CANNOT_ACCEPT_TRANSACTED_WORK() {
        return (int)6847L;
    }
    public static int ERROR_CANNOT_ABORT_TRANSACTIONS() {
        return (int)6848L;
    }
    public static int ERROR_BAD_CLUSTERS() {
        return (int)6849L;
    }
    public static int ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION() {
        return (int)6850L;
    }
    public static int ERROR_VOLUME_DIRTY() {
        return (int)6851L;
    }
    public static int ERROR_NO_LINK_TRACKING_IN_TRANSACTION() {
        return (int)6852L;
    }
    public static int ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION() {
        return (int)6853L;
    }
    public static int ERROR_EXPIRED_HANDLE() {
        return (int)6854L;
    }
    public static int ERROR_TRANSACTION_NOT_ENLISTED() {
        return (int)6855L;
    }
    public static int ERROR_CTX_WINSTATION_NAME_INVALID() {
        return (int)7001L;
    }
    public static int ERROR_CTX_INVALID_PD() {
        return (int)7002L;
    }
    public static int ERROR_CTX_PD_NOT_FOUND() {
        return (int)7003L;
    }
    public static int ERROR_CTX_WD_NOT_FOUND() {
        return (int)7004L;
    }
    public static int ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY() {
        return (int)7005L;
    }
    public static int ERROR_CTX_SERVICE_NAME_COLLISION() {
        return (int)7006L;
    }
    public static int ERROR_CTX_CLOSE_PENDING() {
        return (int)7007L;
    }
    public static int ERROR_CTX_NO_OUTBUF() {
        return (int)7008L;
    }
    public static int ERROR_CTX_MODEM_INF_NOT_FOUND() {
        return (int)7009L;
    }
    public static int ERROR_CTX_INVALID_MODEMNAME() {
        return (int)7010L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_ERROR() {
        return (int)7011L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_TIMEOUT() {
        return (int)7012L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_NO_CARRIER() {
        return (int)7013L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE() {
        return (int)7014L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_BUSY() {
        return (int)7015L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_VOICE() {
        return (int)7016L;
    }
    public static int ERROR_CTX_TD_ERROR() {
        return (int)7017L;
    }
    public static int ERROR_CTX_WINSTATION_NOT_FOUND() {
        return (int)7022L;
    }
    public static int ERROR_CTX_WINSTATION_ALREADY_EXISTS() {
        return (int)7023L;
    }
    public static int ERROR_CTX_WINSTATION_BUSY() {
        return (int)7024L;
    }
    public static int ERROR_CTX_BAD_VIDEO_MODE() {
        return (int)7025L;
    }
    public static int ERROR_CTX_GRAPHICS_INVALID() {
        return (int)7035L;
    }
    public static int ERROR_CTX_LOGON_DISABLED() {
        return (int)7037L;
    }
    public static int ERROR_CTX_NOT_CONSOLE() {
        return (int)7038L;
    }
    public static int ERROR_CTX_CLIENT_QUERY_TIMEOUT() {
        return (int)7040L;
    }
    public static int ERROR_CTX_CONSOLE_DISCONNECT() {
        return (int)7041L;
    }
    public static int ERROR_CTX_CONSOLE_CONNECT() {
        return (int)7042L;
    }
    public static int ERROR_CTX_SHADOW_DENIED() {
        return (int)7044L;
    }
    public static int ERROR_CTX_WINSTATION_ACCESS_DENIED() {
        return (int)7045L;
    }
    public static int ERROR_CTX_INVALID_WD() {
        return (int)7049L;
    }
    public static int ERROR_CTX_SHADOW_INVALID() {
        return (int)7050L;
    }
    public static int ERROR_CTX_SHADOW_DISABLED() {
        return (int)7051L;
    }
    public static int ERROR_CTX_CLIENT_LICENSE_IN_USE() {
        return (int)7052L;
    }
    public static int ERROR_CTX_CLIENT_LICENSE_NOT_SET() {
        return (int)7053L;
    }
    public static int ERROR_CTX_LICENSE_NOT_AVAILABLE() {
        return (int)7054L;
    }
    public static int ERROR_CTX_LICENSE_CLIENT_INVALID() {
        return (int)7055L;
    }
    public static int ERROR_CTX_LICENSE_EXPIRED() {
        return (int)7056L;
    }
    public static int ERROR_CTX_SHADOW_NOT_RUNNING() {
        return (int)7057L;
    }
    public static int ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE() {
        return (int)7058L;
    }
    public static int ERROR_ACTIVATION_COUNT_EXCEEDED() {
        return (int)7059L;
    }
    public static int ERROR_CTX_WINSTATIONS_DISABLED() {
        return (int)7060L;
    }
    public static int ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED() {
        return (int)7061L;
    }
    public static int ERROR_CTX_SESSION_IN_USE() {
        return (int)7062L;
    }
    public static int ERROR_CTX_NO_FORCE_LOGOFF() {
        return (int)7063L;
    }
    public static int ERROR_CTX_ACCOUNT_RESTRICTION() {
        return (int)7064L;
    }
    public static int ERROR_RDP_PROTOCOL_ERROR() {
        return (int)7065L;
    }
    public static int ERROR_CTX_CDM_CONNECT() {
        return (int)7066L;
    }
    public static int ERROR_CTX_CDM_DISCONNECT() {
        return (int)7067L;
    }
    public static int ERROR_CTX_SECURITY_LAYER_ERROR() {
        return (int)7068L;
    }
    public static int ERROR_TS_INCOMPATIBLE_SESSIONS() {
        return (int)7069L;
    }
    public static int ERROR_TS_VIDEO_SUBSYSTEM_ERROR() {
        return (int)7070L;
    }
    public static int FRS_ERR_INVALID_API_SEQUENCE() {
        return (int)8001L;
    }
    public static int FRS_ERR_STARTING_SERVICE() {
        return (int)8002L;
    }
    public static int FRS_ERR_STOPPING_SERVICE() {
        return (int)8003L;
    }
    public static int FRS_ERR_INTERNAL_API() {
        return (int)8004L;
    }
    public static int FRS_ERR_INTERNAL() {
        return (int)8005L;
    }
    public static int FRS_ERR_SERVICE_COMM() {
        return (int)8006L;
    }
    public static int FRS_ERR_INSUFFICIENT_PRIV() {
        return (int)8007L;
    }
    public static int FRS_ERR_AUTHENTICATION() {
        return (int)8008L;
    }
    public static int FRS_ERR_PARENT_INSUFFICIENT_PRIV() {
        return (int)8009L;
    }
    public static int FRS_ERR_PARENT_AUTHENTICATION() {
        return (int)8010L;
    }
    public static int FRS_ERR_CHILD_TO_PARENT_COMM() {
        return (int)8011L;
    }
    public static int FRS_ERR_PARENT_TO_CHILD_COMM() {
        return (int)8012L;
    }
    public static int FRS_ERR_SYSVOL_POPULATE() {
        return (int)8013L;
    }
    public static int FRS_ERR_SYSVOL_POPULATE_TIMEOUT() {
        return (int)8014L;
    }
    public static int FRS_ERR_SYSVOL_IS_BUSY() {
        return (int)8015L;
    }
    public static int FRS_ERR_SYSVOL_DEMOTE() {
        return (int)8016L;
    }
    public static int FRS_ERR_INVALID_SERVICE_PARAMETER() {
        return (int)8017L;
    }
    public static int DS_S_SUCCESS() {
        return (int)0L;
    }
    public static int ERROR_DS_NOT_INSTALLED() {
        return (int)8200L;
    }
    public static int ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY() {
        return (int)8201L;
    }
    public static int ERROR_DS_NO_ATTRIBUTE_OR_VALUE() {
        return (int)8202L;
    }
    public static int ERROR_DS_INVALID_ATTRIBUTE_SYNTAX() {
        return (int)8203L;
    }
    public static int ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED() {
        return (int)8204L;
    }
    public static int ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS() {
        return (int)8205L;
    }
    public static int ERROR_DS_BUSY() {
        return (int)8206L;
    }
    public static int ERROR_DS_UNAVAILABLE() {
        return (int)8207L;
    }
    public static int ERROR_DS_NO_RIDS_ALLOCATED() {
        return (int)8208L;
    }
    public static int ERROR_DS_NO_MORE_RIDS() {
        return (int)8209L;
    }
    public static int ERROR_DS_INCORRECT_ROLE_OWNER() {
        return (int)8210L;
    }
    public static int ERROR_DS_RIDMGR_INIT_ERROR() {
        return (int)8211L;
    }
    public static int ERROR_DS_OBJ_CLASS_VIOLATION() {
        return (int)8212L;
    }
    public static int ERROR_DS_CANT_ON_NON_LEAF() {
        return (int)8213L;
    }
    public static int ERROR_DS_CANT_ON_RDN() {
        return (int)8214L;
    }
    public static int ERROR_DS_CANT_MOD_OBJ_CLASS() {
        return (int)8215L;
    }
    public static int ERROR_DS_CROSS_DOM_MOVE_ERROR() {
        return (int)8216L;
    }
    public static int ERROR_DS_GC_NOT_AVAILABLE() {
        return (int)8217L;
    }
    public static int ERROR_SHARED_POLICY() {
        return (int)8218L;
    }
    public static int ERROR_POLICY_OBJECT_NOT_FOUND() {
        return (int)8219L;
    }
    public static int ERROR_POLICY_ONLY_IN_DS() {
        return (int)8220L;
    }
    public static int ERROR_PROMOTION_ACTIVE() {
        return (int)8221L;
    }
    public static int ERROR_NO_PROMOTION_ACTIVE() {
        return (int)8222L;
    }
    public static int ERROR_DS_OPERATIONS_ERROR() {
        return (int)8224L;
    }
    public static int ERROR_DS_PROTOCOL_ERROR() {
        return (int)8225L;
    }
    public static int ERROR_DS_TIMELIMIT_EXCEEDED() {
        return (int)8226L;
    }
    public static int ERROR_DS_SIZELIMIT_EXCEEDED() {
        return (int)8227L;
    }
    public static int ERROR_DS_ADMIN_LIMIT_EXCEEDED() {
        return (int)8228L;
    }
    public static int ERROR_DS_COMPARE_FALSE() {
        return (int)8229L;
    }
    public static int ERROR_DS_COMPARE_TRUE() {
        return (int)8230L;
    }
    public static int ERROR_DS_AUTH_METHOD_NOT_SUPPORTED() {
        return (int)8231L;
    }
    public static int ERROR_DS_STRONG_AUTH_REQUIRED() {
        return (int)8232L;
    }
    public static int ERROR_DS_INAPPROPRIATE_AUTH() {
        return (int)8233L;
    }
    public static int ERROR_DS_AUTH_UNKNOWN() {
        return (int)8234L;
    }
    public static int ERROR_DS_REFERRAL() {
        return (int)8235L;
    }
    public static int ERROR_DS_UNAVAILABLE_CRIT_EXTENSION() {
        return (int)8236L;
    }
    public static int ERROR_DS_CONFIDENTIALITY_REQUIRED() {
        return (int)8237L;
    }
    public static int ERROR_DS_INAPPROPRIATE_MATCHING() {
        return (int)8238L;
    }
    public static int ERROR_DS_CONSTRAINT_VIOLATION() {
        return (int)8239L;
    }
    public static int ERROR_DS_NO_SUCH_OBJECT() {
        return (int)8240L;
    }
    public static int ERROR_DS_ALIAS_PROBLEM() {
        return (int)8241L;
    }
    public static int ERROR_DS_INVALID_DN_SYNTAX() {
        return (int)8242L;
    }
    public static int ERROR_DS_IS_LEAF() {
        return (int)8243L;
    }
    public static int ERROR_DS_ALIAS_DEREF_PROBLEM() {
        return (int)8244L;
    }
    public static int ERROR_DS_UNWILLING_TO_PERFORM() {
        return (int)8245L;
    }
    public static int ERROR_DS_LOOP_DETECT() {
        return (int)8246L;
    }
    public static int ERROR_DS_NAMING_VIOLATION() {
        return (int)8247L;
    }
    public static int ERROR_DS_OBJECT_RESULTS_TOO_LARGE() {
        return (int)8248L;
    }
    public static int ERROR_DS_AFFECTS_MULTIPLE_DSAS() {
        return (int)8249L;
    }
    public static int ERROR_DS_SERVER_DOWN() {
        return (int)8250L;
    }
    public static int ERROR_DS_LOCAL_ERROR() {
        return (int)8251L;
    }
    public static int ERROR_DS_ENCODING_ERROR() {
        return (int)8252L;
    }
    public static int ERROR_DS_DECODING_ERROR() {
        return (int)8253L;
    }
    public static int ERROR_DS_FILTER_UNKNOWN() {
        return (int)8254L;
    }
    public static int ERROR_DS_PARAM_ERROR() {
        return (int)8255L;
    }
    public static int ERROR_DS_NOT_SUPPORTED() {
        return (int)8256L;
    }
    public static int ERROR_DS_NO_RESULTS_RETURNED() {
        return (int)8257L;
    }
    public static int ERROR_DS_CONTROL_NOT_FOUND() {
        return (int)8258L;
    }
    public static int ERROR_DS_CLIENT_LOOP() {
        return (int)8259L;
    }
    public static int ERROR_DS_REFERRAL_LIMIT_EXCEEDED() {
        return (int)8260L;
    }
    public static int ERROR_DS_SORT_CONTROL_MISSING() {
        return (int)8261L;
    }
    public static int ERROR_DS_OFFSET_RANGE_ERROR() {
        return (int)8262L;
    }
    public static int ERROR_DS_RIDMGR_DISABLED() {
        return (int)8263L;
    }
    public static int ERROR_DS_ROOT_MUST_BE_NC() {
        return (int)8301L;
    }
    public static int ERROR_DS_ADD_REPLICA_INHIBITED() {
        return (int)8302L;
    }
    public static int ERROR_DS_ATT_NOT_DEF_IN_SCHEMA() {
        return (int)8303L;
    }
    public static int ERROR_DS_MAX_OBJ_SIZE_EXCEEDED() {
        return (int)8304L;
    }
    public static int ERROR_DS_OBJ_STRING_NAME_EXISTS() {
        return (int)8305L;
    }
    public static int ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA() {
        return (int)8306L;
    }
    public static int ERROR_DS_RDN_DOESNT_MATCH_SCHEMA() {
        return (int)8307L;
    }
    public static int ERROR_DS_NO_REQUESTED_ATTS_FOUND() {
        return (int)8308L;
    }
    public static int ERROR_DS_USER_BUFFER_TO_SMALL() {
        return (int)8309L;
    }
    public static int ERROR_DS_ATT_IS_NOT_ON_OBJ() {
        return (int)8310L;
    }
    public static int ERROR_DS_ILLEGAL_MOD_OPERATION() {
        return (int)8311L;
    }
    public static int ERROR_DS_OBJ_TOO_LARGE() {
        return (int)8312L;
    }
    public static int ERROR_DS_BAD_INSTANCE_TYPE() {
        return (int)8313L;
    }
    public static int ERROR_DS_MASTERDSA_REQUIRED() {
        return (int)8314L;
    }
    public static int ERROR_DS_OBJECT_CLASS_REQUIRED() {
        return (int)8315L;
    }
    public static int ERROR_DS_MISSING_REQUIRED_ATT() {
        return (int)8316L;
    }
    public static int ERROR_DS_ATT_NOT_DEF_FOR_CLASS() {
        return (int)8317L;
    }
    public static int ERROR_DS_ATT_ALREADY_EXISTS() {
        return (int)8318L;
    }
    public static int ERROR_DS_CANT_ADD_ATT_VALUES() {
        return (int)8320L;
    }
    public static int ERROR_DS_SINGLE_VALUE_CONSTRAINT() {
        return (int)8321L;
    }
    public static int ERROR_DS_RANGE_CONSTRAINT() {
        return (int)8322L;
    }
    public static int ERROR_DS_ATT_VAL_ALREADY_EXISTS() {
        return (int)8323L;
    }
    public static int ERROR_DS_CANT_REM_MISSING_ATT() {
        return (int)8324L;
    }
    public static int ERROR_DS_CANT_REM_MISSING_ATT_VAL() {
        return (int)8325L;
    }
    public static int ERROR_DS_ROOT_CANT_BE_SUBREF() {
        return (int)8326L;
    }
    public static int ERROR_DS_NO_CHAINING() {
        return (int)8327L;
    }
    public static int ERROR_DS_NO_CHAINED_EVAL() {
        return (int)8328L;
    }
    public static int ERROR_DS_NO_PARENT_OBJECT() {
        return (int)8329L;
    }
    public static int ERROR_DS_PARENT_IS_AN_ALIAS() {
        return (int)8330L;
    }
    public static int ERROR_DS_CANT_MIX_MASTER_AND_REPS() {
        return (int)8331L;
    }
    public static int ERROR_DS_CHILDREN_EXIST() {
        return (int)8332L;
    }
    public static int ERROR_DS_OBJ_NOT_FOUND() {
        return (int)8333L;
    }
    public static int ERROR_DS_ALIASED_OBJ_MISSING() {
        return (int)8334L;
    }
    public static int ERROR_DS_BAD_NAME_SYNTAX() {
        return (int)8335L;
    }
    public static int ERROR_DS_ALIAS_POINTS_TO_ALIAS() {
        return (int)8336L;
    }
    public static int ERROR_DS_CANT_DEREF_ALIAS() {
        return (int)8337L;
    }
    public static int ERROR_DS_OUT_OF_SCOPE() {
        return (int)8338L;
    }
    public static int ERROR_DS_OBJECT_BEING_REMOVED() {
        return (int)8339L;
    }
    public static int ERROR_DS_CANT_DELETE_DSA_OBJ() {
        return (int)8340L;
    }
    public static int ERROR_DS_GENERIC_ERROR() {
        return (int)8341L;
    }
    public static int ERROR_DS_DSA_MUST_BE_INT_MASTER() {
        return (int)8342L;
    }
    public static int ERROR_DS_CLASS_NOT_DSA() {
        return (int)8343L;
    }
    public static int ERROR_DS_INSUFF_ACCESS_RIGHTS() {
        return (int)8344L;
    }
    public static int ERROR_DS_ILLEGAL_SUPERIOR() {
        return (int)8345L;
    }
    public static int ERROR_DS_ATTRIBUTE_OWNED_BY_SAM() {
        return (int)8346L;
    }
    public static int ERROR_DS_NAME_TOO_MANY_PARTS() {
        return (int)8347L;
    }
    public static int ERROR_DS_NAME_TOO_LONG() {
        return (int)8348L;
    }
    public static int ERROR_DS_NAME_VALUE_TOO_LONG() {
        return (int)8349L;
    }
    public static int ERROR_DS_NAME_UNPARSEABLE() {
        return (int)8350L;
    }
    public static int ERROR_DS_NAME_TYPE_UNKNOWN() {
        return (int)8351L;
    }
    public static int ERROR_DS_NOT_AN_OBJECT() {
        return (int)8352L;
    }
    public static int ERROR_DS_SEC_DESC_TOO_SHORT() {
        return (int)8353L;
    }
    public static int ERROR_DS_SEC_DESC_INVALID() {
        return (int)8354L;
    }
    public static int ERROR_DS_NO_DELETED_NAME() {
        return (int)8355L;
    }
    public static int ERROR_DS_SUBREF_MUST_HAVE_PARENT() {
        return (int)8356L;
    }
    public static int ERROR_DS_NCNAME_MUST_BE_NC() {
        return (int)8357L;
    }
    public static int ERROR_DS_CANT_ADD_SYSTEM_ONLY() {
        return (int)8358L;
    }
    public static int ERROR_DS_CLASS_MUST_BE_CONCRETE() {
        return (int)8359L;
    }
    public static int ERROR_DS_INVALID_DMD() {
        return (int)8360L;
    }
    public static int ERROR_DS_OBJ_GUID_EXISTS() {
        return (int)8361L;
    }
    public static int ERROR_DS_NOT_ON_BACKLINK() {
        return (int)8362L;
    }
    public static int ERROR_DS_NO_CROSSREF_FOR_NC() {
        return (int)8363L;
    }
    public static int ERROR_DS_SHUTTING_DOWN() {
        return (int)8364L;
    }
    public static int ERROR_DS_UNKNOWN_OPERATION() {
        return (int)8365L;
    }
    public static int ERROR_DS_INVALID_ROLE_OWNER() {
        return (int)8366L;
    }
    public static int ERROR_DS_COULDNT_CONTACT_FSMO() {
        return (int)8367L;
    }
    public static int ERROR_DS_CROSS_NC_DN_RENAME() {
        return (int)8368L;
    }
    public static int ERROR_DS_CANT_MOD_SYSTEM_ONLY() {
        return (int)8369L;
    }
    public static int ERROR_DS_REPLICATOR_ONLY() {
        return (int)8370L;
    }
    public static int ERROR_DS_OBJ_CLASS_NOT_DEFINED() {
        return (int)8371L;
    }
    public static int ERROR_DS_OBJ_CLASS_NOT_SUBCLASS() {
        return (int)8372L;
    }
    public static int ERROR_DS_NAME_REFERENCE_INVALID() {
        return (int)8373L;
    }
    public static int ERROR_DS_CROSS_REF_EXISTS() {
        return (int)8374L;
    }
    public static int ERROR_DS_CANT_DEL_MASTER_CROSSREF() {
        return (int)8375L;
    }
    public static int ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD() {
        return (int)8376L;
    }
    public static int ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX() {
        return (int)8377L;
    }
    public static int ERROR_DS_DUP_RDN() {
        return (int)8378L;
    }
    public static int ERROR_DS_DUP_OID() {
        return (int)8379L;
    }
    public static int ERROR_DS_DUP_MAPI_ID() {
        return (int)8380L;
    }
    public static int ERROR_DS_DUP_SCHEMA_ID_GUID() {
        return (int)8381L;
    }
    public static int ERROR_DS_DUP_LDAP_DISPLAY_NAME() {
        return (int)8382L;
    }
    public static int ERROR_DS_SEMANTIC_ATT_TEST() {
        return (int)8383L;
    }
    public static int ERROR_DS_SYNTAX_MISMATCH() {
        return (int)8384L;
    }
    public static int ERROR_DS_EXISTS_IN_MUST_HAVE() {
        return (int)8385L;
    }
    public static int ERROR_DS_EXISTS_IN_MAY_HAVE() {
        return (int)8386L;
    }
    public static int ERROR_DS_NONEXISTENT_MAY_HAVE() {
        return (int)8387L;
    }
    public static int ERROR_DS_NONEXISTENT_MUST_HAVE() {
        return (int)8388L;
    }
    public static int ERROR_DS_AUX_CLS_TEST_FAIL() {
        return (int)8389L;
    }
    public static int ERROR_DS_NONEXISTENT_POSS_SUP() {
        return (int)8390L;
    }
    public static int ERROR_DS_SUB_CLS_TEST_FAIL() {
        return (int)8391L;
    }
    public static int ERROR_DS_BAD_RDN_ATT_ID_SYNTAX() {
        return (int)8392L;
    }
    public static int ERROR_DS_EXISTS_IN_AUX_CLS() {
        return (int)8393L;
    }
    public static int ERROR_DS_EXISTS_IN_SUB_CLS() {
        return (int)8394L;
    }
    public static int ERROR_DS_EXISTS_IN_POSS_SUP() {
        return (int)8395L;
    }
    public static int ERROR_DS_RECALCSCHEMA_FAILED() {
        return (int)8396L;
    }
    public static int ERROR_DS_TREE_DELETE_NOT_FINISHED() {
        return (int)8397L;
    }
    public static int ERROR_DS_CANT_DELETE() {
        return (int)8398L;
    }
    public static int ERROR_DS_ATT_SCHEMA_REQ_ID() {
        return (int)8399L;
    }
    public static int ERROR_DS_BAD_ATT_SCHEMA_SYNTAX() {
        return (int)8400L;
    }
    public static int ERROR_DS_CANT_CACHE_ATT() {
        return (int)8401L;
    }
    public static int ERROR_DS_CANT_CACHE_CLASS() {
        return (int)8402L;
    }
    public static int ERROR_DS_CANT_REMOVE_ATT_CACHE() {
        return (int)8403L;
    }
    public static int ERROR_DS_CANT_REMOVE_CLASS_CACHE() {
        return (int)8404L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_DN() {
        return (int)8405L;
    }
    public static int ERROR_DS_MISSING_SUPREF() {
        return (int)8406L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_INSTANCE() {
        return (int)8407L;
    }
    public static int ERROR_DS_CODE_INCONSISTENCY() {
        return (int)8408L;
    }
    public static int ERROR_DS_DATABASE_ERROR() {
        return (int)8409L;
    }
    public static int ERROR_DS_GOVERNSID_MISSING() {
        return (int)8410L;
    }
    public static int ERROR_DS_MISSING_EXPECTED_ATT() {
        return (int)8411L;
    }
    public static int ERROR_DS_NCNAME_MISSING_CR_REF() {
        return (int)8412L;
    }
    public static int ERROR_DS_SECURITY_CHECKING_ERROR() {
        return (int)8413L;
    }
    public static int ERROR_DS_SCHEMA_NOT_LOADED() {
        return (int)8414L;
    }
    public static int ERROR_DS_SCHEMA_ALLOC_FAILED() {
        return (int)8415L;
    }
    public static int ERROR_DS_ATT_SCHEMA_REQ_SYNTAX() {
        return (int)8416L;
    }
    public static int ERROR_DS_GCVERIFY_ERROR() {
        return (int)8417L;
    }
    public static int ERROR_DS_DRA_SCHEMA_MISMATCH() {
        return (int)8418L;
    }
    public static int ERROR_DS_CANT_FIND_DSA_OBJ() {
        return (int)8419L;
    }
    public static int ERROR_DS_CANT_FIND_EXPECTED_NC() {
        return (int)8420L;
    }
    public static int ERROR_DS_CANT_FIND_NC_IN_CACHE() {
        return (int)8421L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_CHILD() {
        return (int)8422L;
    }
    public static int ERROR_DS_SECURITY_ILLEGAL_MODIFY() {
        return (int)8423L;
    }
    public static int ERROR_DS_CANT_REPLACE_HIDDEN_REC() {
        return (int)8424L;
    }
    public static int ERROR_DS_BAD_HIERARCHY_FILE() {
        return (int)8425L;
    }
    public static int ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED() {
        return (int)8426L;
    }
    public static int ERROR_DS_CONFIG_PARAM_MISSING() {
        return (int)8427L;
    }
    public static int ERROR_DS_COUNTING_AB_INDICES_FAILED() {
        return (int)8428L;
    }
    public static int ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED() {
        return (int)8429L;
    }
    public static int ERROR_DS_INTERNAL_FAILURE() {
        return (int)8430L;
    }
    public static int ERROR_DS_UNKNOWN_ERROR() {
        return (int)8431L;
    }
    public static int ERROR_DS_ROOT_REQUIRES_CLASS_TOP() {
        return (int)8432L;
    }
    public static int ERROR_DS_REFUSING_FSMO_ROLES() {
        return (int)8433L;
    }
    public static int ERROR_DS_MISSING_FSMO_SETTINGS() {
        return (int)8434L;
    }
    public static int ERROR_DS_UNABLE_TO_SURRENDER_ROLES() {
        return (int)8435L;
    }
    public static int ERROR_DS_DRA_GENERIC() {
        return (int)8436L;
    }
    public static int ERROR_DS_DRA_INVALID_PARAMETER() {
        return (int)8437L;
    }
    public static int ERROR_DS_DRA_BUSY() {
        return (int)8438L;
    }
    public static int ERROR_DS_DRA_BAD_DN() {
        return (int)8439L;
    }
    public static int ERROR_DS_DRA_BAD_NC() {
        return (int)8440L;
    }
    public static int ERROR_DS_DRA_DN_EXISTS() {
        return (int)8441L;
    }
    public static int ERROR_DS_DRA_INTERNAL_ERROR() {
        return (int)8442L;
    }
    public static int ERROR_DS_DRA_INCONSISTENT_DIT() {
        return (int)8443L;
    }
    public static int ERROR_DS_DRA_CONNECTION_FAILED() {
        return (int)8444L;
    }
    public static int ERROR_DS_DRA_BAD_INSTANCE_TYPE() {
        return (int)8445L;
    }
    public static int ERROR_DS_DRA_OUT_OF_MEM() {
        return (int)8446L;
    }
    public static int ERROR_DS_DRA_MAIL_PROBLEM() {
        return (int)8447L;
    }
    public static int ERROR_DS_DRA_REF_ALREADY_EXISTS() {
        return (int)8448L;
    }
    public static int ERROR_DS_DRA_REF_NOT_FOUND() {
        return (int)8449L;
    }
    public static int ERROR_DS_DRA_OBJ_IS_REP_SOURCE() {
        return (int)8450L;
    }
    public static int ERROR_DS_DRA_DB_ERROR() {
        return (int)8451L;
    }
    public static int ERROR_DS_DRA_NO_REPLICA() {
        return (int)8452L;
    }
    public static int ERROR_DS_DRA_ACCESS_DENIED() {
        return (int)8453L;
    }
    public static int ERROR_DS_DRA_NOT_SUPPORTED() {
        return (int)8454L;
    }
    public static int ERROR_DS_DRA_RPC_CANCELLED() {
        return (int)8455L;
    }
    public static int ERROR_DS_DRA_SOURCE_DISABLED() {
        return (int)8456L;
    }
    public static int ERROR_DS_DRA_SINK_DISABLED() {
        return (int)8457L;
    }
    public static int ERROR_DS_DRA_NAME_COLLISION() {
        return (int)8458L;
    }
    public static int ERROR_DS_DRA_SOURCE_REINSTALLED() {
        return (int)8459L;
    }
    public static int ERROR_DS_DRA_MISSING_PARENT() {
        return (int)8460L;
    }
    public static int ERROR_DS_DRA_PREEMPTED() {
        return (int)8461L;
    }
    public static int ERROR_DS_DRA_ABANDON_SYNC() {
        return (int)8462L;
    }
    public static int ERROR_DS_DRA_SHUTDOWN() {
        return (int)8463L;
    }
    public static int ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET() {
        return (int)8464L;
    }
    public static int ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA() {
        return (int)8465L;
    }
    public static int ERROR_DS_DRA_EXTN_CONNECTION_FAILED() {
        return (int)8466L;
    }
    public static int ERROR_DS_INSTALL_SCHEMA_MISMATCH() {
        return (int)8467L;
    }
    public static int ERROR_DS_DUP_LINK_ID() {
        return (int)8468L;
    }
    public static int ERROR_DS_NAME_ERROR_RESOLVING() {
        return (int)8469L;
    }
    public static int ERROR_DS_NAME_ERROR_NOT_FOUND() {
        return (int)8470L;
    }
    public static int ERROR_DS_NAME_ERROR_NOT_UNIQUE() {
        return (int)8471L;
    }
    public static int ERROR_DS_NAME_ERROR_NO_MAPPING() {
        return (int)8472L;
    }
    public static int ERROR_DS_NAME_ERROR_DOMAIN_ONLY() {
        return (int)8473L;
    }
    public static int ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING() {
        return (int)8474L;
    }
    public static int ERROR_DS_CONSTRUCTED_ATT_MOD() {
        return (int)8475L;
    }
    public static int ERROR_DS_WRONG_OM_OBJ_CLASS() {
        return (int)8476L;
    }
    public static int ERROR_DS_DRA_REPL_PENDING() {
        return (int)8477L;
    }
    public static int ERROR_DS_DS_REQUIRED() {
        return (int)8478L;
    }
    public static int ERROR_DS_INVALID_LDAP_DISPLAY_NAME() {
        return (int)8479L;
    }
    public static int ERROR_DS_NON_BASE_SEARCH() {
        return (int)8480L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_ATTS() {
        return (int)8481L;
    }
    public static int ERROR_DS_BACKLINK_WITHOUT_LINK() {
        return (int)8482L;
    }
    public static int ERROR_DS_EPOCH_MISMATCH() {
        return (int)8483L;
    }
    public static int ERROR_DS_SRC_NAME_MISMATCH() {
        return (int)8484L;
    }
    public static int ERROR_DS_SRC_AND_DST_NC_IDENTICAL() {
        return (int)8485L;
    }
    public static int ERROR_DS_DST_NC_MISMATCH() {
        return (int)8486L;
    }
    public static int ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC() {
        return (int)8487L;
    }
    public static int ERROR_DS_SRC_GUID_MISMATCH() {
        return (int)8488L;
    }
    public static int ERROR_DS_CANT_MOVE_DELETED_OBJECT() {
        return (int)8489L;
    }
    public static int ERROR_DS_PDC_OPERATION_IN_PROGRESS() {
        return (int)8490L;
    }
    public static int ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD() {
        return (int)8491L;
    }
    public static int ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION() {
        return (int)8492L;
    }
    public static int ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS() {
        return (int)8493L;
    }
    public static int ERROR_DS_NC_MUST_HAVE_NC_PARENT() {
        return (int)8494L;
    }
    public static int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE() {
        return (int)8495L;
    }
    public static int ERROR_DS_DST_DOMAIN_NOT_NATIVE() {
        return (int)8496L;
    }
    public static int ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER() {
        return (int)8497L;
    }
    public static int ERROR_DS_CANT_MOVE_ACCOUNT_GROUP() {
        return (int)8498L;
    }
    public static int ERROR_DS_CANT_MOVE_RESOURCE_GROUP() {
        return (int)8499L;
    }
    public static int ERROR_DS_INVALID_SEARCH_FLAG() {
        return (int)8500L;
    }
    public static int ERROR_DS_NO_TREE_DELETE_ABOVE_NC() {
        return (int)8501L;
    }
    public static int ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE() {
        return (int)8502L;
    }
    public static int ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE() {
        return (int)8503L;
    }
    public static int ERROR_DS_SAM_INIT_FAILURE() {
        return (int)8504L;
    }
    public static int ERROR_DS_SENSITIVE_GROUP_VIOLATION() {
        return (int)8505L;
    }
    public static int ERROR_DS_CANT_MOD_PRIMARYGROUPID() {
        return (int)8506L;
    }
    public static int ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD() {
        return (int)8507L;
    }
    public static int ERROR_DS_NONSAFE_SCHEMA_CHANGE() {
        return (int)8508L;
    }
    public static int ERROR_DS_SCHEMA_UPDATE_DISALLOWED() {
        return (int)8509L;
    }
    public static int ERROR_DS_CANT_CREATE_UNDER_SCHEMA() {
        return (int)8510L;
    }
    public static int ERROR_DS_INSTALL_NO_SRC_SCH_VERSION() {
        return (int)8511L;
    }
    public static int ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE() {
        return (int)8512L;
    }
    public static int ERROR_DS_INVALID_GROUP_TYPE() {
        return (int)8513L;
    }
    public static int ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN() {
        return (int)8514L;
    }
    public static int ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN() {
        return (int)8515L;
    }
    public static int ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER() {
        return (int)8516L;
    }
    public static int ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER() {
        return (int)8517L;
    }
    public static int ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER() {
        return (int)8518L;
    }
    public static int ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER() {
        return (int)8519L;
    }
    public static int ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER() {
        return (int)8520L;
    }
    public static int ERROR_DS_HAVE_PRIMARY_MEMBERS() {
        return (int)8521L;
    }
    public static int ERROR_DS_STRING_SD_CONVERSION_FAILED() {
        return (int)8522L;
    }
    public static int ERROR_DS_NAMING_MASTER_GC() {
        return (int)8523L;
    }
    public static int ERROR_DS_DNS_LOOKUP_FAILURE() {
        return (int)8524L;
    }
    public static int ERROR_DS_COULDNT_UPDATE_SPNS() {
        return (int)8525L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_SD() {
        return (int)8526L;
    }
    public static int ERROR_DS_KEY_NOT_UNIQUE() {
        return (int)8527L;
    }
    public static int ERROR_DS_WRONG_LINKED_ATT_SYNTAX() {
        return (int)8528L;
    }
    public static int ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD() {
        return (int)8529L;
    }
    public static int ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY() {
        return (int)8530L;
    }
    public static int ERROR_DS_CANT_START() {
        return (int)8531L;
    }
    public static int ERROR_DS_INIT_FAILURE() {
        return (int)8532L;
    }
    public static int ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION() {
        return (int)8533L;
    }
    public static int ERROR_DS_SOURCE_DOMAIN_IN_FOREST() {
        return (int)8534L;
    }
    public static int ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST() {
        return (int)8535L;
    }
    public static int ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED() {
        return (int)8536L;
    }
    public static int ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN() {
        return (int)8537L;
    }
    public static int ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER() {
        return (int)8538L;
    }
    public static int ERROR_DS_SRC_SID_EXISTS_IN_FOREST() {
        return (int)8539L;
    }
    public static int ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH() {
        return (int)8540L;
    }
    public static int ERROR_SAM_INIT_FAILURE() {
        return (int)8541L;
    }
    public static int ERROR_DS_DRA_SCHEMA_INFO_SHIP() {
        return (int)8542L;
    }
    public static int ERROR_DS_DRA_SCHEMA_CONFLICT() {
        return (int)8543L;
    }
    public static int ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT() {
        return (int)8544L;
    }
    public static int ERROR_DS_DRA_OBJ_NC_MISMATCH() {
        return (int)8545L;
    }
    public static int ERROR_DS_NC_STILL_HAS_DSAS() {
        return (int)8546L;
    }
    public static int ERROR_DS_GC_REQUIRED() {
        return (int)8547L;
    }
    public static int ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY() {
        return (int)8548L;
    }
    public static int ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS() {
        return (int)8549L;
    }
    public static int ERROR_DS_CANT_ADD_TO_GC() {
        return (int)8550L;
    }
    public static int ERROR_DS_NO_CHECKPOINT_WITH_PDC() {
        return (int)8551L;
    }
    public static int ERROR_DS_SOURCE_AUDITING_NOT_ENABLED() {
        return (int)8552L;
    }
    public static int ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC() {
        return (int)8553L;
    }
    public static int ERROR_DS_INVALID_NAME_FOR_SPN() {
        return (int)8554L;
    }
    public static int ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS() {
        return (int)8555L;
    }
    public static int ERROR_DS_UNICODEPWD_NOT_IN_QUOTES() {
        return (int)8556L;
    }
    public static int ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED() {
        return (int)8557L;
    }
    public static int ERROR_DS_MUST_BE_RUN_ON_DST_DC() {
        return (int)8558L;
    }
    public static int ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER() {
        return (int)8559L;
    }
    public static int ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ() {
        return (int)8560L;
    }
    public static int ERROR_DS_INIT_FAILURE_CONSOLE() {
        return (int)8561L;
    }
    public static int ERROR_DS_SAM_INIT_FAILURE_CONSOLE() {
        return (int)8562L;
    }
    public static int ERROR_DS_FOREST_VERSION_TOO_HIGH() {
        return (int)8563L;
    }
    public static int ERROR_DS_DOMAIN_VERSION_TOO_HIGH() {
        return (int)8564L;
    }
    public static int ERROR_DS_FOREST_VERSION_TOO_LOW() {
        return (int)8565L;
    }
    public static int ERROR_DS_DOMAIN_VERSION_TOO_LOW() {
        return (int)8566L;
    }
    public static int ERROR_DS_INCOMPATIBLE_VERSION() {
        return (int)8567L;
    }
    public static int ERROR_DS_LOW_DSA_VERSION() {
        return (int)8568L;
    }
    public static int ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN() {
        return (int)8569L;
    }
    public static int ERROR_DS_NOT_SUPPORTED_SORT_ORDER() {
        return (int)8570L;
    }
    public static int ERROR_DS_NAME_NOT_UNIQUE() {
        return (int)8571L;
    }
    public static int ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4() {
        return (int)8572L;
    }
    public static int ERROR_DS_OUT_OF_VERSION_STORE() {
        return (int)8573L;
    }
    public static int ERROR_DS_INCOMPATIBLE_CONTROLS_USED() {
        return (int)8574L;
    }
    public static int ERROR_DS_NO_REF_DOMAIN() {
        return (int)8575L;
    }
    public static int ERROR_DS_RESERVED_LINK_ID() {
        return (int)8576L;
    }
    public static int ERROR_DS_LINK_ID_NOT_AVAILABLE() {
        return (int)8577L;
    }
    public static int ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER() {
        return (int)8578L;
    }
    public static int ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE() {
        return (int)8579L;
    }
    public static int ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC() {
        return (int)8580L;
    }
    public static int ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG() {
        return (int)8581L;
    }
    public static int ERROR_DS_MODIFYDN_WRONG_GRANDPARENT() {
        return (int)8582L;
    }
    public static int ERROR_DS_NAME_ERROR_TRUST_REFERRAL() {
        return (int)8583L;
    }
    public static int ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER() {
        return (int)8584L;
    }
    public static int ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD() {
        return (int)8585L;
    }
    public static int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2() {
        return (int)8586L;
    }
    public static int ERROR_DS_THREAD_LIMIT_EXCEEDED() {
        return (int)8587L;
    }
    public static int ERROR_DS_NOT_CLOSEST() {
        return (int)8588L;
    }
    public static int ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF() {
        return (int)8589L;
    }
    public static int ERROR_DS_SINGLE_USER_MODE_FAILED() {
        return (int)8590L;
    }
    public static int ERROR_DS_NTDSCRIPT_SYNTAX_ERROR() {
        return (int)8591L;
    }
    public static int ERROR_DS_NTDSCRIPT_PROCESS_ERROR() {
        return (int)8592L;
    }
    public static int ERROR_DS_DIFFERENT_REPL_EPOCHS() {
        return (int)8593L;
    }
    public static int ERROR_DS_DRS_EXTENSIONS_CHANGED() {
        return (int)8594L;
    }
    public static int ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR() {
        return (int)8595L;
    }
    public static int ERROR_DS_NO_MSDS_INTID() {
        return (int)8596L;
    }
    public static int ERROR_DS_DUP_MSDS_INTID() {
        return (int)8597L;
    }
    public static int ERROR_DS_EXISTS_IN_RDNATTID() {
        return (int)8598L;
    }
    public static int ERROR_DS_AUTHORIZATION_FAILED() {
        return (int)8599L;
    }
    public static int ERROR_DS_INVALID_SCRIPT() {
        return (int)8600L;
    }
    public static int ERROR_DS_REMOTE_CROSSREF_OP_FAILED() {
        return (int)8601L;
    }
    public static int ERROR_DS_CROSS_REF_BUSY() {
        return (int)8602L;
    }
    public static int ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN() {
        return (int)8603L;
    }
    public static int ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC() {
        return (int)8604L;
    }
    public static int ERROR_DS_DUPLICATE_ID_FOUND() {
        return (int)8605L;
    }
    public static int ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT() {
        return (int)8606L;
    }
    public static int ERROR_DS_GROUP_CONVERSION_ERROR() {
        return (int)8607L;
    }
    public static int ERROR_DS_CANT_MOVE_APP_BASIC_GROUP() {
        return (int)8608L;
    }
    public static int ERROR_DS_CANT_MOVE_APP_QUERY_GROUP() {
        return (int)8609L;
    }
    public static int ERROR_DS_ROLE_NOT_VERIFIED() {
        return (int)8610L;
    }
    public static int ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL() {
        return (int)8611L;
    }
    public static int ERROR_DS_DOMAIN_RENAME_IN_PROGRESS() {
        return (int)8612L;
    }
    public static int ERROR_DS_EXISTING_AD_CHILD_NC() {
        return (int)8613L;
    }
    public static int ERROR_DS_REPL_LIFETIME_EXCEEDED() {
        return (int)8614L;
    }
    public static int ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER() {
        return (int)8615L;
    }
    public static int ERROR_DS_LDAP_SEND_QUEUE_FULL() {
        return (int)8616L;
    }
    public static int ERROR_DS_DRA_OUT_SCHEDULE_WINDOW() {
        return (int)8617L;
    }
    public static int ERROR_DS_POLICY_NOT_KNOWN() {
        return (int)8618L;
    }
    public static int ERROR_NO_SITE_SETTINGS_OBJECT() {
        return (int)8619L;
    }
    public static int ERROR_NO_SECRETS() {
        return (int)8620L;
    }
    public static int ERROR_NO_WRITABLE_DC_FOUND() {
        return (int)8621L;
    }
    public static int ERROR_DS_NO_SERVER_OBJECT() {
        return (int)8622L;
    }
    public static int ERROR_DS_NO_NTDSA_OBJECT() {
        return (int)8623L;
    }
    public static int ERROR_DS_NON_ASQ_SEARCH() {
        return (int)8624L;
    }
    public static int ERROR_DS_AUDIT_FAILURE() {
        return (int)8625L;
    }
    public static int ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE() {
        return (int)8626L;
    }
    public static int ERROR_DS_INVALID_SEARCH_FLAG_TUPLE() {
        return (int)8627L;
    }
    public static int ERROR_DS_HIERARCHY_TABLE_TOO_DEEP() {
        return (int)8628L;
    }
    public static int ERROR_DS_DRA_CORRUPT_UTD_VECTOR() {
        return (int)8629L;
    }
    public static int ERROR_DS_DRA_SECRETS_DENIED() {
        return (int)8630L;
    }
    public static int ERROR_DS_RESERVED_MAPI_ID() {
        return (int)8631L;
    }
    public static int ERROR_DS_MAPI_ID_NOT_AVAILABLE() {
        return (int)8632L;
    }
    public static int ERROR_DS_DRA_MISSING_KRBTGT_SECRET() {
        return (int)8633L;
    }
    public static int ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST() {
        return (int)8634L;
    }
    public static int ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST() {
        return (int)8635L;
    }
    public static int ERROR_INVALID_USER_PRINCIPAL_NAME() {
        return (int)8636L;
    }
    public static int ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS() {
        return (int)8637L;
    }
    public static int ERROR_DS_OID_NOT_FOUND() {
        return (int)8638L;
    }
    public static int ERROR_DS_DRA_RECYCLED_TARGET() {
        return (int)8639L;
    }
    public static int ERROR_DS_DISALLOWED_NC_REDIRECT() {
        return (int)8640L;
    }
    public static int ERROR_DS_HIGH_ADLDS_FFL() {
        return (int)8641L;
    }
    public static int ERROR_DS_HIGH_DSA_VERSION() {
        return (int)8642L;
    }
    public static int ERROR_DS_LOW_ADLDS_FFL() {
        return (int)8643L;
    }
    public static int ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION() {
        return (int)8644L;
    }
    public static int ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED() {
        return (int)8645L;
    }
    public static int ERROR_INCORRECT_ACCOUNT_TYPE() {
        return (int)8646L;
    }
    public static int ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST() {
        return (int)8647L;
    }
    public static int ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST() {
        return (int)8648L;
    }
    public static int ERROR_DS_MISSING_FOREST_TRUST() {
        return (int)8649L;
    }
    public static int ERROR_DS_VALUE_KEY_NOT_UNIQUE() {
        return (int)8650L;
    }
    public static int DNS_ERROR_RCODE_NO_ERROR() {
        return (int)0L;
    }
    public static int DNS_ERROR_RCODE_FORMAT_ERROR() {
        return (int)9001L;
    }
    public static int DNS_ERROR_RCODE_SERVER_FAILURE() {
        return (int)9002L;
    }
    public static int DNS_ERROR_RCODE_NAME_ERROR() {
        return (int)9003L;
    }
    public static int DNS_ERROR_RCODE_NOT_IMPLEMENTED() {
        return (int)9004L;
    }
    public static int DNS_ERROR_RCODE_REFUSED() {
        return (int)9005L;
    }
    public static int DNS_ERROR_RCODE_YXDOMAIN() {
        return (int)9006L;
    }
    public static int DNS_ERROR_RCODE_YXRRSET() {
        return (int)9007L;
    }
    public static int DNS_ERROR_RCODE_NXRRSET() {
        return (int)9008L;
    }
    public static int DNS_ERROR_RCODE_NOTAUTH() {
        return (int)9009L;
    }
    public static int DNS_ERROR_RCODE_NOTZONE() {
        return (int)9010L;
    }
    public static int DNS_ERROR_RCODE_BADSIG() {
        return (int)9016L;
    }
    public static int DNS_ERROR_RCODE_BADKEY() {
        return (int)9017L;
    }
    public static int DNS_ERROR_RCODE_BADTIME() {
        return (int)9018L;
    }
    public static int DNS_ERROR_RCODE_LAST() {
        return (int)9018L;
    }
    public static int DNS_ERROR_KEYMASTER_REQUIRED() {
        return (int)9101L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE() {
        return (int)9102L;
    }
    public static int DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1() {
        return (int)9103L;
    }
    public static int DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS() {
        return (int)9104L;
    }
    public static int DNS_ERROR_UNSUPPORTED_ALGORITHM() {
        return (int)9105L;
    }
    public static int DNS_ERROR_INVALID_KEY_SIZE() {
        return (int)9106L;
    }
    public static int DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE() {
        return (int)9107L;
    }
    public static int DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION() {
        return (int)9108L;
    }
    public static int DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR() {
        return (int)9109L;
    }
    public static int DNS_ERROR_UNEXPECTED_CNG_ERROR() {
        return (int)9110L;
    }
    public static int DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION() {
        return (int)9111L;
    }
    public static int DNS_ERROR_KSP_NOT_ACCESSIBLE() {
        return (int)9112L;
    }
    public static int DNS_ERROR_TOO_MANY_SKDS() {
        return (int)9113L;
    }
    public static int DNS_ERROR_INVALID_ROLLOVER_PERIOD() {
        return (int)9114L;
    }
    public static int DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET() {
        return (int)9115L;
    }
    public static int DNS_ERROR_ROLLOVER_IN_PROGRESS() {
        return (int)9116L;
    }
    public static int DNS_ERROR_STANDBY_KEY_NOT_PRESENT() {
        return (int)9117L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_ON_ZSK() {
        return (int)9118L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD() {
        return (int)9119L;
    }
    public static int DNS_ERROR_ROLLOVER_ALREADY_QUEUED() {
        return (int)9120L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE() {
        return (int)9121L;
    }
    public static int DNS_ERROR_BAD_KEYMASTER() {
        return (int)9122L;
    }
    public static int DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD() {
        return (int)9123L;
    }
    public static int DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT() {
        return (int)9124L;
    }
    public static int DNS_ERROR_DNSSEC_IS_DISABLED() {
        return (int)9125L;
    }
    public static int DNS_ERROR_INVALID_XML() {
        return (int)9126L;
    }
    public static int DNS_ERROR_NO_VALID_TRUST_ANCHORS() {
        return (int)9127L;
    }
    public static int DNS_ERROR_ROLLOVER_NOT_POKEABLE() {
        return (int)9128L;
    }
    public static int DNS_ERROR_NSEC3_NAME_COLLISION() {
        return (int)9129L;
    }
    public static int DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1() {
        return (int)9130L;
    }
    public static int DNS_INFO_NO_RECORDS() {
        return (int)9501L;
    }
    public static int DNS_ERROR_BAD_PACKET() {
        return (int)9502L;
    }
    public static int DNS_ERROR_NO_PACKET() {
        return (int)9503L;
    }
    public static int DNS_ERROR_RCODE() {
        return (int)9504L;
    }
    public static int DNS_ERROR_UNSECURE_PACKET() {
        return (int)9505L;
    }
    public static int DNS_STATUS_PACKET_UNSECURE() {
        return (int)9505L;
    }
    public static int DNS_REQUEST_PENDING() {
        return (int)9506L;
    }
    public static int DNS_ERROR_NO_MEMORY() {
        return (int)14L;
    }
    public static int DNS_ERROR_INVALID_NAME() {
        return (int)123L;
    }
    public static int DNS_ERROR_INVALID_DATA() {
        return (int)13L;
    }
    public static int DNS_ERROR_INVALID_TYPE() {
        return (int)9551L;
    }
    public static int DNS_ERROR_INVALID_IP_ADDRESS() {
        return (int)9552L;
    }
    public static int DNS_ERROR_INVALID_PROPERTY() {
        return (int)9553L;
    }
    public static int DNS_ERROR_TRY_AGAIN_LATER() {
        return (int)9554L;
    }
    public static int DNS_ERROR_NOT_UNIQUE() {
        return (int)9555L;
    }
    public static int DNS_ERROR_NON_RFC_NAME() {
        return (int)9556L;
    }
    public static int DNS_STATUS_FQDN() {
        return (int)9557L;
    }
    public static int DNS_STATUS_DOTTED_NAME() {
        return (int)9558L;
    }
    public static int DNS_STATUS_SINGLE_PART_NAME() {
        return (int)9559L;
    }
    public static int DNS_ERROR_INVALID_NAME_CHAR() {
        return (int)9560L;
    }
    public static int DNS_ERROR_NUMERIC_NAME() {
        return (int)9561L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER() {
        return (int)9562L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION() {
        return (int)9563L;
    }
    public static int DNS_ERROR_CANNOT_FIND_ROOT_HINTS() {
        return (int)9564L;
    }
    public static int DNS_ERROR_INCONSISTENT_ROOT_HINTS() {
        return (int)9565L;
    }
    public static int DNS_ERROR_DWORD_VALUE_TOO_SMALL() {
        return (int)9566L;
    }
    public static int DNS_ERROR_DWORD_VALUE_TOO_LARGE() {
        return (int)9567L;
    }
    public static int DNS_ERROR_BACKGROUND_LOADING() {
        return (int)9568L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_ON_RODC() {
        return (int)9569L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_UNDER_DNAME() {
        return (int)9570L;
    }
    public static int DNS_ERROR_DELEGATION_REQUIRED() {
        return (int)9571L;
    }
    public static int DNS_ERROR_INVALID_POLICY_TABLE() {
        return (int)9572L;
    }
    public static int DNS_ERROR_ADDRESS_REQUIRED() {
        return (int)9573L;
    }
    public static int DNS_ERROR_ZONE_DOES_NOT_EXIST() {
        return (int)9601L;
    }
    public static int DNS_ERROR_NO_ZONE_INFO() {
        return (int)9602L;
    }
    public static int DNS_ERROR_INVALID_ZONE_OPERATION() {
        return (int)9603L;
    }
    public static int DNS_ERROR_ZONE_CONFIGURATION_ERROR() {
        return (int)9604L;
    }
    public static int DNS_ERROR_ZONE_HAS_NO_SOA_RECORD() {
        return (int)9605L;
    }
    public static int DNS_ERROR_ZONE_HAS_NO_NS_RECORDS() {
        return (int)9606L;
    }
    public static int DNS_ERROR_ZONE_LOCKED() {
        return (int)9607L;
    }
    public static int DNS_ERROR_ZONE_CREATION_FAILED() {
        return (int)9608L;
    }
    public static int DNS_ERROR_ZONE_ALREADY_EXISTS() {
        return (int)9609L;
    }
    public static int DNS_ERROR_AUTOZONE_ALREADY_EXISTS() {
        return (int)9610L;
    }
    public static int DNS_ERROR_INVALID_ZONE_TYPE() {
        return (int)9611L;
    }
    public static int DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP() {
        return (int)9612L;
    }
    public static int DNS_ERROR_ZONE_NOT_SECONDARY() {
        return (int)9613L;
    }
    public static int DNS_ERROR_NEED_SECONDARY_ADDRESSES() {
        return (int)9614L;
    }
    public static int DNS_ERROR_WINS_INIT_FAILED() {
        return (int)9615L;
    }
    public static int DNS_ERROR_NEED_WINS_SERVERS() {
        return (int)9616L;
    }
    public static int DNS_ERROR_NBSTAT_INIT_FAILED() {
        return (int)9617L;
    }
    public static int DNS_ERROR_SOA_DELETE_INVALID() {
        return (int)9618L;
    }
    public static int DNS_ERROR_FORWARDER_ALREADY_EXISTS() {
        return (int)9619L;
    }
    public static int DNS_ERROR_ZONE_REQUIRES_MASTER_IP() {
        return (int)9620L;
    }
    public static int DNS_ERROR_ZONE_IS_SHUTDOWN() {
        return (int)9621L;
    }
    public static int DNS_ERROR_ZONE_LOCKED_FOR_SIGNING() {
        return (int)9622L;
    }
    public static int DNS_ERROR_PRIMARY_REQUIRES_DATAFILE() {
        return (int)9651L;
    }
    public static int DNS_ERROR_INVALID_DATAFILE_NAME() {
        return (int)9652L;
    }
    public static int DNS_ERROR_DATAFILE_OPEN_FAILURE() {
        return (int)9653L;
    }
    public static int DNS_ERROR_FILE_WRITEBACK_FAILED() {
        return (int)9654L;
    }
    public static int DNS_ERROR_DATAFILE_PARSING() {
        return (int)9655L;
    }
    public static int DNS_ERROR_RECORD_DOES_NOT_EXIST() {
        return (int)9701L;
    }
    public static int DNS_ERROR_RECORD_FORMAT() {
        return (int)9702L;
    }
    public static int DNS_ERROR_NODE_CREATION_FAILED() {
        return (int)9703L;
    }
    public static int DNS_ERROR_UNKNOWN_RECORD_TYPE() {
        return (int)9704L;
    }
    public static int DNS_ERROR_RECORD_TIMED_OUT() {
        return (int)9705L;
    }
    public static int DNS_ERROR_NAME_NOT_IN_ZONE() {
        return (int)9706L;
    }
    public static int DNS_ERROR_CNAME_LOOP() {
        return (int)9707L;
    }
    public static int DNS_ERROR_NODE_IS_CNAME() {
        return (int)9708L;
    }
    public static int DNS_ERROR_CNAME_COLLISION() {
        return (int)9709L;
    }
    public static int DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT() {
        return (int)9710L;
    }
    public static int DNS_ERROR_RECORD_ALREADY_EXISTS() {
        return (int)9711L;
    }
    public static int DNS_ERROR_SECONDARY_DATA() {
        return (int)9712L;
    }
    public static int DNS_ERROR_NO_CREATE_CACHE_DATA() {
        return (int)9713L;
    }
    public static int DNS_ERROR_NAME_DOES_NOT_EXIST() {
        return (int)9714L;
    }
    public static int DNS_WARNING_PTR_CREATE_FAILED() {
        return (int)9715L;
    }
    public static int DNS_WARNING_DOMAIN_UNDELETED() {
        return (int)9716L;
    }
    public static int DNS_ERROR_DS_UNAVAILABLE() {
        return (int)9717L;
    }
    public static int DNS_ERROR_DS_ZONE_ALREADY_EXISTS() {
        return (int)9718L;
    }
    public static int DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE() {
        return (int)9719L;
    }
    public static int DNS_ERROR_NODE_IS_DNAME() {
        return (int)9720L;
    }
    public static int DNS_ERROR_DNAME_COLLISION() {
        return (int)9721L;
    }
    public static int DNS_ERROR_ALIAS_LOOP() {
        return (int)9722L;
    }
    public static int DNS_INFO_AXFR_COMPLETE() {
        return (int)9751L;
    }
    public static int DNS_ERROR_AXFR() {
        return (int)9752L;
    }
    public static int DNS_INFO_ADDED_LOCAL_WINS() {
        return (int)9753L;
    }
    public static int DNS_STATUS_CONTINUE_NEEDED() {
        return (int)9801L;
    }
    public static int DNS_ERROR_NO_TCPIP() {
        return (int)9851L;
    }
    public static int DNS_ERROR_NO_DNS_SERVERS() {
        return (int)9852L;
    }
    public static int DNS_ERROR_DP_DOES_NOT_EXIST() {
        return (int)9901L;
    }
    public static int DNS_ERROR_DP_ALREADY_EXISTS() {
        return (int)9902L;
    }
    public static int DNS_ERROR_DP_NOT_ENLISTED() {
        return (int)9903L;
    }
    public static int DNS_ERROR_DP_ALREADY_ENLISTED() {
        return (int)9904L;
    }
    public static int DNS_ERROR_DP_NOT_AVAILABLE() {
        return (int)9905L;
    }
    public static int DNS_ERROR_DP_FSMO_ERROR() {
        return (int)9906L;
    }
    public static int DNS_ERROR_RRL_NOT_ENABLED() {
        return (int)9911L;
    }
    public static int DNS_ERROR_RRL_INVALID_WINDOW_SIZE() {
        return (int)9912L;
    }
    public static int DNS_ERROR_RRL_INVALID_IPV4_PREFIX() {
        return (int)9913L;
    }
    public static int DNS_ERROR_RRL_INVALID_IPV6_PREFIX() {
        return (int)9914L;
    }
    public static int DNS_ERROR_RRL_INVALID_TC_RATE() {
        return (int)9915L;
    }
    public static int DNS_ERROR_RRL_INVALID_LEAK_RATE() {
        return (int)9916L;
    }
    public static int DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE() {
        return (int)9917L;
    }
    public static int DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS() {
        return (int)9921L;
    }
    public static int DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST() {
        return (int)9922L;
    }
    public static int DNS_ERROR_VIRTUALIZATION_TREE_LOCKED() {
        return (int)9923L;
    }
    public static int DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME() {
        return (int)9924L;
    }
    public static int DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE() {
        return (int)9925L;
    }
    public static int DNS_ERROR_ZONESCOPE_ALREADY_EXISTS() {
        return (int)9951L;
    }
    public static int DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST() {
        return (int)9952L;
    }
    public static int DNS_ERROR_DEFAULT_ZONESCOPE() {
        return (int)9953L;
    }
    public static int DNS_ERROR_INVALID_ZONESCOPE_NAME() {
        return (int)9954L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES() {
        return (int)9955L;
    }
    public static int DNS_ERROR_LOAD_ZONESCOPE_FAILED() {
        return (int)9956L;
    }
    public static int DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED() {
        return (int)9957L;
    }
    public static int DNS_ERROR_INVALID_SCOPE_NAME() {
        return (int)9958L;
    }
    public static int DNS_ERROR_SCOPE_DOES_NOT_EXIST() {
        return (int)9959L;
    }
    public static int DNS_ERROR_DEFAULT_SCOPE() {
        return (int)9960L;
    }
    public static int DNS_ERROR_INVALID_SCOPE_OPERATION() {
        return (int)9961L;
    }
    public static int DNS_ERROR_SCOPE_LOCKED() {
        return (int)9962L;
    }
    public static int DNS_ERROR_SCOPE_ALREADY_EXISTS() {
        return (int)9963L;
    }
    public static int DNS_ERROR_POLICY_ALREADY_EXISTS() {
        return (int)9971L;
    }
    public static int DNS_ERROR_POLICY_DOES_NOT_EXIST() {
        return (int)9972L;
    }
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA() {
        return (int)9973L;
    }
    public static int DNS_ERROR_POLICY_INVALID_SETTINGS() {
        return (int)9974L;
    }
    public static int DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED() {
        return (int)9975L;
    }
    public static int DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST() {
        return (int)9976L;
    }
    public static int DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS() {
        return (int)9977L;
    }
    public static int DNS_ERROR_SUBNET_DOES_NOT_EXIST() {
        return (int)9978L;
    }
    public static int DNS_ERROR_SUBNET_ALREADY_EXISTS() {
        return (int)9979L;
    }
    public static int DNS_ERROR_POLICY_LOCKED() {
        return (int)9980L;
    }
    public static int DNS_ERROR_POLICY_INVALID_WEIGHT() {
        return (int)9981L;
    }
    public static int DNS_ERROR_POLICY_INVALID_NAME() {
        return (int)9982L;
    }
    public static int DNS_ERROR_POLICY_MISSING_CRITERIA() {
        return (int)9983L;
    }
    public static int DNS_ERROR_INVALID_CLIENT_SUBNET_NAME() {
        return (int)9984L;
    }
    public static int DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID() {
        return (int)9985L;
    }
    public static int DNS_ERROR_POLICY_SCOPE_MISSING() {
        return (int)9986L;
    }
    public static int DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED() {
        return (int)9987L;
    }
    public static int DNS_ERROR_SERVERSCOPE_IS_REFERENCED() {
        return (int)9988L;
    }
    public static int DNS_ERROR_ZONESCOPE_IS_REFERENCED() {
        return (int)9989L;
    }
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET() {
        return (int)9990L;
    }
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL() {
        return (int)9991L;
    }
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL() {
        return (int)9992L;
    }
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE() {
        return (int)9993L;
    }
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN() {
        return (int)9994L;
    }
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE() {
        return (int)9995L;
    }
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY() {
        return (int)9996L;
    }
    public static int WSAEINTR() {
        return (int)10004L;
    }
    public static int WSAEBADF() {
        return (int)10009L;
    }
    public static int WSAEACCES() {
        return (int)10013L;
    }
    public static int WSAEFAULT() {
        return (int)10014L;
    }
    public static int WSAEINVAL() {
        return (int)10022L;
    }
    public static int WSAEMFILE() {
        return (int)10024L;
    }
    public static int WSAEWOULDBLOCK() {
        return (int)10035L;
    }
    public static int WSAEINPROGRESS() {
        return (int)10036L;
    }
    public static int WSAEALREADY() {
        return (int)10037L;
    }
    public static int WSAENOTSOCK() {
        return (int)10038L;
    }
    public static int WSAEDESTADDRREQ() {
        return (int)10039L;
    }
    public static int WSAEMSGSIZE() {
        return (int)10040L;
    }
    public static int WSAEPROTOTYPE() {
        return (int)10041L;
    }
    public static int WSAENOPROTOOPT() {
        return (int)10042L;
    }
    public static int WSAEPROTONOSUPPORT() {
        return (int)10043L;
    }
    public static int WSAESOCKTNOSUPPORT() {
        return (int)10044L;
    }
    public static int WSAEOPNOTSUPP() {
        return (int)10045L;
    }
    public static int WSAEPFNOSUPPORT() {
        return (int)10046L;
    }
    public static int WSAEAFNOSUPPORT() {
        return (int)10047L;
    }
    public static int WSAEADDRINUSE() {
        return (int)10048L;
    }
    public static int WSAEADDRNOTAVAIL() {
        return (int)10049L;
    }
    public static int WSAENETDOWN() {
        return (int)10050L;
    }
    public static int WSAENETUNREACH() {
        return (int)10051L;
    }
    public static int WSAENETRESET() {
        return (int)10052L;
    }
    public static int WSAECONNABORTED() {
        return (int)10053L;
    }
    public static int WSAECONNRESET() {
        return (int)10054L;
    }
    public static int WSAENOBUFS() {
        return (int)10055L;
    }
    public static int WSAEISCONN() {
        return (int)10056L;
    }
    public static int WSAENOTCONN() {
        return (int)10057L;
    }
    public static int WSAESHUTDOWN() {
        return (int)10058L;
    }
    public static int WSAETOOMANYREFS() {
        return (int)10059L;
    }
    public static int WSAETIMEDOUT() {
        return (int)10060L;
    }
    public static int WSAECONNREFUSED() {
        return (int)10061L;
    }
    public static int WSAELOOP() {
        return (int)10062L;
    }
    public static int WSAENAMETOOLONG() {
        return (int)10063L;
    }
    public static int WSAEHOSTDOWN() {
        return (int)10064L;
    }
    public static int WSAEHOSTUNREACH() {
        return (int)10065L;
    }
    public static int WSAENOTEMPTY() {
        return (int)10066L;
    }
    public static int WSAEPROCLIM() {
        return (int)10067L;
    }
    public static int WSAEUSERS() {
        return (int)10068L;
    }
    public static int WSAEDQUOT() {
        return (int)10069L;
    }
    public static int WSAESTALE() {
        return (int)10070L;
    }
    public static int WSAEREMOTE() {
        return (int)10071L;
    }
    public static int WSASYSNOTREADY() {
        return (int)10091L;
    }
    public static int WSAVERNOTSUPPORTED() {
        return (int)10092L;
    }
    public static int WSANOTINITIALISED() {
        return (int)10093L;
    }
    public static int WSAEDISCON() {
        return (int)10101L;
    }
    public static int WSAENOMORE() {
        return (int)10102L;
    }
    public static int WSAECANCELLED() {
        return (int)10103L;
    }
    public static int WSAEINVALIDPROCTABLE() {
        return (int)10104L;
    }
    public static int WSAEINVALIDPROVIDER() {
        return (int)10105L;
    }
    public static int WSAEPROVIDERFAILEDINIT() {
        return (int)10106L;
    }
    public static int WSASYSCALLFAILURE() {
        return (int)10107L;
    }
    public static int WSASERVICE_NOT_FOUND() {
        return (int)10108L;
    }
    public static int WSATYPE_NOT_FOUND() {
        return (int)10109L;
    }
    public static int WSA_E_NO_MORE() {
        return (int)10110L;
    }
    public static int WSA_E_CANCELLED() {
        return (int)10111L;
    }
    public static int WSAEREFUSED() {
        return (int)10112L;
    }
    public static int WSAHOST_NOT_FOUND() {
        return (int)11001L;
    }
    public static int WSATRY_AGAIN() {
        return (int)11002L;
    }
    public static int WSANO_RECOVERY() {
        return (int)11003L;
    }
    public static int WSANO_DATA() {
        return (int)11004L;
    }
    public static int WSA_QOS_RECEIVERS() {
        return (int)11005L;
    }
    public static int WSA_QOS_SENDERS() {
        return (int)11006L;
    }
    public static int WSA_QOS_NO_SENDERS() {
        return (int)11007L;
    }
    public static int WSA_QOS_NO_RECEIVERS() {
        return (int)11008L;
    }
    public static int WSA_QOS_REQUEST_CONFIRMED() {
        return (int)11009L;
    }
    public static int WSA_QOS_ADMISSION_FAILURE() {
        return (int)11010L;
    }
    public static int WSA_QOS_POLICY_FAILURE() {
        return (int)11011L;
    }
    public static int WSA_QOS_BAD_STYLE() {
        return (int)11012L;
    }
    public static int WSA_QOS_BAD_OBJECT() {
        return (int)11013L;
    }
    public static int WSA_QOS_TRAFFIC_CTRL_ERROR() {
        return (int)11014L;
    }
    public static int WSA_QOS_GENERIC_ERROR() {
        return (int)11015L;
    }
    public static int WSA_QOS_ESERVICETYPE() {
        return (int)11016L;
    }
    public static int WSA_QOS_EFLOWSPEC() {
        return (int)11017L;
    }
    public static int WSA_QOS_EPROVSPECBUF() {
        return (int)11018L;
    }
    public static int WSA_QOS_EFILTERSTYLE() {
        return (int)11019L;
    }
    public static int WSA_QOS_EFILTERTYPE() {
        return (int)11020L;
    }
    public static int WSA_QOS_EFILTERCOUNT() {
        return (int)11021L;
    }
    public static int WSA_QOS_EOBJLENGTH() {
        return (int)11022L;
    }
    public static int WSA_QOS_EFLOWCOUNT() {
        return (int)11023L;
    }
    public static int WSA_QOS_EUNKOWNPSOBJ() {
        return (int)11024L;
    }
    public static int WSA_QOS_EPOLICYOBJ() {
        return (int)11025L;
    }
    public static int WSA_QOS_EFLOWDESC() {
        return (int)11026L;
    }
    public static int WSA_QOS_EPSFLOWSPEC() {
        return (int)11027L;
    }
    public static int WSA_QOS_EPSFILTERSPEC() {
        return (int)11028L;
    }
    public static int WSA_QOS_ESDMODEOBJ() {
        return (int)11029L;
    }
    public static int WSA_QOS_ESHAPERATEOBJ() {
        return (int)11030L;
    }
    public static int WSA_QOS_RESERVED_PETYPE() {
        return (int)11031L;
    }
    public static int WSA_SECURE_HOST_NOT_FOUND() {
        return (int)11032L;
    }
    public static int WSA_IPSEC_NAME_POLICY_ERROR() {
        return (int)11033L;
    }
    public static int ERROR_IPSEC_QM_POLICY_EXISTS() {
        return (int)13000L;
    }
    public static int ERROR_IPSEC_QM_POLICY_NOT_FOUND() {
        return (int)13001L;
    }
    public static int ERROR_IPSEC_QM_POLICY_IN_USE() {
        return (int)13002L;
    }
    public static int ERROR_IPSEC_MM_POLICY_EXISTS() {
        return (int)13003L;
    }
    public static int ERROR_IPSEC_MM_POLICY_NOT_FOUND() {
        return (int)13004L;
    }
    public static int ERROR_IPSEC_MM_POLICY_IN_USE() {
        return (int)13005L;
    }
    public static int ERROR_IPSEC_MM_FILTER_EXISTS() {
        return (int)13006L;
    }
    public static int ERROR_IPSEC_MM_FILTER_NOT_FOUND() {
        return (int)13007L;
    }
    public static int ERROR_IPSEC_TRANSPORT_FILTER_EXISTS() {
        return (int)13008L;
    }
    public static int ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND() {
        return (int)13009L;
    }
    public static int ERROR_IPSEC_MM_AUTH_EXISTS() {
        return (int)13010L;
    }
    public static int ERROR_IPSEC_MM_AUTH_NOT_FOUND() {
        return (int)13011L;
    }
    public static int ERROR_IPSEC_MM_AUTH_IN_USE() {
        return (int)13012L;
    }
    public static int ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND() {
        return (int)13013L;
    }
    public static int ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND() {
        return (int)13014L;
    }
    public static int ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND() {
        return (int)13015L;
    }
    public static int ERROR_IPSEC_TUNNEL_FILTER_EXISTS() {
        return (int)13016L;
    }
    public static int ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND() {
        return (int)13017L;
    }
    public static int ERROR_IPSEC_MM_FILTER_PENDING_DELETION() {
        return (int)13018L;
    }
    public static int ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION() {
        return (int)13019L;
    }
    public static int ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION() {
        return (int)13020L;
    }
    public static int ERROR_IPSEC_MM_POLICY_PENDING_DELETION() {
        return (int)13021L;
    }
    public static int ERROR_IPSEC_MM_AUTH_PENDING_DELETION() {
        return (int)13022L;
    }
    public static int ERROR_IPSEC_QM_POLICY_PENDING_DELETION() {
        return (int)13023L;
    }
    public static int WARNING_IPSEC_MM_POLICY_PRUNED() {
        return (int)13024L;
    }
    public static int WARNING_IPSEC_QM_POLICY_PRUNED() {
        return (int)13025L;
    }
    public static int ERROR_IPSEC_IKE_NEG_STATUS_BEGIN() {
        return (int)13800L;
    }
    public static int ERROR_IPSEC_IKE_AUTH_FAIL() {
        return (int)13801L;
    }
    public static int ERROR_IPSEC_IKE_ATTRIB_FAIL() {
        return (int)13802L;
    }
    public static int ERROR_IPSEC_IKE_NEGOTIATION_PENDING() {
        return (int)13803L;
    }
    public static int ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR() {
        return (int)13804L;
    }
    public static int ERROR_IPSEC_IKE_TIMED_OUT() {
        return (int)13805L;
    }
    public static int ERROR_IPSEC_IKE_NO_CERT() {
        return (int)13806L;
    }
    public static int ERROR_IPSEC_IKE_SA_DELETED() {
        return (int)13807L;
    }
    public static int ERROR_IPSEC_IKE_SA_REAPED() {
        return (int)13808L;
    }
    public static int ERROR_IPSEC_IKE_MM_ACQUIRE_DROP() {
        return (int)13809L;
    }
    public static int ERROR_IPSEC_IKE_QM_ACQUIRE_DROP() {
        return (int)13810L;
    }
    public static int ERROR_IPSEC_IKE_QUEUE_DROP_MM() {
        return (int)13811L;
    }
    public static int ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM() {
        return (int)13812L;
    }
    public static int ERROR_IPSEC_IKE_DROP_NO_RESPONSE() {
        return (int)13813L;
    }
    public static int ERROR_IPSEC_IKE_MM_DELAY_DROP() {
        return (int)13814L;
    }
    public static int ERROR_IPSEC_IKE_QM_DELAY_DROP() {
        return (int)13815L;
    }
    public static int ERROR_IPSEC_IKE_ERROR() {
        return (int)13816L;
    }
    public static int ERROR_IPSEC_IKE_CRL_FAILED() {
        return (int)13817L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_KEY_USAGE() {
        return (int)13818L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_CERT_TYPE() {
        return (int)13819L;
    }
    public static int ERROR_IPSEC_IKE_NO_PRIVATE_KEY() {
        return (int)13820L;
    }
    public static int ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY() {
        return (int)13821L;
    }
    public static int ERROR_IPSEC_IKE_DH_FAIL() {
        return (int)13822L;
    }
    public static int ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED() {
        return (int)13823L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_HEADER() {
        return (int)13824L;
    }
    public static int ERROR_IPSEC_IKE_NO_POLICY() {
        return (int)13825L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_SIGNATURE() {
        return (int)13826L;
    }
    public static int ERROR_IPSEC_IKE_KERBEROS_ERROR() {
        return (int)13827L;
    }
    public static int ERROR_IPSEC_IKE_NO_PUBLIC_KEY() {
        return (int)13828L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR() {
        return (int)13829L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_SA() {
        return (int)13830L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_PROP() {
        return (int)13831L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_TRANS() {
        return (int)13832L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_KE() {
        return (int)13833L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_ID() {
        return (int)13834L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_CERT() {
        return (int)13835L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ() {
        return (int)13836L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_HASH() {
        return (int)13837L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_SIG() {
        return (int)13838L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_NONCE() {
        return (int)13839L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY() {
        return (int)13840L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_DELETE() {
        return (int)13841L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR() {
        return (int)13842L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_PAYLOAD() {
        return (int)13843L;
    }
    public static int ERROR_IPSEC_IKE_LOAD_SOFT_SA() {
        return (int)13844L;
    }
    public static int ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN() {
        return (int)13845L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_COOKIE() {
        return (int)13846L;
    }
    public static int ERROR_IPSEC_IKE_NO_PEER_CERT() {
        return (int)13847L;
    }
    public static int ERROR_IPSEC_IKE_PEER_CRL_FAILED() {
        return (int)13848L;
    }
    public static int ERROR_IPSEC_IKE_POLICY_CHANGE() {
        return (int)13849L;
    }
    public static int ERROR_IPSEC_IKE_NO_MM_POLICY() {
        return (int)13850L;
    }
    public static int ERROR_IPSEC_IKE_NOTCBPRIV() {
        return (int)13851L;
    }
    public static int ERROR_IPSEC_IKE_SECLOADFAIL() {
        return (int)13852L;
    }
    public static int ERROR_IPSEC_IKE_FAILSSPINIT() {
        return (int)13853L;
    }
    public static int ERROR_IPSEC_IKE_FAILQUERYSSP() {
        return (int)13854L;
    }
    public static int ERROR_IPSEC_IKE_SRVACQFAIL() {
        return (int)13855L;
    }
    public static int ERROR_IPSEC_IKE_SRVQUERYCRED() {
        return (int)13856L;
    }
    public static int ERROR_IPSEC_IKE_GETSPIFAIL() {
        return (int)13857L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_FILTER() {
        return (int)13858L;
    }
    public static int ERROR_IPSEC_IKE_OUT_OF_MEMORY() {
        return (int)13859L;
    }
    public static int ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED() {
        return (int)13860L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_POLICY() {
        return (int)13861L;
    }
    public static int ERROR_IPSEC_IKE_UNKNOWN_DOI() {
        return (int)13862L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_SITUATION() {
        return (int)13863L;
    }
    public static int ERROR_IPSEC_IKE_DH_FAILURE() {
        return (int)13864L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_GROUP() {
        return (int)13865L;
    }
    public static int ERROR_IPSEC_IKE_ENCRYPT() {
        return (int)13866L;
    }
    public static int ERROR_IPSEC_IKE_DECRYPT() {
        return (int)13867L;
    }
    public static int ERROR_IPSEC_IKE_POLICY_MATCH() {
        return (int)13868L;
    }
    public static int ERROR_IPSEC_IKE_UNSUPPORTED_ID() {
        return (int)13869L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_HASH() {
        return (int)13870L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_HASH_ALG() {
        return (int)13871L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_HASH_SIZE() {
        return (int)13872L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG() {
        return (int)13873L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_AUTH_ALG() {
        return (int)13874L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_SIG() {
        return (int)13875L;
    }
    public static int ERROR_IPSEC_IKE_LOAD_FAILED() {
        return (int)13876L;
    }
    public static int ERROR_IPSEC_IKE_RPC_DELETE() {
        return (int)13877L;
    }
    public static int ERROR_IPSEC_IKE_BENIGN_REINIT() {
        return (int)13878L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY() {
        return (int)13879L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION() {
        return (int)13880L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN() {
        return (int)13881L;
    }
    public static int ERROR_IPSEC_IKE_MM_LIMIT() {
        return (int)13882L;
    }
    public static int ERROR_IPSEC_IKE_NEGOTIATION_DISABLED() {
        return (int)13883L;
    }
    public static int ERROR_IPSEC_IKE_QM_LIMIT() {
        return (int)13884L;
    }
    public static int ERROR_IPSEC_IKE_MM_EXPIRED() {
        return (int)13885L;
    }
    public static int ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID() {
        return (int)13886L;
    }
    public static int ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH() {
        return (int)13887L;
    }
    public static int ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID() {
        return (int)13888L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD() {
        return (int)13889L;
    }
    public static int ERROR_IPSEC_IKE_DOS_COOKIE_SENT() {
        return (int)13890L;
    }
    public static int ERROR_IPSEC_IKE_SHUTTING_DOWN() {
        return (int)13891L;
    }
    public static int ERROR_IPSEC_IKE_CGA_AUTH_FAILED() {
        return (int)13892L;
    }
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_NATOA() {
        return (int)13893L;
    }
    public static int ERROR_IPSEC_IKE_INVALID_MM_FOR_QM() {
        return (int)13894L;
    }
    public static int ERROR_IPSEC_IKE_QM_EXPIRED() {
        return (int)13895L;
    }
    public static int ERROR_IPSEC_IKE_TOO_MANY_FILTERS() {
        return (int)13896L;
    }
    public static int ERROR_IPSEC_IKE_NEG_STATUS_END() {
        return (int)13897L;
    }
    public static int ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL() {
        return (int)13898L;
    }
    public static int ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE() {
        return (int)13899L;
    }
    public static int ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING() {
        return (int)13900L;
    }
    public static int ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING() {
        return (int)13901L;
    }
    public static int ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS() {
        return (int)13902L;
    }
    public static int ERROR_IPSEC_IKE_RATELIMIT_DROP() {
        return (int)13903L;
    }
    public static int ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE() {
        return (int)13904L;
    }
    public static int ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE() {
        return (int)13905L;
    }
    public static int ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE() {
        return (int)13906L;
    }
    public static int ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY() {
        return (int)13907L;
    }
    public static int ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE() {
        return (int)13908L;
    }
    public static int ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END() {
        return (int)13909L;
    }
    public static int ERROR_IPSEC_BAD_SPI() {
        return (int)13910L;
    }
    public static int ERROR_IPSEC_SA_LIFETIME_EXPIRED() {
        return (int)13911L;
    }
    public static int ERROR_IPSEC_WRONG_SA() {
        return (int)13912L;
    }
    public static int ERROR_IPSEC_REPLAY_CHECK_FAILED() {
        return (int)13913L;
    }
    public static int ERROR_IPSEC_INVALID_PACKET() {
        return (int)13914L;
    }
    public static int ERROR_IPSEC_INTEGRITY_CHECK_FAILED() {
        return (int)13915L;
    }
    public static int ERROR_IPSEC_CLEAR_TEXT_DROP() {
        return (int)13916L;
    }
    public static int ERROR_IPSEC_AUTH_FIREWALL_DROP() {
        return (int)13917L;
    }
    public static int ERROR_IPSEC_THROTTLE_DROP() {
        return (int)13918L;
    }
    public static int ERROR_IPSEC_DOSP_BLOCK() {
        return (int)13925L;
    }
    public static int ERROR_IPSEC_DOSP_RECEIVED_MULTICAST() {
        return (int)13926L;
    }
    public static int ERROR_IPSEC_DOSP_INVALID_PACKET() {
        return (int)13927L;
    }
    public static int ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED() {
        return (int)13928L;
    }
    public static int ERROR_IPSEC_DOSP_MAX_ENTRIES() {
        return (int)13929L;
    }
    public static int ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED() {
        return (int)13930L;
    }
    public static int ERROR_IPSEC_DOSP_NOT_INSTALLED() {
        return (int)13931L;
    }
    public static int ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES() {
        return (int)13932L;
    }
    public static int ERROR_SXS_SECTION_NOT_FOUND() {
        return (int)14000L;
    }
    public static int ERROR_SXS_CANT_GEN_ACTCTX() {
        return (int)14001L;
    }
    public static int ERROR_SXS_INVALID_ACTCTXDATA_FORMAT() {
        return (int)14002L;
    }
    public static int ERROR_SXS_ASSEMBLY_NOT_FOUND() {
        return (int)14003L;
    }
    public static int ERROR_SXS_MANIFEST_FORMAT_ERROR() {
        return (int)14004L;
    }
    public static int ERROR_SXS_MANIFEST_PARSE_ERROR() {
        return (int)14005L;
    }
    public static int ERROR_SXS_ACTIVATION_CONTEXT_DISABLED() {
        return (int)14006L;
    }
    public static int ERROR_SXS_KEY_NOT_FOUND() {
        return (int)14007L;
    }
    public static int ERROR_SXS_VERSION_CONFLICT() {
        return (int)14008L;
    }
    public static int ERROR_SXS_WRONG_SECTION_TYPE() {
        return (int)14009L;
    }
    public static int ERROR_SXS_THREAD_QUERIES_DISABLED() {
        return (int)14010L;
    }
    public static int ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET() {
        return (int)14011L;
    }
    public static int ERROR_SXS_UNKNOWN_ENCODING_GROUP() {
        return (int)14012L;
    }
    public static int ERROR_SXS_UNKNOWN_ENCODING() {
        return (int)14013L;
    }
}


