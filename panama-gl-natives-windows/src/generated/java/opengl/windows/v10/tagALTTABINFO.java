// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class tagALTTABINFO {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        Constants$root.C_LONG$LAYOUT.withName("cItems"),
        Constants$root.C_LONG$LAYOUT.withName("cColumns"),
        Constants$root.C_LONG$LAYOUT.withName("cRows"),
        Constants$root.C_LONG$LAYOUT.withName("iColFocus"),
        Constants$root.C_LONG$LAYOUT.withName("iRowFocus"),
        Constants$root.C_LONG$LAYOUT.withName("cxItem"),
        Constants$root.C_LONG$LAYOUT.withName("cyItem"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("x"),
            Constants$root.C_LONG$LAYOUT.withName("y")
        ).withName("ptStart")
    ).withName("tagALTTABINFO");
    public static MemoryLayout $LAYOUT() {
        return tagALTTABINFO.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return tagALTTABINFO.cbSize$VH;
    }
    public static int cbSize$get(MemorySegment seg) {
        return (int)tagALTTABINFO.cbSize$VH.get(seg);
    }
    public static void cbSize$set( MemorySegment seg, int x) {
        tagALTTABINFO.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)tagALTTABINFO.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        tagALTTABINFO.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cItems$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cItems"));
    public static VarHandle cItems$VH() {
        return tagALTTABINFO.cItems$VH;
    }
    public static int cItems$get(MemorySegment seg) {
        return (int)tagALTTABINFO.cItems$VH.get(seg);
    }
    public static void cItems$set( MemorySegment seg, int x) {
        tagALTTABINFO.cItems$VH.set(seg, x);
    }
    public static int cItems$get(MemorySegment seg, long index) {
        return (int)tagALTTABINFO.cItems$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cItems$set(MemorySegment seg, long index, int x) {
        tagALTTABINFO.cItems$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cColumns$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cColumns"));
    public static VarHandle cColumns$VH() {
        return tagALTTABINFO.cColumns$VH;
    }
    public static int cColumns$get(MemorySegment seg) {
        return (int)tagALTTABINFO.cColumns$VH.get(seg);
    }
    public static void cColumns$set( MemorySegment seg, int x) {
        tagALTTABINFO.cColumns$VH.set(seg, x);
    }
    public static int cColumns$get(MemorySegment seg, long index) {
        return (int)tagALTTABINFO.cColumns$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cColumns$set(MemorySegment seg, long index, int x) {
        tagALTTABINFO.cColumns$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cRows$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cRows"));
    public static VarHandle cRows$VH() {
        return tagALTTABINFO.cRows$VH;
    }
    public static int cRows$get(MemorySegment seg) {
        return (int)tagALTTABINFO.cRows$VH.get(seg);
    }
    public static void cRows$set( MemorySegment seg, int x) {
        tagALTTABINFO.cRows$VH.set(seg, x);
    }
    public static int cRows$get(MemorySegment seg, long index) {
        return (int)tagALTTABINFO.cRows$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cRows$set(MemorySegment seg, long index, int x) {
        tagALTTABINFO.cRows$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iColFocus$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iColFocus"));
    public static VarHandle iColFocus$VH() {
        return tagALTTABINFO.iColFocus$VH;
    }
    public static int iColFocus$get(MemorySegment seg) {
        return (int)tagALTTABINFO.iColFocus$VH.get(seg);
    }
    public static void iColFocus$set( MemorySegment seg, int x) {
        tagALTTABINFO.iColFocus$VH.set(seg, x);
    }
    public static int iColFocus$get(MemorySegment seg, long index) {
        return (int)tagALTTABINFO.iColFocus$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iColFocus$set(MemorySegment seg, long index, int x) {
        tagALTTABINFO.iColFocus$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iRowFocus$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iRowFocus"));
    public static VarHandle iRowFocus$VH() {
        return tagALTTABINFO.iRowFocus$VH;
    }
    public static int iRowFocus$get(MemorySegment seg) {
        return (int)tagALTTABINFO.iRowFocus$VH.get(seg);
    }
    public static void iRowFocus$set( MemorySegment seg, int x) {
        tagALTTABINFO.iRowFocus$VH.set(seg, x);
    }
    public static int iRowFocus$get(MemorySegment seg, long index) {
        return (int)tagALTTABINFO.iRowFocus$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iRowFocus$set(MemorySegment seg, long index, int x) {
        tagALTTABINFO.iRowFocus$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cxItem$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cxItem"));
    public static VarHandle cxItem$VH() {
        return tagALTTABINFO.cxItem$VH;
    }
    public static int cxItem$get(MemorySegment seg) {
        return (int)tagALTTABINFO.cxItem$VH.get(seg);
    }
    public static void cxItem$set( MemorySegment seg, int x) {
        tagALTTABINFO.cxItem$VH.set(seg, x);
    }
    public static int cxItem$get(MemorySegment seg, long index) {
        return (int)tagALTTABINFO.cxItem$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cxItem$set(MemorySegment seg, long index, int x) {
        tagALTTABINFO.cxItem$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cyItem$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cyItem"));
    public static VarHandle cyItem$VH() {
        return tagALTTABINFO.cyItem$VH;
    }
    public static int cyItem$get(MemorySegment seg) {
        return (int)tagALTTABINFO.cyItem$VH.get(seg);
    }
    public static void cyItem$set( MemorySegment seg, int x) {
        tagALTTABINFO.cyItem$VH.set(seg, x);
    }
    public static int cyItem$get(MemorySegment seg, long index) {
        return (int)tagALTTABINFO.cyItem$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cyItem$set(MemorySegment seg, long index, int x) {
        tagALTTABINFO.cyItem$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ptStart$slice(MemorySegment seg) {
        return seg.asSlice(32, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.nativeAllocator(scope)); }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.nativeAllocator(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


