// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class _TRANSACTION_ENLISTMENTS_INFORMATION {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("NumberOfEnlistments"),
        MemoryLayout.sequenceLayout(1, MemoryLayout.structLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Data1"),
                Constants$root.C_SHORT$LAYOUT.withName("Data2"),
                Constants$root.C_SHORT$LAYOUT.withName("Data3"),
                MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
            ).withName("EnlistmentId"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Data1"),
                Constants$root.C_SHORT$LAYOUT.withName("Data2"),
                Constants$root.C_SHORT$LAYOUT.withName("Data3"),
                MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
            ).withName("ResourceManagerId")
        ).withName("_TRANSACTION_ENLISTMENT_PAIR")).withName("EnlistmentPair")
    ).withName("_TRANSACTION_ENLISTMENTS_INFORMATION");
    public static MemoryLayout $LAYOUT() {
        return _TRANSACTION_ENLISTMENTS_INFORMATION.$struct$LAYOUT;
    }
    static final VarHandle NumberOfEnlistments$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("NumberOfEnlistments"));
    public static VarHandle NumberOfEnlistments$VH() {
        return _TRANSACTION_ENLISTMENTS_INFORMATION.NumberOfEnlistments$VH;
    }
    public static int NumberOfEnlistments$get(MemorySegment seg) {
        return (int)_TRANSACTION_ENLISTMENTS_INFORMATION.NumberOfEnlistments$VH.get(seg);
    }
    public static void NumberOfEnlistments$set( MemorySegment seg, int x) {
        _TRANSACTION_ENLISTMENTS_INFORMATION.NumberOfEnlistments$VH.set(seg, x);
    }
    public static int NumberOfEnlistments$get(MemorySegment seg, long index) {
        return (int)_TRANSACTION_ENLISTMENTS_INFORMATION.NumberOfEnlistments$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void NumberOfEnlistments$set(MemorySegment seg, long index, int x) {
        _TRANSACTION_ENLISTMENTS_INFORMATION.NumberOfEnlistments$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment EnlistmentPair$slice(MemorySegment seg) {
        return seg.asSlice(4, 32);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.nativeAllocator(scope)); }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.nativeAllocator(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


