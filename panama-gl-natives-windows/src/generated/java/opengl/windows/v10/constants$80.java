// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$80 {

    static final  GroupLayout GUID_DISK_SUBGROUP$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_SUBGROUP$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_DISK_SUBGROUP", constants$80.GUID_DISK_SUBGROUP$LAYOUT);
    static final  GroupLayout GUID_DISK_MAX_POWER$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_MAX_POWER$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_DISK_MAX_POWER", constants$80.GUID_DISK_MAX_POWER$LAYOUT);
    static final  GroupLayout GUID_DISK_POWERDOWN_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_POWERDOWN_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_DISK_POWERDOWN_TIMEOUT", constants$80.GUID_DISK_POWERDOWN_TIMEOUT$LAYOUT);
    static final  GroupLayout GUID_DISK_IDLE_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_IDLE_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_DISK_IDLE_TIMEOUT", constants$80.GUID_DISK_IDLE_TIMEOUT$LAYOUT);
    static final  GroupLayout GUID_DISK_BURST_IGNORE_THRESHOLD$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_BURST_IGNORE_THRESHOLD$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_DISK_BURST_IGNORE_THRESHOLD", constants$80.GUID_DISK_BURST_IGNORE_THRESHOLD$LAYOUT);
    static final  GroupLayout GUID_DISK_ADAPTIVE_POWERDOWN$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_ADAPTIVE_POWERDOWN$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_DISK_ADAPTIVE_POWERDOWN", constants$80.GUID_DISK_ADAPTIVE_POWERDOWN$LAYOUT);
}


