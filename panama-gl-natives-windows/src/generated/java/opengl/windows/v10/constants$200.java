// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$200 {

    static final FunctionDescriptor VirtualAllocEx$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle VirtualAllocEx$MH = RuntimeHelper.downcallHandle(
        "VirtualAllocEx",
        constants$200.VirtualAllocEx$FUNC, false
    );
    static final FunctionDescriptor VirtualProtectEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VirtualProtectEx$MH = RuntimeHelper.downcallHandle(
        "VirtualProtectEx",
        constants$200.VirtualProtectEx$FUNC, false
    );
    static final FunctionDescriptor VirtualQueryEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle VirtualQueryEx$MH = RuntimeHelper.downcallHandle(
        "VirtualQueryEx",
        constants$200.VirtualQueryEx$FUNC, false
    );
    static final FunctionDescriptor ReadProcessMemory$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadProcessMemory$MH = RuntimeHelper.downcallHandle(
        "ReadProcessMemory",
        constants$200.ReadProcessMemory$FUNC, false
    );
    static final FunctionDescriptor WriteProcessMemory$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WriteProcessMemory$MH = RuntimeHelper.downcallHandle(
        "WriteProcessMemory",
        constants$200.WriteProcessMemory$FUNC, false
    );
    static final FunctionDescriptor CreateFileMappingW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateFileMappingW$MH = RuntimeHelper.downcallHandle(
        "CreateFileMappingW",
        constants$200.CreateFileMappingW$FUNC, false
    );
}


