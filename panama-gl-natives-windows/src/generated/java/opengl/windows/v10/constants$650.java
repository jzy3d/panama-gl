// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$650 {

    static final FunctionDescriptor glGetBooleanv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetBooleanv$MH = RuntimeHelper.downcallHandle(
        "glGetBooleanv",
        constants$650.glGetBooleanv$FUNC, false
    );
    static final FunctionDescriptor glGetClipPlane$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetClipPlane$MH = RuntimeHelper.downcallHandle(
        "glGetClipPlane",
        constants$650.glGetClipPlane$FUNC, false
    );
    static final FunctionDescriptor glGetDoublev$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetDoublev$MH = RuntimeHelper.downcallHandle(
        "glGetDoublev",
        constants$650.glGetDoublev$FUNC, false
    );
    static final FunctionDescriptor glGetError$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle glGetError$MH = RuntimeHelper.downcallHandle(
        "glGetError",
        constants$650.glGetError$FUNC, false
    );
    static final FunctionDescriptor glGetFloatv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetFloatv$MH = RuntimeHelper.downcallHandle(
        "glGetFloatv",
        constants$650.glGetFloatv$FUNC, false
    );
    static final FunctionDescriptor glGetIntegerv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetIntegerv$MH = RuntimeHelper.downcallHandle(
        "glGetIntegerv",
        constants$650.glGetIntegerv$FUNC, false
    );
}


