// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$205 {

    static final FunctionDescriptor MapUserPhysicalPages$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle MapUserPhysicalPages$MH = RuntimeHelper.downcallHandle(
        "MapUserPhysicalPages",
        constants$205.MapUserPhysicalPages$FUNC, false
    );
    static final FunctionDescriptor AllocateUserPhysicalPagesNuma$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle AllocateUserPhysicalPagesNuma$MH = RuntimeHelper.downcallHandle(
        "AllocateUserPhysicalPagesNuma",
        constants$205.AllocateUserPhysicalPagesNuma$FUNC, false
    );
    static final FunctionDescriptor VirtualAllocExNuma$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle VirtualAllocExNuma$MH = RuntimeHelper.downcallHandle(
        "VirtualAllocExNuma",
        constants$205.VirtualAllocExNuma$FUNC, false
    );
    static final FunctionDescriptor GetMemoryErrorHandlingCapabilities$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetMemoryErrorHandlingCapabilities$MH = RuntimeHelper.downcallHandle(
        "GetMemoryErrorHandlingCapabilities",
        constants$205.GetMemoryErrorHandlingCapabilities$FUNC, false
    );
    static final FunctionDescriptor BAD_MEMORY_CALLBACK_ROUTINE$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle BAD_MEMORY_CALLBACK_ROUTINE$MH = RuntimeHelper.downcallHandle(
        constants$205.BAD_MEMORY_CALLBACK_ROUTINE$FUNC, false
    );
}


