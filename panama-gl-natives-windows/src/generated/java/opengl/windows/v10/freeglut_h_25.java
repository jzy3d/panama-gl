// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class freeglut_h_25 extends freeglut_h_24 {

    public static int SC_GROUP_IDENTIFIERA() {
        return (int)43L;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASE() {
        return constants$823.SERVICES_ACTIVE_DATABASE$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASE() {
        return constants$823.SERVICES_FAILED_DATABASE$SEGMENT;
    }
    public static int SC_GROUP_IDENTIFIER() {
        return (int)43L;
    }
    public static int SERVICE_NO_CHANGE() {
        return (int)4294967295L;
    }
    public static int SERVICE_STATE_ALL() {
        return (int)3L;
    }
    public static int SC_MANAGER_ALL_ACCESS() {
        return (int)983103L;
    }
    public static int SERVICE_ALL_ACCESS() {
        return (int)983551L;
    }
    public static int SERVICE_NOTIFY_STATUS_CHANGE() {
        return (int)2L;
    }
    public static int SERVICE_STOP_REASON_FLAG_MAX() {
        return (int)2147483648L;
    }
    public static int SERVICE_SID_TYPE_RESTRICTED() {
        return (int)3L;
    }
    public static MemorySegment SERVICE_TRIGGER_STARTED_ARGUMENT() {
        return constants$823.SERVICE_TRIGGER_STARTED_ARGUMENT$SEGMENT;
    }
    public static MemorySegment SC_AGGREGATE_STORAGE_KEY() {
        return constants$823.SC_AGGREGATE_STORAGE_KEY$SEGMENT;
    }
    public static int MDM_MASK_PROTOCOLINFO() {
        return (int)268369920L;
    }
    public static int MDM_SHIFT_PROTOCOLINFO() {
        return (int)16L;
    }
    public static int MDM_MASK_EXTENDEDINFO() {
        return (int)268431360L;
    }
    public static int MDM_SHIFT_EXTENDEDINFO() {
        return (int)12L;
    }
    public static int MDM_MASK_HDLCPPP_AUTH() {
        return (int)56L;
    }
    public static int MDM_MASK_HDLCPPP_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_64K() {
        return (int)1114112L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_56K() {
        return (int)2162688L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K() {
        return (int)136380416L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_PAP() {
        return (int)153157632L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_CHAP() {
        return (int)161546240L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_MSCHAP() {
        return (int)169934848L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K() {
        return (int)135331840L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_PAP() {
        return (int)152109056L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_CHAP() {
        return (int)160497664L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_MSCHAP() {
        return (int)168886272L;
    }
    public static int MDM_MASK_V120_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_V120_64K() {
        return (int)68485120L;
    }
    public static int MDM_PROTOCOL_V120_56K() {
        return (int)69533696L;
    }
    public static int MDM_PROTOCOL_V120_112K() {
        return (int)136642560L;
    }
    public static int MDM_PROTOCOL_V120_128K() {
        return (int)135593984L;
    }
    public static int MDM_PROTOCOL_X75_64K() {
        return (int)1245184L;
    }
    public static int MDM_PROTOCOL_X75_128K() {
        return (int)2293760L;
    }
    public static int MDM_PROTOCOL_X75_T_70() {
        return (int)3342336L;
    }
    public static int MDM_PROTOCOL_X75_BTX() {
        return (int)4390912L;
    }
    public static int MDM_PROTOCOL_V110_1DOT2K() {
        return (int)1310720L;
    }
    public static int MDM_PROTOCOL_V110_2DOT4K() {
        return (int)2359296L;
    }
    public static int MDM_PROTOCOL_V110_4DOT8K() {
        return (int)3407872L;
    }
    public static int MDM_PROTOCOL_V110_9DOT6K() {
        return (int)4456448L;
    }
    public static int MDM_PROTOCOL_V110_12DOT0K() {
        return (int)5505024L;
    }
    public static int MDM_PROTOCOL_V110_14DOT4K() {
        return (int)6553600L;
    }
    public static int MDM_PROTOCOL_V110_19DOT2K() {
        return (int)7602176L;
    }
    public static int MDM_PROTOCOL_V110_28DOT8K() {
        return (int)8650752L;
    }
    public static int MDM_PROTOCOL_V110_38DOT4K() {
        return (int)9699328L;
    }
    public static int MDM_PROTOCOL_V110_57DOT6K() {
        return (int)10747904L;
    }
    public static int MDM_MASK_AUTO_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_AUTO_1CH() {
        return (int)67502080L;
    }
    public static int MDM_PROTOCOL_AUTO_2CH() {
        return (int)134610944L;
    }
    public static int MDM_PROTOCOL_ANALOG_RLP() {
        return (int)458752L;
    }
    public static int MDM_PROTOCOL_ANALOG_NRLP() {
        return (int)1507328L;
    }
    public static int MDM_PROTOCOL_ANALOG_V34() {
        return (int)2555904L;
    }
    public static int MDM_PROTOCOL_GPRS() {
        return (int)524288L;
    }
    public static int MDM_PROTOCOL_PIAFS_INCOMING() {
        return (int)589824L;
    }
    public static int MDM_PROTOCOL_PIAFS_OUTGOING() {
        return (int)1638400L;
    }
    public static int ISC_SHOWUICOMPOSITIONWINDOW() {
        return (int)2147483648L;
    }
    public static int ISC_SHOWUIALL() {
        return (int)3221225487L;
    }
    public static int IGP_GETIMEVERSION() {
        return (int)4294967292L;
    }
    public static int SCS_SETSTR() {
        return (int)9L;
    }
    public static int SCS_CHANGEATTR() {
        return (int)18L;
    }
    public static int SCS_CHANGECLAUSE() {
        return (int)36L;
    }
    public static int IME_CMODE_CHINESE() {
        return (int)1L;
    }
    public static int IME_CMODE_HANGUL() {
        return (int)1L;
    }
    public static int IME_CMODE_JAPANESE() {
        return (int)1L;
    }
    public static int IME_CMODE_HANGEUL() {
        return (int)1L;
    }
    public static int IME_CMODE_RESERVED() {
        return (int)4026531840L;
    }
    public static int IMM_ERROR_NODATA() {
        return (int)-1L;
    }
    public static int IMM_ERROR_GENERAL() {
        return (int)-2L;
    }
    public static int IME_REGWORD_STYLE_USER_FIRST() {
        return (int)2147483648L;
    }
    public static int IME_REGWORD_STYLE_USER_LAST() {
        return (int)4294967295L;
    }
    public static int IMFS_GRAYED() {
        return (int)3L;
    }
    public static int IMFS_DISABLED() {
        return (int)3L;
    }
    public static int IMFS_CHECKED() {
        return (int)8L;
    }
    public static int IMFS_HILITE() {
        return (int)128L;
    }
    public static int IMFS_ENABLED() {
        return (int)0L;
    }
    public static int IMFS_UNCHECKED() {
        return (int)0L;
    }
    public static int IMFS_UNHILITE() {
        return (int)0L;
    }
    public static int IMFS_DEFAULT() {
        return (int)4096L;
    }
    public static int GL_CLIENT_ALL_ATTRIB_BITS() {
        return (int)4294967295L;
    }
    public static int GL_DOUBLE_EXT() {
        return (int)5130L;
    }
    public static int GL_LOGIC_OP() {
        return (int)3057L;
    }
    public static int GL_TEXTURE_COMPONENTS() {
        return (int)4099L;
    }
    public static int GLU_TRUE() {
        return (int)1L;
    }
    public static int GLU_FALSE() {
        return (int)0L;
    }
    public static double GLU_TESS_MAX_COORD() {
        return 1.0E150d;
    }
    public static int GLU_TESS_MISSING_BEGIN_POLYGON() {
        return (int)100151L;
    }
    public static int GLU_TESS_MISSING_BEGIN_CONTOUR() {
        return (int)100152L;
    }
    public static int GLU_TESS_MISSING_END_POLYGON() {
        return (int)100153L;
    }
    public static int GLU_TESS_MISSING_END_CONTOUR() {
        return (int)100154L;
    }
    public static int GLU_TESS_COORD_TOO_LARGE() {
        return (int)100155L;
    }
    public static int GLU_TESS_NEED_COMBINE_CALLBACK() {
        return (int)100156L;
    }
    public static int GLU_BEGIN() {
        return (int)100100L;
    }
    public static int GLU_VERTEX() {
        return (int)100101L;
    }
    public static int GLU_END() {
        return (int)100102L;
    }
    public static int GLU_ERROR() {
        return (int)100103L;
    }
    public static int GLU_EDGE_FLAG() {
        return (int)100104L;
    }
    public static MemoryAddress GLUT_STROKE_ROMAN() {
        return constants$823.GLUT_STROKE_ROMAN$ADDR;
    }
    public static MemoryAddress GLUT_STROKE_MONO_ROMAN() {
        return constants$824.GLUT_STROKE_MONO_ROMAN$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_9_BY_15() {
        return constants$824.GLUT_BITMAP_9_BY_15$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_8_BY_13() {
        return constants$824.GLUT_BITMAP_8_BY_13$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_TIMES_ROMAN_10() {
        return constants$824.GLUT_BITMAP_TIMES_ROMAN_10$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_TIMES_ROMAN_24() {
        return constants$824.GLUT_BITMAP_TIMES_ROMAN_24$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_HELVETICA_10() {
        return constants$824.GLUT_BITMAP_HELVETICA_10$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_HELVETICA_12() {
        return constants$825.GLUT_BITMAP_HELVETICA_12$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_HELVETICA_18() {
        return constants$825.GLUT_BITMAP_HELVETICA_18$ADDR;
    }
    public static int _MAX_ITOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_ITOSTR_BASE10_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ITOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ITOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_LTOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_LTOSTR_BASE10_COUNT() {
        return (int)12L;
    }
    public static int _MAX_LTOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_LTOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_ULTOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_ULTOSTR_BASE10_COUNT() {
        return (int)11L;
    }
    public static int _MAX_ULTOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ULTOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_I64TOSTR_BASE16_COUNT() {
        return (int)17L;
    }
    public static int _MAX_I64TOSTR_BASE10_COUNT() {
        return (int)21L;
    }
    public static int _MAX_I64TOSTR_BASE8_COUNT() {
        return (int)23L;
    }
    public static int _MAX_I64TOSTR_BASE2_COUNT() {
        return (int)65L;
    }
    public static int _MAX_U64TOSTR_BASE16_COUNT() {
        return (int)17L;
    }
    public static int _MAX_U64TOSTR_BASE10_COUNT() {
        return (int)21L;
    }
    public static int _MAX_U64TOSTR_BASE8_COUNT() {
        return (int)23L;
    }
    public static int _MAX_U64TOSTR_BASE2_COUNT() {
        return (int)65L;
    }
    public static int SCHAR_MIN() {
        return (int)-128L;
    }
    public static int CHAR_MIN() {
        return (int)-128L;
    }
    public static int CHAR_MAX() {
        return (int)127L;
    }
    public static int SHRT_MIN() {
        return (int)-32768L;
    }
    public static int INT_MIN() {
        return (int)-2147483648L;
    }
    public static int UINT_MAX() {
        return (int)4294967295L;
    }
    public static int LONG_MIN() {
        return (int)-2147483648L;
    }
    public static int LONG_MAX() {
        return (int)2147483647L;
    }
    public static int ULONG_MAX() {
        return (int)4294967295L;
    }
    public static long LLONG_MAX() {
        return 9223372036854775807L;
    }
    public static long LLONG_MIN() {
        return -9223372036854775808L;
    }
    public static long ULLONG_MAX() {
        return -1L;
    }
    public static int _I8_MIN() {
        return (int)-128L;
    }
    public static byte _I8_MAX() {
        return (byte)127L;
    }
    public static byte _UI8_MAX() {
        return (byte)255L;
    }
    public static int _I16_MIN() {
        return (int)-32768L;
    }
    public static short _I16_MAX() {
        return (short)32767L;
    }
    public static short _UI16_MAX() {
        return (short)65535L;
    }
    public static int _I32_MIN() {
        return (int)-2147483648L;
    }
    public static int _I32_MAX() {
        return (int)2147483647L;
    }
    public static int _UI32_MAX() {
        return (int)4294967295L;
    }
    public static long _I64_MIN() {
        return -9223372036854775808L;
    }
    public static long _I64_MAX() {
        return 9223372036854775807L;
    }
    public static long _UI64_MAX() {
        return -1L;
    }
    public static long SIZE_MAX() {
        return -1L;
    }
    public static long RSIZE_MAX() {
        return 9223372036854775807L;
    }
    public static long LONG_LONG_MAX() {
        return 9223372036854775807L;
    }
    public static long LONG_LONG_MIN() {
        return -9223372036854775808L;
    }
    public static long ULONG_LONG_MAX() {
        return -1L;
    }
    public static int _CVTBUFSIZE() {
        return (int)349L;
    }
}


