// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$101 {

    static final  GroupLayout GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD", constants$101.GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$LAYOUT);
    static final  GroupLayout GUID_PROCESSOR_CLASS0_FLOOR_PERF$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_CLASS0_FLOOR_PERF$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_CLASS0_FLOOR_PERF", constants$101.GUID_PROCESSOR_CLASS0_FLOOR_PERF$LAYOUT);
    static final  GroupLayout GUID_PROCESSOR_CLASS1_INITIAL_PERF$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_CLASS1_INITIAL_PERF$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_CLASS1_INITIAL_PERF", constants$101.GUID_PROCESSOR_CLASS1_INITIAL_PERF$LAYOUT);
    static final  GroupLayout GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_THREAD_SCHEDULING_POLICY", constants$101.GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$LAYOUT);
    static final  GroupLayout GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY", constants$101.GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$LAYOUT);
    static final  GroupLayout GUID_SYSTEM_COOLING_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_SYSTEM_COOLING_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_SYSTEM_COOLING_POLICY", constants$101.GUID_SYSTEM_COOLING_POLICY$LAYOUT);
}


