// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$413 {

    static final FunctionDescriptor DESKTOPENUMPROC$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle DESKTOPENUMPROC$MH = RuntimeHelper.downcallHandle(
        constants$413.DESKTOPENUMPROC$FUNC, false
    );
    static final FunctionDescriptor wvsprintfA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wvsprintfA$MH = RuntimeHelper.downcallHandle(
        "wvsprintfA",
        constants$413.wvsprintfA$FUNC, false
    );
    static final FunctionDescriptor wvsprintfW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wvsprintfW$MH = RuntimeHelper.downcallHandle(
        "wvsprintfW",
        constants$413.wvsprintfW$FUNC, false
    );
    static final FunctionDescriptor wsprintfA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wsprintfA$MH = RuntimeHelper.downcallHandle(
        "wsprintfA",
        constants$413.wsprintfA$FUNC, true
    );
    static final FunctionDescriptor wsprintfW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wsprintfW$MH = RuntimeHelper.downcallHandle(
        "wsprintfW",
        constants$413.wsprintfW$FUNC, true
    );
}


