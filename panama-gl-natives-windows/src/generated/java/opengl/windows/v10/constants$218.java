// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$218 {

    static final FunctionDescriptor CancelThreadpoolIo$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CancelThreadpoolIo$MH = RuntimeHelper.downcallHandle(
        "CancelThreadpoolIo",
        constants$218.CancelThreadpoolIo$FUNC, false
    );
    static final FunctionDescriptor WaitForThreadpoolIoCallbacks$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WaitForThreadpoolIoCallbacks$MH = RuntimeHelper.downcallHandle(
        "WaitForThreadpoolIoCallbacks",
        constants$218.WaitForThreadpoolIoCallbacks$FUNC, false
    );
    static final FunctionDescriptor CloseThreadpoolIo$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CloseThreadpoolIo$MH = RuntimeHelper.downcallHandle(
        "CloseThreadpoolIo",
        constants$218.CloseThreadpoolIo$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolTimerEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetThreadpoolTimerEx$MH = RuntimeHelper.downcallHandle(
        "SetThreadpoolTimerEx",
        constants$218.SetThreadpoolTimerEx$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolWaitEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetThreadpoolWaitEx$MH = RuntimeHelper.downcallHandle(
        "SetThreadpoolWaitEx",
        constants$218.SetThreadpoolWaitEx$FUNC, false
    );
    static final FunctionDescriptor IsProcessInJob$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsProcessInJob$MH = RuntimeHelper.downcallHandle(
        "IsProcessInJob",
        constants$218.IsProcessInJob$FUNC, false
    );
}


