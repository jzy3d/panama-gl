// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$242 {

    static final FunctionDescriptor ImpersonateSelf$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle ImpersonateSelf$MH = RuntimeHelper.downcallHandle(
        "ImpersonateSelf",
        constants$242.ImpersonateSelf$FUNC, false
    );
    static final FunctionDescriptor InitializeAcl$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle InitializeAcl$MH = RuntimeHelper.downcallHandle(
        "InitializeAcl",
        constants$242.InitializeAcl$FUNC, false
    );
    static final FunctionDescriptor InitializeSecurityDescriptor$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle InitializeSecurityDescriptor$MH = RuntimeHelper.downcallHandle(
        "InitializeSecurityDescriptor",
        constants$242.InitializeSecurityDescriptor$FUNC, false
    );
    static final FunctionDescriptor InitializeSid$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_CHAR$LAYOUT
    );
    static final MethodHandle InitializeSid$MH = RuntimeHelper.downcallHandle(
        "InitializeSid",
        constants$242.InitializeSid$FUNC, false
    );
    static final FunctionDescriptor IsTokenRestricted$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsTokenRestricted$MH = RuntimeHelper.downcallHandle(
        "IsTokenRestricted",
        constants$242.IsTokenRestricted$FUNC, false
    );
    static final FunctionDescriptor IsValidAcl$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsValidAcl$MH = RuntimeHelper.downcallHandle(
        "IsValidAcl",
        constants$242.IsValidAcl$FUNC, false
    );
}


