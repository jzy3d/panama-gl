// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$61 {

    static final FunctionDescriptor __incgsword$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle __incgsword$MH = RuntimeHelper.downcallHandle(
        "__incgsword",
        constants$61.__incgsword$FUNC, false
    );
    static final FunctionDescriptor __addgsword$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle __addgsword$MH = RuntimeHelper.downcallHandle(
        "__addgsword",
        constants$61.__addgsword$FUNC, false
    );
    static final FunctionDescriptor __incgsdword$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle __incgsdword$MH = RuntimeHelper.downcallHandle(
        "__incgsdword",
        constants$61.__incgsdword$FUNC, false
    );
    static final FunctionDescriptor __addgsdword$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle __addgsdword$MH = RuntimeHelper.downcallHandle(
        "__addgsdword",
        constants$61.__addgsdword$FUNC, false
    );
    static final FunctionDescriptor __incgsqword$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle __incgsqword$MH = RuntimeHelper.downcallHandle(
        "__incgsqword",
        constants$61.__incgsqword$FUNC, false
    );
    static final FunctionDescriptor __addgsqword$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle __addgsqword$MH = RuntimeHelper.downcallHandle(
        "__addgsqword",
        constants$61.__addgsqword$FUNC, false
    );
}


