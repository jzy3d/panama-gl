// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$25 {

    static final FunctionDescriptor wcsncat_s$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle wcsncat_s$MH = RuntimeHelper.downcallHandle(
        "wcsncat_s",
        constants$25.wcsncat_s$FUNC, false
    );
    static final FunctionDescriptor wcsncpy_s$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle wcsncpy_s$MH = RuntimeHelper.downcallHandle(
        "wcsncpy_s",
        constants$25.wcsncpy_s$FUNC, false
    );
    static final FunctionDescriptor wcstok_s$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcstok_s$MH = RuntimeHelper.downcallHandle(
        "wcstok_s",
        constants$25.wcstok_s$FUNC, false
    );
    static final FunctionDescriptor _wcsdup$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _wcsdup$MH = RuntimeHelper.downcallHandle(
        "_wcsdup",
        constants$25._wcsdup$FUNC, false
    );
    static final FunctionDescriptor wcscat$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcscat$MH = RuntimeHelper.downcallHandle(
        "wcscat",
        constants$25.wcscat$FUNC, false
    );
    static final FunctionDescriptor wcscmp$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcscmp$MH = RuntimeHelper.downcallHandle(
        "wcscmp",
        constants$25.wcscmp$FUNC, false
    );
}


