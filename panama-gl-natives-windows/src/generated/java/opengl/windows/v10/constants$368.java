// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$368 {

    static final FunctionDescriptor GetViewportOrgEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetViewportOrgEx$MH = RuntimeHelper.downcallHandle(
        "GetViewportOrgEx",
        constants$368.GetViewportOrgEx$FUNC, false
    );
    static final FunctionDescriptor GetWindowExtEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetWindowExtEx$MH = RuntimeHelper.downcallHandle(
        "GetWindowExtEx",
        constants$368.GetWindowExtEx$FUNC, false
    );
    static final FunctionDescriptor GetWindowOrgEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetWindowOrgEx$MH = RuntimeHelper.downcallHandle(
        "GetWindowOrgEx",
        constants$368.GetWindowOrgEx$FUNC, false
    );
    static final FunctionDescriptor IntersectClipRect$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle IntersectClipRect$MH = RuntimeHelper.downcallHandle(
        "IntersectClipRect",
        constants$368.IntersectClipRect$FUNC, false
    );
    static final FunctionDescriptor InvertRgn$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle InvertRgn$MH = RuntimeHelper.downcallHandle(
        "InvertRgn",
        constants$368.InvertRgn$FUNC, false
    );
    static final FunctionDescriptor LineDDA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle LineDDA$MH = RuntimeHelper.downcallHandle(
        "LineDDA",
        constants$368.LineDDA$FUNC, false
    );
}


