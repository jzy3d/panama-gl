// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$54 {

    static final FunctionDescriptor _mm_clflush$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _mm_clflush$MH = RuntimeHelper.downcallHandle(
        "_mm_clflush",
        constants$54._mm_clflush$FUNC, false
    );
    static final FunctionDescriptor _ReadWriteBarrier$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _ReadWriteBarrier$MH = RuntimeHelper.downcallHandle(
        "_ReadWriteBarrier",
        constants$54._ReadWriteBarrier$FUNC, false
    );
    static final FunctionDescriptor __faststorefence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle __faststorefence$MH = RuntimeHelper.downcallHandle(
        "__faststorefence",
        constants$54.__faststorefence$FUNC, false
    );
    static final FunctionDescriptor _mm_lfence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _mm_lfence$MH = RuntimeHelper.downcallHandle(
        "_mm_lfence",
        constants$54._mm_lfence$FUNC, false
    );
    static final FunctionDescriptor _mm_mfence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _mm_mfence$MH = RuntimeHelper.downcallHandle(
        "_mm_mfence",
        constants$54._mm_mfence$FUNC, false
    );
    static final FunctionDescriptor _mm_sfence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _mm_sfence$MH = RuntimeHelper.downcallHandle(
        "_mm_sfence",
        constants$54._mm_sfence$FUNC, false
    );
}


