// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class _KNONVOLATILE_CONTEXT_POINTERS_ARM64 {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("X19"),
        Constants$root.C_POINTER$LAYOUT.withName("X20"),
        Constants$root.C_POINTER$LAYOUT.withName("X21"),
        Constants$root.C_POINTER$LAYOUT.withName("X22"),
        Constants$root.C_POINTER$LAYOUT.withName("X23"),
        Constants$root.C_POINTER$LAYOUT.withName("X24"),
        Constants$root.C_POINTER$LAYOUT.withName("X25"),
        Constants$root.C_POINTER$LAYOUT.withName("X26"),
        Constants$root.C_POINTER$LAYOUT.withName("X27"),
        Constants$root.C_POINTER$LAYOUT.withName("X28"),
        Constants$root.C_POINTER$LAYOUT.withName("Fp"),
        Constants$root.C_POINTER$LAYOUT.withName("Lr"),
        Constants$root.C_POINTER$LAYOUT.withName("D8"),
        Constants$root.C_POINTER$LAYOUT.withName("D9"),
        Constants$root.C_POINTER$LAYOUT.withName("D10"),
        Constants$root.C_POINTER$LAYOUT.withName("D11"),
        Constants$root.C_POINTER$LAYOUT.withName("D12"),
        Constants$root.C_POINTER$LAYOUT.withName("D13"),
        Constants$root.C_POINTER$LAYOUT.withName("D14"),
        Constants$root.C_POINTER$LAYOUT.withName("D15")
    ).withName("_KNONVOLATILE_CONTEXT_POINTERS_ARM64");
    public static MemoryLayout $LAYOUT() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.$struct$LAYOUT;
    }
    static final VarHandle X19$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X19"));
    public static VarHandle X19$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X19$VH;
    }
    public static MemoryAddress X19$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X19$VH.get(seg);
    }
    public static void X19$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X19$VH.set(seg, x);
    }
    public static MemoryAddress X19$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X19$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X19$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X19$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X20$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X20"));
    public static VarHandle X20$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X20$VH;
    }
    public static MemoryAddress X20$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X20$VH.get(seg);
    }
    public static void X20$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X20$VH.set(seg, x);
    }
    public static MemoryAddress X20$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X20$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X20$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X20$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X21$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X21"));
    public static VarHandle X21$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X21$VH;
    }
    public static MemoryAddress X21$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X21$VH.get(seg);
    }
    public static void X21$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X21$VH.set(seg, x);
    }
    public static MemoryAddress X21$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X21$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X21$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X21$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X22$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X22"));
    public static VarHandle X22$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X22$VH;
    }
    public static MemoryAddress X22$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X22$VH.get(seg);
    }
    public static void X22$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X22$VH.set(seg, x);
    }
    public static MemoryAddress X22$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X22$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X22$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X22$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X23$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X23"));
    public static VarHandle X23$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X23$VH;
    }
    public static MemoryAddress X23$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X23$VH.get(seg);
    }
    public static void X23$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X23$VH.set(seg, x);
    }
    public static MemoryAddress X23$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X23$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X23$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X23$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X24$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X24"));
    public static VarHandle X24$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X24$VH;
    }
    public static MemoryAddress X24$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X24$VH.get(seg);
    }
    public static void X24$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X24$VH.set(seg, x);
    }
    public static MemoryAddress X24$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X24$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X24$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X24$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X25$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X25"));
    public static VarHandle X25$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X25$VH;
    }
    public static MemoryAddress X25$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X25$VH.get(seg);
    }
    public static void X25$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X25$VH.set(seg, x);
    }
    public static MemoryAddress X25$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X25$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X25$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X25$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X26$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X26"));
    public static VarHandle X26$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X26$VH;
    }
    public static MemoryAddress X26$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X26$VH.get(seg);
    }
    public static void X26$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X26$VH.set(seg, x);
    }
    public static MemoryAddress X26$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X26$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X26$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X26$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X27$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X27"));
    public static VarHandle X27$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X27$VH;
    }
    public static MemoryAddress X27$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X27$VH.get(seg);
    }
    public static void X27$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X27$VH.set(seg, x);
    }
    public static MemoryAddress X27$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X27$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X27$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X27$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X28$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("X28"));
    public static VarHandle X28$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X28$VH;
    }
    public static MemoryAddress X28$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X28$VH.get(seg);
    }
    public static void X28$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X28$VH.set(seg, x);
    }
    public static MemoryAddress X28$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.X28$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X28$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.X28$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Fp$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Fp"));
    public static VarHandle Fp$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.Fp$VH;
    }
    public static MemoryAddress Fp$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.Fp$VH.get(seg);
    }
    public static void Fp$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.Fp$VH.set(seg, x);
    }
    public static MemoryAddress Fp$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.Fp$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Fp$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.Fp$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Lr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Lr"));
    public static VarHandle Lr$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.Lr$VH;
    }
    public static MemoryAddress Lr$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.Lr$VH.get(seg);
    }
    public static void Lr$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.Lr$VH.set(seg, x);
    }
    public static MemoryAddress Lr$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.Lr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Lr$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.Lr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle D8$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("D8"));
    public static VarHandle D8$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D8$VH;
    }
    public static MemoryAddress D8$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D8$VH.get(seg);
    }
    public static void D8$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D8$VH.set(seg, x);
    }
    public static MemoryAddress D8$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D8$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void D8$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D8$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle D9$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("D9"));
    public static VarHandle D9$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D9$VH;
    }
    public static MemoryAddress D9$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D9$VH.get(seg);
    }
    public static void D9$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D9$VH.set(seg, x);
    }
    public static MemoryAddress D9$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D9$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void D9$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D9$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle D10$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("D10"));
    public static VarHandle D10$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D10$VH;
    }
    public static MemoryAddress D10$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D10$VH.get(seg);
    }
    public static void D10$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D10$VH.set(seg, x);
    }
    public static MemoryAddress D10$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D10$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void D10$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D10$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle D11$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("D11"));
    public static VarHandle D11$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D11$VH;
    }
    public static MemoryAddress D11$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D11$VH.get(seg);
    }
    public static void D11$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D11$VH.set(seg, x);
    }
    public static MemoryAddress D11$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D11$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void D11$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D11$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle D12$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("D12"));
    public static VarHandle D12$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D12$VH;
    }
    public static MemoryAddress D12$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D12$VH.get(seg);
    }
    public static void D12$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D12$VH.set(seg, x);
    }
    public static MemoryAddress D12$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D12$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void D12$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D12$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle D13$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("D13"));
    public static VarHandle D13$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D13$VH;
    }
    public static MemoryAddress D13$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D13$VH.get(seg);
    }
    public static void D13$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D13$VH.set(seg, x);
    }
    public static MemoryAddress D13$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D13$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void D13$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D13$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle D14$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("D14"));
    public static VarHandle D14$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D14$VH;
    }
    public static MemoryAddress D14$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D14$VH.get(seg);
    }
    public static void D14$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D14$VH.set(seg, x);
    }
    public static MemoryAddress D14$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D14$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void D14$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D14$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle D15$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("D15"));
    public static VarHandle D15$VH() {
        return _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D15$VH;
    }
    public static MemoryAddress D15$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D15$VH.get(seg);
    }
    public static void D15$set( MemorySegment seg, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D15$VH.set(seg, x);
    }
    public static MemoryAddress D15$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_KNONVOLATILE_CONTEXT_POINTERS_ARM64.D15$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void D15$set(MemorySegment seg, long index, MemoryAddress x) {
        _KNONVOLATILE_CONTEXT_POINTERS_ARM64.D15$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.nativeAllocator(scope)); }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.nativeAllocator(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


