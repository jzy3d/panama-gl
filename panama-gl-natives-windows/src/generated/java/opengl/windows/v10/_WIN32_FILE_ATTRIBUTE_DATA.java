// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class _WIN32_FILE_ATTRIBUTE_DATA {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwFileAttributes"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("dwLowDateTime"),
            Constants$root.C_LONG$LAYOUT.withName("dwHighDateTime")
        ).withName("ftCreationTime"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("dwLowDateTime"),
            Constants$root.C_LONG$LAYOUT.withName("dwHighDateTime")
        ).withName("ftLastAccessTime"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("dwLowDateTime"),
            Constants$root.C_LONG$LAYOUT.withName("dwHighDateTime")
        ).withName("ftLastWriteTime"),
        Constants$root.C_LONG$LAYOUT.withName("nFileSizeHigh"),
        Constants$root.C_LONG$LAYOUT.withName("nFileSizeLow")
    ).withName("_WIN32_FILE_ATTRIBUTE_DATA");
    public static MemoryLayout $LAYOUT() {
        return _WIN32_FILE_ATTRIBUTE_DATA.$struct$LAYOUT;
    }
    static final VarHandle dwFileAttributes$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwFileAttributes"));
    public static VarHandle dwFileAttributes$VH() {
        return _WIN32_FILE_ATTRIBUTE_DATA.dwFileAttributes$VH;
    }
    public static int dwFileAttributes$get(MemorySegment seg) {
        return (int)_WIN32_FILE_ATTRIBUTE_DATA.dwFileAttributes$VH.get(seg);
    }
    public static void dwFileAttributes$set( MemorySegment seg, int x) {
        _WIN32_FILE_ATTRIBUTE_DATA.dwFileAttributes$VH.set(seg, x);
    }
    public static int dwFileAttributes$get(MemorySegment seg, long index) {
        return (int)_WIN32_FILE_ATTRIBUTE_DATA.dwFileAttributes$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileAttributes$set(MemorySegment seg, long index, int x) {
        _WIN32_FILE_ATTRIBUTE_DATA.dwFileAttributes$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ftCreationTime$slice(MemorySegment seg) {
        return seg.asSlice(4, 8);
    }
    public static MemorySegment ftLastAccessTime$slice(MemorySegment seg) {
        return seg.asSlice(12, 8);
    }
    public static MemorySegment ftLastWriteTime$slice(MemorySegment seg) {
        return seg.asSlice(20, 8);
    }
    static final VarHandle nFileSizeHigh$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("nFileSizeHigh"));
    public static VarHandle nFileSizeHigh$VH() {
        return _WIN32_FILE_ATTRIBUTE_DATA.nFileSizeHigh$VH;
    }
    public static int nFileSizeHigh$get(MemorySegment seg) {
        return (int)_WIN32_FILE_ATTRIBUTE_DATA.nFileSizeHigh$VH.get(seg);
    }
    public static void nFileSizeHigh$set( MemorySegment seg, int x) {
        _WIN32_FILE_ATTRIBUTE_DATA.nFileSizeHigh$VH.set(seg, x);
    }
    public static int nFileSizeHigh$get(MemorySegment seg, long index) {
        return (int)_WIN32_FILE_ATTRIBUTE_DATA.nFileSizeHigh$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void nFileSizeHigh$set(MemorySegment seg, long index, int x) {
        _WIN32_FILE_ATTRIBUTE_DATA.nFileSizeHigh$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle nFileSizeLow$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("nFileSizeLow"));
    public static VarHandle nFileSizeLow$VH() {
        return _WIN32_FILE_ATTRIBUTE_DATA.nFileSizeLow$VH;
    }
    public static int nFileSizeLow$get(MemorySegment seg) {
        return (int)_WIN32_FILE_ATTRIBUTE_DATA.nFileSizeLow$VH.get(seg);
    }
    public static void nFileSizeLow$set( MemorySegment seg, int x) {
        _WIN32_FILE_ATTRIBUTE_DATA.nFileSizeLow$VH.set(seg, x);
    }
    public static int nFileSizeLow$get(MemorySegment seg, long index) {
        return (int)_WIN32_FILE_ATTRIBUTE_DATA.nFileSizeLow$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void nFileSizeLow$set(MemorySegment seg, long index, int x) {
        _WIN32_FILE_ATTRIBUTE_DATA.nFileSizeLow$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.nativeAllocator(scope)); }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.nativeAllocator(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


