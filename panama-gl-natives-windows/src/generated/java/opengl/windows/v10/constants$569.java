// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$569 {

    static final FunctionDescriptor SetConsoleWindowInfo$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetConsoleWindowInfo$MH = RuntimeHelper.downcallHandle(
        "SetConsoleWindowInfo",
        constants$569.SetConsoleWindowInfo$FUNC, false
    );
    static final FunctionDescriptor WriteConsoleOutputCharacterA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WriteConsoleOutputCharacterA$MH = RuntimeHelper.downcallHandle(
        "WriteConsoleOutputCharacterA",
        constants$569.WriteConsoleOutputCharacterA$FUNC, false
    );
    static final FunctionDescriptor WriteConsoleOutputCharacterW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WriteConsoleOutputCharacterW$MH = RuntimeHelper.downcallHandle(
        "WriteConsoleOutputCharacterW",
        constants$569.WriteConsoleOutputCharacterW$FUNC, false
    );
    static final FunctionDescriptor WriteConsoleOutputAttribute$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WriteConsoleOutputAttribute$MH = RuntimeHelper.downcallHandle(
        "WriteConsoleOutputAttribute",
        constants$569.WriteConsoleOutputAttribute$FUNC, false
    );
    static final FunctionDescriptor ReadConsoleOutputCharacterA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadConsoleOutputCharacterA$MH = RuntimeHelper.downcallHandle(
        "ReadConsoleOutputCharacterA",
        constants$569.ReadConsoleOutputCharacterA$FUNC, false
    );
    static final FunctionDescriptor ReadConsoleOutputCharacterW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadConsoleOutputCharacterW$MH = RuntimeHelper.downcallHandle(
        "ReadConsoleOutputCharacterW",
        constants$569.ReadConsoleOutputCharacterW$FUNC, false
    );
}


