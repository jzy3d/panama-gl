// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$676 {

    static final FunctionDescriptor glStencilMask$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle glStencilMask$MH = RuntimeHelper.downcallHandle(
        "glStencilMask",
        constants$676.glStencilMask$FUNC, false
    );
    static final FunctionDescriptor glStencilOp$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle glStencilOp$MH = RuntimeHelper.downcallHandle(
        "glStencilOp",
        constants$676.glStencilOp$FUNC, false
    );
    static final FunctionDescriptor glTexCoord1d$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle glTexCoord1d$MH = RuntimeHelper.downcallHandle(
        "glTexCoord1d",
        constants$676.glTexCoord1d$FUNC, false
    );
    static final FunctionDescriptor glTexCoord1dv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glTexCoord1dv$MH = RuntimeHelper.downcallHandle(
        "glTexCoord1dv",
        constants$676.glTexCoord1dv$FUNC, false
    );
    static final FunctionDescriptor glTexCoord1f$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle glTexCoord1f$MH = RuntimeHelper.downcallHandle(
        "glTexCoord1f",
        constants$676.glTexCoord1f$FUNC, false
    );
    static final FunctionDescriptor glTexCoord1fv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glTexCoord1fv$MH = RuntimeHelper.downcallHandle(
        "glTexCoord1fv",
        constants$676.glTexCoord1fv$FUNC, false
    );
}


