// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class PPM_WMI_PERF_STATE {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Frequency"),
        Constants$root.C_LONG$LAYOUT.withName("Power"),
        Constants$root.C_CHAR$LAYOUT.withName("PercentFrequency"),
        Constants$root.C_CHAR$LAYOUT.withName("IncreaseLevel"),
        Constants$root.C_CHAR$LAYOUT.withName("DecreaseLevel"),
        Constants$root.C_CHAR$LAYOUT.withName("Type"),
        Constants$root.C_LONG$LAYOUT.withName("IncreaseTime"),
        Constants$root.C_LONG$LAYOUT.withName("DecreaseTime"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Control"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Status"),
        Constants$root.C_LONG$LAYOUT.withName("HitCount"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved1"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Reserved2"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Reserved3")
    );
    public static MemoryLayout $LAYOUT() {
        return PPM_WMI_PERF_STATE.$struct$LAYOUT;
    }
    static final VarHandle Frequency$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Frequency"));
    public static VarHandle Frequency$VH() {
        return PPM_WMI_PERF_STATE.Frequency$VH;
    }
    public static int Frequency$get(MemorySegment seg) {
        return (int)PPM_WMI_PERF_STATE.Frequency$VH.get(seg);
    }
    public static void Frequency$set( MemorySegment seg, int x) {
        PPM_WMI_PERF_STATE.Frequency$VH.set(seg, x);
    }
    public static int Frequency$get(MemorySegment seg, long index) {
        return (int)PPM_WMI_PERF_STATE.Frequency$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Frequency$set(MemorySegment seg, long index, int x) {
        PPM_WMI_PERF_STATE.Frequency$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Power$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Power"));
    public static VarHandle Power$VH() {
        return PPM_WMI_PERF_STATE.Power$VH;
    }
    public static int Power$get(MemorySegment seg) {
        return (int)PPM_WMI_PERF_STATE.Power$VH.get(seg);
    }
    public static void Power$set( MemorySegment seg, int x) {
        PPM_WMI_PERF_STATE.Power$VH.set(seg, x);
    }
    public static int Power$get(MemorySegment seg, long index) {
        return (int)PPM_WMI_PERF_STATE.Power$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Power$set(MemorySegment seg, long index, int x) {
        PPM_WMI_PERF_STATE.Power$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle PercentFrequency$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("PercentFrequency"));
    public static VarHandle PercentFrequency$VH() {
        return PPM_WMI_PERF_STATE.PercentFrequency$VH;
    }
    public static byte PercentFrequency$get(MemorySegment seg) {
        return (byte)PPM_WMI_PERF_STATE.PercentFrequency$VH.get(seg);
    }
    public static void PercentFrequency$set( MemorySegment seg, byte x) {
        PPM_WMI_PERF_STATE.PercentFrequency$VH.set(seg, x);
    }
    public static byte PercentFrequency$get(MemorySegment seg, long index) {
        return (byte)PPM_WMI_PERF_STATE.PercentFrequency$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void PercentFrequency$set(MemorySegment seg, long index, byte x) {
        PPM_WMI_PERF_STATE.PercentFrequency$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle IncreaseLevel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("IncreaseLevel"));
    public static VarHandle IncreaseLevel$VH() {
        return PPM_WMI_PERF_STATE.IncreaseLevel$VH;
    }
    public static byte IncreaseLevel$get(MemorySegment seg) {
        return (byte)PPM_WMI_PERF_STATE.IncreaseLevel$VH.get(seg);
    }
    public static void IncreaseLevel$set( MemorySegment seg, byte x) {
        PPM_WMI_PERF_STATE.IncreaseLevel$VH.set(seg, x);
    }
    public static byte IncreaseLevel$get(MemorySegment seg, long index) {
        return (byte)PPM_WMI_PERF_STATE.IncreaseLevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void IncreaseLevel$set(MemorySegment seg, long index, byte x) {
        PPM_WMI_PERF_STATE.IncreaseLevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DecreaseLevel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("DecreaseLevel"));
    public static VarHandle DecreaseLevel$VH() {
        return PPM_WMI_PERF_STATE.DecreaseLevel$VH;
    }
    public static byte DecreaseLevel$get(MemorySegment seg) {
        return (byte)PPM_WMI_PERF_STATE.DecreaseLevel$VH.get(seg);
    }
    public static void DecreaseLevel$set( MemorySegment seg, byte x) {
        PPM_WMI_PERF_STATE.DecreaseLevel$VH.set(seg, x);
    }
    public static byte DecreaseLevel$get(MemorySegment seg, long index) {
        return (byte)PPM_WMI_PERF_STATE.DecreaseLevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DecreaseLevel$set(MemorySegment seg, long index, byte x) {
        PPM_WMI_PERF_STATE.DecreaseLevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Type$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Type"));
    public static VarHandle Type$VH() {
        return PPM_WMI_PERF_STATE.Type$VH;
    }
    public static byte Type$get(MemorySegment seg) {
        return (byte)PPM_WMI_PERF_STATE.Type$VH.get(seg);
    }
    public static void Type$set( MemorySegment seg, byte x) {
        PPM_WMI_PERF_STATE.Type$VH.set(seg, x);
    }
    public static byte Type$get(MemorySegment seg, long index) {
        return (byte)PPM_WMI_PERF_STATE.Type$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Type$set(MemorySegment seg, long index, byte x) {
        PPM_WMI_PERF_STATE.Type$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle IncreaseTime$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("IncreaseTime"));
    public static VarHandle IncreaseTime$VH() {
        return PPM_WMI_PERF_STATE.IncreaseTime$VH;
    }
    public static int IncreaseTime$get(MemorySegment seg) {
        return (int)PPM_WMI_PERF_STATE.IncreaseTime$VH.get(seg);
    }
    public static void IncreaseTime$set( MemorySegment seg, int x) {
        PPM_WMI_PERF_STATE.IncreaseTime$VH.set(seg, x);
    }
    public static int IncreaseTime$get(MemorySegment seg, long index) {
        return (int)PPM_WMI_PERF_STATE.IncreaseTime$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void IncreaseTime$set(MemorySegment seg, long index, int x) {
        PPM_WMI_PERF_STATE.IncreaseTime$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DecreaseTime$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("DecreaseTime"));
    public static VarHandle DecreaseTime$VH() {
        return PPM_WMI_PERF_STATE.DecreaseTime$VH;
    }
    public static int DecreaseTime$get(MemorySegment seg) {
        return (int)PPM_WMI_PERF_STATE.DecreaseTime$VH.get(seg);
    }
    public static void DecreaseTime$set( MemorySegment seg, int x) {
        PPM_WMI_PERF_STATE.DecreaseTime$VH.set(seg, x);
    }
    public static int DecreaseTime$get(MemorySegment seg, long index) {
        return (int)PPM_WMI_PERF_STATE.DecreaseTime$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DecreaseTime$set(MemorySegment seg, long index, int x) {
        PPM_WMI_PERF_STATE.DecreaseTime$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Control$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Control"));
    public static VarHandle Control$VH() {
        return PPM_WMI_PERF_STATE.Control$VH;
    }
    public static long Control$get(MemorySegment seg) {
        return (long)PPM_WMI_PERF_STATE.Control$VH.get(seg);
    }
    public static void Control$set( MemorySegment seg, long x) {
        PPM_WMI_PERF_STATE.Control$VH.set(seg, x);
    }
    public static long Control$get(MemorySegment seg, long index) {
        return (long)PPM_WMI_PERF_STATE.Control$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Control$set(MemorySegment seg, long index, long x) {
        PPM_WMI_PERF_STATE.Control$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Status$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Status"));
    public static VarHandle Status$VH() {
        return PPM_WMI_PERF_STATE.Status$VH;
    }
    public static long Status$get(MemorySegment seg) {
        return (long)PPM_WMI_PERF_STATE.Status$VH.get(seg);
    }
    public static void Status$set( MemorySegment seg, long x) {
        PPM_WMI_PERF_STATE.Status$VH.set(seg, x);
    }
    public static long Status$get(MemorySegment seg, long index) {
        return (long)PPM_WMI_PERF_STATE.Status$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Status$set(MemorySegment seg, long index, long x) {
        PPM_WMI_PERF_STATE.Status$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle HitCount$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("HitCount"));
    public static VarHandle HitCount$VH() {
        return PPM_WMI_PERF_STATE.HitCount$VH;
    }
    public static int HitCount$get(MemorySegment seg) {
        return (int)PPM_WMI_PERF_STATE.HitCount$VH.get(seg);
    }
    public static void HitCount$set( MemorySegment seg, int x) {
        PPM_WMI_PERF_STATE.HitCount$VH.set(seg, x);
    }
    public static int HitCount$get(MemorySegment seg, long index) {
        return (int)PPM_WMI_PERF_STATE.HitCount$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void HitCount$set(MemorySegment seg, long index, int x) {
        PPM_WMI_PERF_STATE.HitCount$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved1"));
    public static VarHandle Reserved1$VH() {
        return PPM_WMI_PERF_STATE.Reserved1$VH;
    }
    public static int Reserved1$get(MemorySegment seg) {
        return (int)PPM_WMI_PERF_STATE.Reserved1$VH.get(seg);
    }
    public static void Reserved1$set( MemorySegment seg, int x) {
        PPM_WMI_PERF_STATE.Reserved1$VH.set(seg, x);
    }
    public static int Reserved1$get(MemorySegment seg, long index) {
        return (int)PPM_WMI_PERF_STATE.Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved1$set(MemorySegment seg, long index, int x) {
        PPM_WMI_PERF_STATE.Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved2"));
    public static VarHandle Reserved2$VH() {
        return PPM_WMI_PERF_STATE.Reserved2$VH;
    }
    public static long Reserved2$get(MemorySegment seg) {
        return (long)PPM_WMI_PERF_STATE.Reserved2$VH.get(seg);
    }
    public static void Reserved2$set( MemorySegment seg, long x) {
        PPM_WMI_PERF_STATE.Reserved2$VH.set(seg, x);
    }
    public static long Reserved2$get(MemorySegment seg, long index) {
        return (long)PPM_WMI_PERF_STATE.Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved2$set(MemorySegment seg, long index, long x) {
        PPM_WMI_PERF_STATE.Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved3"));
    public static VarHandle Reserved3$VH() {
        return PPM_WMI_PERF_STATE.Reserved3$VH;
    }
    public static long Reserved3$get(MemorySegment seg) {
        return (long)PPM_WMI_PERF_STATE.Reserved3$VH.get(seg);
    }
    public static void Reserved3$set( MemorySegment seg, long x) {
        PPM_WMI_PERF_STATE.Reserved3$VH.set(seg, x);
    }
    public static long Reserved3$get(MemorySegment seg, long index) {
        return (long)PPM_WMI_PERF_STATE.Reserved3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved3$set(MemorySegment seg, long index, long x) {
        PPM_WMI_PERF_STATE.Reserved3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.nativeAllocator(scope)); }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.nativeAllocator(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


