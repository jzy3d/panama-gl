// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$215 {

    static final FunctionDescriptor CallbackMayRunLong$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CallbackMayRunLong$MH = RuntimeHelper.downcallHandle(
        "CallbackMayRunLong",
        constants$215.CallbackMayRunLong$FUNC, false
    );
    static final FunctionDescriptor DisassociateCurrentThreadFromCallback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DisassociateCurrentThreadFromCallback$MH = RuntimeHelper.downcallHandle(
        "DisassociateCurrentThreadFromCallback",
        constants$215.DisassociateCurrentThreadFromCallback$FUNC, false
    );
    static final FunctionDescriptor TrySubmitThreadpoolCallback$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle TrySubmitThreadpoolCallback$MH = RuntimeHelper.downcallHandle(
        "TrySubmitThreadpoolCallback",
        constants$215.TrySubmitThreadpoolCallback$FUNC, false
    );
    static final FunctionDescriptor CreateThreadpoolWork$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateThreadpoolWork$MH = RuntimeHelper.downcallHandle(
        "CreateThreadpoolWork",
        constants$215.CreateThreadpoolWork$FUNC, false
    );
    static final FunctionDescriptor SubmitThreadpoolWork$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SubmitThreadpoolWork$MH = RuntimeHelper.downcallHandle(
        "SubmitThreadpoolWork",
        constants$215.SubmitThreadpoolWork$FUNC, false
    );
    static final FunctionDescriptor WaitForThreadpoolWorkCallbacks$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WaitForThreadpoolWorkCallbacks$MH = RuntimeHelper.downcallHandle(
        "WaitForThreadpoolWorkCallbacks",
        constants$215.WaitForThreadpoolWorkCallbacks$FUNC, false
    );
}


