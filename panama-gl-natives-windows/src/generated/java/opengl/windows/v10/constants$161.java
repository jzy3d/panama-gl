// Generated by jextract

package opengl.windows.v10;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$161 {

    static final FunctionDescriptor HeapDestroy$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle HeapDestroy$MH = RuntimeHelper.downcallHandle(
        "HeapDestroy",
        constants$161.HeapDestroy$FUNC, false
    );
    static final FunctionDescriptor HeapAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle HeapAlloc$MH = RuntimeHelper.downcallHandle(
        "HeapAlloc",
        constants$161.HeapAlloc$FUNC, false
    );
    static final FunctionDescriptor HeapReAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle HeapReAlloc$MH = RuntimeHelper.downcallHandle(
        "HeapReAlloc",
        constants$161.HeapReAlloc$FUNC, false
    );
    static final FunctionDescriptor HeapFree$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle HeapFree$MH = RuntimeHelper.downcallHandle(
        "HeapFree",
        constants$161.HeapFree$FUNC, false
    );
    static final FunctionDescriptor HeapSize$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle HeapSize$MH = RuntimeHelper.downcallHandle(
        "HeapSize",
        constants$161.HeapSize$FUNC, false
    );
    static final FunctionDescriptor GetProcessHeap$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetProcessHeap$MH = RuntimeHelper.downcallHandle(
        "GetProcessHeap",
        constants$161.GetProcessHeap$FUNC, false
    );
}


