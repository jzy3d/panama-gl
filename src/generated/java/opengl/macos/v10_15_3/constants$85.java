// Generated by jextract

package opengl.macos.v10_15_3;

import java.lang.invoke.MethodHandle;

import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$85 {

    static final FunctionDescriptor glFlush$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glFlush$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glFlush",
        "()V",
        constants$85.glFlush$FUNC, false
    );
    static final FunctionDescriptor glFogf$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT
    );
    static final MethodHandle glFogf$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glFogf",
        "(IF)V",
        constants$85.glFogf$FUNC, false
    );
    static final FunctionDescriptor glFogfv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glFogfv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glFogfv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$85.glFogfv$FUNC, false
    );
    static final FunctionDescriptor glFogi$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glFogi$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glFogi",
        "(II)V",
        constants$85.glFogi$FUNC, false
    );
    static final FunctionDescriptor glFogiv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glFogiv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glFogiv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$85.glFogiv$FUNC, false
    );
    static final FunctionDescriptor glFrontFace$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glFrontFace$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glFrontFace",
        "(I)V",
        constants$85.glFrontFace$FUNC, false
    );
}


