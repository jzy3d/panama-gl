// Generated by jextract

package opengl.macos.v10_15_3;

import java.lang.invoke.MethodHandle;

import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$104 {

    static final FunctionDescriptor glOrtho$FUNC = FunctionDescriptor.ofVoid(
        C_DOUBLE,
        C_DOUBLE,
        C_DOUBLE,
        C_DOUBLE,
        C_DOUBLE,
        C_DOUBLE
    );
    static final MethodHandle glOrtho$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glOrtho",
        "(DDDDDD)V",
        constants$104.glOrtho$FUNC, false
    );
    static final FunctionDescriptor glPassThrough$FUNC = FunctionDescriptor.ofVoid(
        C_FLOAT
    );
    static final MethodHandle glPassThrough$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPassThrough",
        "(F)V",
        constants$104.glPassThrough$FUNC, false
    );
    static final FunctionDescriptor glPixelMapfv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glPixelMapfv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPixelMapfv",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$104.glPixelMapfv$FUNC, false
    );
    static final FunctionDescriptor glPixelMapuiv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glPixelMapuiv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPixelMapuiv",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$104.glPixelMapuiv$FUNC, false
    );
    static final FunctionDescriptor glPixelMapusv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glPixelMapusv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPixelMapusv",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$104.glPixelMapusv$FUNC, false
    );
    static final FunctionDescriptor glPixelStoref$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT
    );
    static final MethodHandle glPixelStoref$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPixelStoref",
        "(IF)V",
        constants$104.glPixelStoref$FUNC, false
    );
}


