// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$155 {

    static final FunctionDescriptor glMultiTexCoord4fv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glMultiTexCoord4fv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMultiTexCoord4fv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$155.glMultiTexCoord4fv$FUNC, false
    );
    static final FunctionDescriptor glMultiTexCoord4i$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glMultiTexCoord4i$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMultiTexCoord4i",
        "(IIIII)V",
        constants$155.glMultiTexCoord4i$FUNC, false
    );
    static final FunctionDescriptor glMultiTexCoord4iv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glMultiTexCoord4iv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMultiTexCoord4iv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$155.glMultiTexCoord4iv$FUNC, false
    );
    static final FunctionDescriptor glMultiTexCoord4s$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_SHORT,
        C_SHORT,
        C_SHORT,
        C_SHORT
    );
    static final MethodHandle glMultiTexCoord4s$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMultiTexCoord4s",
        "(ISSSS)V",
        constants$155.glMultiTexCoord4s$FUNC, false
    );
    static final FunctionDescriptor glMultiTexCoord4sv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glMultiTexCoord4sv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMultiTexCoord4sv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$155.glMultiTexCoord4sv$FUNC, false
    );
    static final FunctionDescriptor glLoadTransposeMatrixd$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glLoadTransposeMatrixd$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glLoadTransposeMatrixd",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$155.glLoadTransposeMatrixd$FUNC, false
    );
}


