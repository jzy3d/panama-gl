// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$17 {

    static final FunctionDescriptor XEventMaskOfScreen$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle XEventMaskOfScreen$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XEventMaskOfScreen",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$17.XEventMaskOfScreen$FUNC, false
    );
    static final FunctionDescriptor XScreenNumberOfScreen$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle XScreenNumberOfScreen$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XScreenNumberOfScreen",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$17.XScreenNumberOfScreen$FUNC, false
    );
    static final FunctionDescriptor XErrorHandler$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XErrorHandler$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$17.XErrorHandler$FUNC, false
    );
    static final FunctionDescriptor XSetErrorHandler$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle XSetErrorHandler$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetErrorHandler",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$17.XSetErrorHandler$FUNC, false
    );
    static final FunctionDescriptor XIOErrorHandler$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
}


