// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1038 {

    static final FunctionDescriptor PFNGLXSWAPINTERVALMESAPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle PFNGLXSWAPINTERVALMESAPROC$MH = RuntimeHelper.downcallHandle(
        "(I)I",
        constants$1038.PFNGLXSWAPINTERVALMESAPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLXCOPYBUFFERSUBDATANVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_LONG,
        C_LONG,
        C_LONG
    );
    static final MethodHandle PFNGLXCOPYBUFFERSUBDATANVPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIJJJ)V",
        constants$1038.PFNGLXCOPYBUFFERSUBDATANVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_LONG,
        C_LONG,
        C_LONG
    );
    static final MethodHandle PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIJJJ)V",
        constants$1038.PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLXCOPYIMAGESUBDATANVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
}


