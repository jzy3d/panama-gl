// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$885 {

    static final FunctionDescriptor PFNGLGETPATHLENGTHNVPROC$FUNC = FunctionDescriptor.of(C_FLOAT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle PFNGLGETPATHLENGTHNVPROC$MH = RuntimeHelper.downcallHandle(
        "(III)F",
        constants$885.PFNGLGETPATHLENGTHNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLPOINTALONGPATHNVPROC$FUNC = FunctionDescriptor.of(C_CHAR,
        C_INT,
        C_INT,
        C_INT,
        C_FLOAT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PFNGLPOINTALONGPATHNVPROC$MH = RuntimeHelper.downcallHandle(
        "(IIIFLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)B",
        constants$885.PFNGLPOINTALONGPATHNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLMATRIXLOAD3X2FNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXLOAD3X2FNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$885.PFNGLMATRIXLOAD3X2FNVPROC$FUNC, false
    );
}


