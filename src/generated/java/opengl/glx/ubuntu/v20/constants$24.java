// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$24 {

    static final FunctionDescriptor XChangeProperty$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XChangeProperty$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XChangeProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;JJJIILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$24.XChangeProperty$FUNC, false
    );
    static final FunctionDescriptor XChangeSaveSet$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle XChangeSaveSet$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XChangeSaveSet",
        "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$24.XChangeSaveSet$FUNC, false
    );
    static final FunctionDescriptor XChangeWindowAttributes$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle XChangeWindowAttributes$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XChangeWindowAttributes",
        "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)I",
        constants$24.XChangeWindowAttributes$FUNC, false
    );
    static final FunctionDescriptor XCheckIfEvent$x0$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XCheckIfEvent$x0$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$24.XCheckIfEvent$x0$FUNC, false
    );
    static final FunctionDescriptor XCheckIfEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XCheckIfEvent$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XCheckIfEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$24.XCheckIfEvent$FUNC, false
    );
}


