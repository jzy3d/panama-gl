// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$90 {

    static final FunctionDescriptor glDisableClientState$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glDisableClientState$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glDisableClientState",
        "(I)V",
        constants$90.glDisableClientState$FUNC, false
    );
    static final FunctionDescriptor glGetBooleanv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glGetBooleanv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glGetBooleanv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$90.glGetBooleanv$FUNC, false
    );
    static final FunctionDescriptor glGetDoublev$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glGetDoublev$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glGetDoublev",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$90.glGetDoublev$FUNC, false
    );
    static final FunctionDescriptor glGetFloatv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glGetFloatv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glGetFloatv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$90.glGetFloatv$FUNC, false
    );
    static final FunctionDescriptor glGetIntegerv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glGetIntegerv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glGetIntegerv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$90.glGetIntegerv$FUNC, false
    );
    static final FunctionDescriptor glPushAttrib$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glPushAttrib$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glPushAttrib",
        "(I)V",
        constants$90.glPushAttrib$FUNC, false
    );
}


