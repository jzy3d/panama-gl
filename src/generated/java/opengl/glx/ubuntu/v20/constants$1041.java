// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1041 {

    static final FunctionDescriptor PFNGLXQUERYSWAPGROUPNVPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PFNGLXQUERYSWAPGROUPNVPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1041.PFNGLXQUERYSWAPGROUPNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLXQUERYMAXSWAPGROUPSNVPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PFNGLXQUERYMAXSWAPGROUPSNVPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1041.PFNGLXQUERYMAXSWAPGROUPSNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLXQUERYFRAMECOUNTNVPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLXQUERYFRAMECOUNTNVPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1041.PFNGLXQUERYFRAMECOUNTNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLXRESETFRAMECOUNTNVPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
}


