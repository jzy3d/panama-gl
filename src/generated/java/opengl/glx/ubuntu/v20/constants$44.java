// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$44 {

    static final FunctionDescriptor XPeekIfEvent$x0$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XPeekIfEvent$x0$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44.XPeekIfEvent$x0$FUNC, false
    );
    static final FunctionDescriptor XPeekIfEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XPeekIfEvent$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XPeekIfEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44.XPeekIfEvent$FUNC, false
    );
    static final FunctionDescriptor XPending$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle XPending$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XPending",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44.XPending$FUNC, false
    );
    static final FunctionDescriptor XPlanesOfScreen$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle XPlanesOfScreen$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XPlanesOfScreen",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44.XPlanesOfScreen$FUNC, false
    );
    static final FunctionDescriptor XProtocolRevision$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle XProtocolRevision$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XProtocolRevision",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44.XProtocolRevision$FUNC, false
    );
}


