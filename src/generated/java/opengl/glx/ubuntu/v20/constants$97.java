// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$97 {

    static final FunctionDescriptor glEndList$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glEndList$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glEndList",
        "()V",
        constants$97.glEndList$FUNC, false
    );
    static final FunctionDescriptor glCallList$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glCallList$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glCallList",
        "(I)V",
        constants$97.glCallList$FUNC, false
    );
    static final FunctionDescriptor glCallLists$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glCallLists$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glCallLists",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$97.glCallLists$FUNC, false
    );
    static final FunctionDescriptor glListBase$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glListBase$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glListBase",
        "(I)V",
        constants$97.glListBase$FUNC, false
    );
    static final FunctionDescriptor glBegin$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glBegin$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glBegin",
        "(I)V",
        constants$97.glBegin$FUNC, false
    );
    static final FunctionDescriptor glEnd$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glEnd$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glEnd",
        "()V",
        constants$97.glEnd$FUNC, false
    );
}


