// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$100 {

    static final FunctionDescriptor glMapGrid1d$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_DOUBLE,
        C_DOUBLE
    );
    static final MethodHandle glMapGrid1d$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glMapGrid1d",
        "(IDD)V",
        constants$100.glMapGrid1d$FUNC, false
    );
    static final FunctionDescriptor glMapGrid1f$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT,
        C_FLOAT
    );
    static final MethodHandle glMapGrid1f$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glMapGrid1f",
        "(IFF)V",
        constants$100.glMapGrid1f$FUNC, false
    );
    static final FunctionDescriptor glMapGrid2d$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_DOUBLE,
        C_DOUBLE,
        C_INT,
        C_DOUBLE,
        C_DOUBLE
    );
    static final MethodHandle glMapGrid2d$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glMapGrid2d",
        "(IDDIDD)V",
        constants$100.glMapGrid2d$FUNC, false
    );
    static final FunctionDescriptor glMapGrid2f$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_INT,
        C_FLOAT,
        C_FLOAT
    );
    static final MethodHandle glMapGrid2f$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glMapGrid2f",
        "(IFFIFF)V",
        constants$100.glMapGrid2f$FUNC, false
    );
    static final FunctionDescriptor glMaterialf$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_FLOAT
    );
    static final MethodHandle glMaterialf$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glMaterialf",
        "(IIF)V",
        constants$100.glMaterialf$FUNC, false
    );
    static final FunctionDescriptor glMaterialfv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glMaterialfv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glMaterialfv",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$100.glMaterialfv$FUNC, false
    );
}


