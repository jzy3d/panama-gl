// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$111 {

    static final FunctionDescriptor glRasterPos4fv$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glRasterPos4fv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glRasterPos4fv",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$111.glRasterPos4fv$FUNC, false
    );
    static final FunctionDescriptor glRasterPos4i$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glRasterPos4i$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glRasterPos4i",
        "(IIII)V",
        constants$111.glRasterPos4i$FUNC, false
    );
    static final FunctionDescriptor glRasterPos4iv$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glRasterPos4iv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glRasterPos4iv",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$111.glRasterPos4iv$FUNC, false
    );
    static final FunctionDescriptor glRasterPos4s$FUNC = FunctionDescriptor.ofVoid(
        C_SHORT,
        C_SHORT,
        C_SHORT,
        C_SHORT
    );
    static final MethodHandle glRasterPos4s$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glRasterPos4s",
        "(SSSS)V",
        constants$111.glRasterPos4s$FUNC, false
    );
    static final FunctionDescriptor glRasterPos4sv$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glRasterPos4sv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glRasterPos4sv",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$111.glRasterPos4sv$FUNC, false
    );
    static final FunctionDescriptor glReadBuffer$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glReadBuffer$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glReadBuffer",
        "(I)V",
        constants$111.glReadBuffer$FUNC, false
    );
}


