// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$84 {

    static final FunctionDescriptor glEvalMesh1$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glEvalMesh1$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glEvalMesh1",
        "(III)V",
        constants$84.glEvalMesh1$FUNC, false
    );
    static final FunctionDescriptor glEvalMesh2$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glEvalMesh2$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glEvalMesh2",
        "(IIIII)V",
        constants$84.glEvalMesh2$FUNC, false
    );
    static final FunctionDescriptor glEvalPoint1$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glEvalPoint1$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glEvalPoint1",
        "(I)V",
        constants$84.glEvalPoint1$FUNC, false
    );
    static final FunctionDescriptor glEvalPoint2$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glEvalPoint2$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glEvalPoint2",
        "(II)V",
        constants$84.glEvalPoint2$FUNC, false
    );
    static final FunctionDescriptor glFeedbackBuffer$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glFeedbackBuffer$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glFeedbackBuffer",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$84.glFeedbackBuffer$FUNC, false
    );
    static final FunctionDescriptor glFinish$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glFinish$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glFinish",
        "()V",
        constants$84.glFinish$FUNC, false
    );
}


