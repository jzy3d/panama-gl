// Generated by jextract

package opengl.macos.v10_15_3;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$66 {

    static final FunctionDescriptor glBeginConditionalRenderNV$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glBeginConditionalRenderNV$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glBeginConditionalRenderNV",
        "(II)V",
        constants$66.glBeginConditionalRenderNV$FUNC, false
    );
    static final FunctionDescriptor glEndConditionalRenderNV$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glEndConditionalRenderNV$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glEndConditionalRenderNV",
        "()V",
        constants$66.glEndConditionalRenderNV$FUNC, false
    );
    static final FunctionDescriptor glPointParameteriNV$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glPointParameteriNV$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPointParameteriNV",
        "(II)V",
        constants$66.glPointParameteriNV$FUNC, false
    );
    static final FunctionDescriptor glPointParameterivNV$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glPointParameterivNV$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPointParameterivNV",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$66.glPointParameterivNV$FUNC, false
    );
    static final FunctionDescriptor glTextureBarrierNV$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glTextureBarrierNV$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glTextureBarrierNV",
        "()V",
        constants$66.glTextureBarrierNV$FUNC, false
    );
    static final FunctionDescriptor glAccum$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT
    );
    static final MethodHandle glAccum$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glAccum",
        "(IF)V",
        constants$66.glAccum$FUNC, false
    );
}


