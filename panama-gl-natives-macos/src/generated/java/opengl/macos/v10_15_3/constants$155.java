// Generated by jextract

package opengl.macos.v10_15_3;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$155 {

    static final FunctionDescriptor glDeleteShader$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glDeleteShader$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glDeleteShader",
        "(I)V",
        constants$155.glDeleteShader$FUNC, false
    );
    static final FunctionDescriptor glDetachShader$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glDetachShader$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glDetachShader",
        "(II)V",
        constants$155.glDetachShader$FUNC, false
    );
    static final FunctionDescriptor glCreateShader$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle glCreateShader$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glCreateShader",
        "(I)I",
        constants$155.glCreateShader$FUNC, false
    );
    static final FunctionDescriptor glShaderSource$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle glShaderSource$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glShaderSource",
        "(IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$155.glShaderSource$FUNC, false
    );
    static final FunctionDescriptor glCompileShader$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glCompileShader$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glCompileShader",
        "(I)V",
        constants$155.glCompileShader$FUNC, false
    );
    static final FunctionDescriptor glCreateProgram$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle glCreateProgram$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glCreateProgram",
        "()I",
        constants$155.glCreateProgram$FUNC, false
    );
}


