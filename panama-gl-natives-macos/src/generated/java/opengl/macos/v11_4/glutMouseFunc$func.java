// Generated by jextract

package opengl.macos.v11_4;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface glutMouseFunc$func {

    void apply(int x0, int x1, int x2, int x3);
    static MemoryAddress allocate(glutMouseFunc$func fi) {
        return RuntimeHelper.upcallStub(glutMouseFunc$func.class, fi, constants$186.glutMouseFunc$func$FUNC, "(IIII)V");
    }
    static MemoryAddress allocate(glutMouseFunc$func fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(glutMouseFunc$func.class, fi, constants$186.glutMouseFunc$func$FUNC, "(IIII)V", scope);
    }
    static glutMouseFunc$func ofAddress(MemoryAddress addr) {
        return (int x0, int x1, int x2, int x3) -> {
            try {
                constants$186.glutMouseFunc$func$MH.invokeExact((Addressable)addr, x0, x1, x2, x3);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


