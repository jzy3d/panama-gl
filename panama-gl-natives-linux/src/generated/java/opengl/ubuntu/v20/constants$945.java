// Generated by jextract

package opengl.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$945 {

    static final FunctionDescriptor glutPostWindowRedisplay$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glutPostWindowRedisplay$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glutPostWindowRedisplay",
        "(I)V",
        constants$945.glutPostWindowRedisplay$FUNC, false
    );
    static final FunctionDescriptor glutPostRedisplay$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glutPostRedisplay$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glutPostRedisplay",
        "()V",
        constants$945.glutPostRedisplay$FUNC, false
    );
    static final FunctionDescriptor glutSwapBuffers$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glutSwapBuffers$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glutSwapBuffers",
        "()V",
        constants$945.glutSwapBuffers$FUNC, false
    );
    static final FunctionDescriptor glutWarpPointer$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glutWarpPointer$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glutWarpPointer",
        "(II)V",
        constants$945.glutWarpPointer$FUNC, false
    );
    static final FunctionDescriptor glutSetCursor$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glutSetCursor$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glutSetCursor",
        "(I)V",
        constants$945.glutSetCursor$FUNC, false
    );
    static final FunctionDescriptor glutEstablishOverlay$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glutEstablishOverlay$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glutEstablishOverlay",
        "()V",
        constants$945.glutEstablishOverlay$FUNC, false
    );
}


