// Generated by jextract

package opengl.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$274 {

    static final FunctionDescriptor PFNGLCOPYNAMEDBUFFERSUBDATAPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_LONG,
        C_LONG,
        C_LONG
    );
    static final MethodHandle PFNGLCOPYNAMEDBUFFERSUBDATAPROC$MH = RuntimeHelper.downcallHandle(
        "(IIJJJ)V",
        constants$274.PFNGLCOPYNAMEDBUFFERSUBDATAPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLCLEARNAMEDBUFFERDATAPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLCLEARNAMEDBUFFERDATAPROC$MH = RuntimeHelper.downcallHandle(
        "(IIIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$274.PFNGLCLEARNAMEDBUFFERDATAPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLCLEARNAMEDBUFFERSUBDATAPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_LONG,
        C_LONG,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLCLEARNAMEDBUFFERSUBDATAPROC$MH = RuntimeHelper.downcallHandle(
        "(IIJJIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$274.PFNGLCLEARNAMEDBUFFERSUBDATAPROC$FUNC, false
    );
}


