// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLPROGRAMUNIFORM4UIPROC {

    void apply(int x0, int x1, int x2, int x3, int x4, int x5);
    static MemoryAddress allocate(PFNGLPROGRAMUNIFORM4UIPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLPROGRAMUNIFORM4UIPROC.class, fi, constants$234.PFNGLPROGRAMUNIFORM4UIPROC$FUNC, "(IIIIII)V");
    }
    static MemoryAddress allocate(PFNGLPROGRAMUNIFORM4UIPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLPROGRAMUNIFORM4UIPROC.class, fi, constants$234.PFNGLPROGRAMUNIFORM4UIPROC$FUNC, "(IIIIII)V", scope);
    }
    static PFNGLPROGRAMUNIFORM4UIPROC ofAddress(MemoryAddress addr) {
        return (int x0, int x1, int x2, int x3, int x4, int x5) -> {
            try {
                constants$234.PFNGLPROGRAMUNIFORM4UIPROC$MH.invokeExact((Addressable)addr, x0, x1, x2, x3, x4, x5);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


