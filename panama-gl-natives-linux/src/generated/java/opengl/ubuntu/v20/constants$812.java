// Generated by jextract

package opengl.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$812 {

    static final FunctionDescriptor PFNGLGENQUERYRESOURCETAGNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLGENQUERYRESOURCETAGNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$812.PFNGLGENQUERYRESOURCETAGNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLDELETEQUERYRESOURCETAGNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLDELETEQUERYRESOURCETAGNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$812.PFNGLDELETEQUERYRESOURCETAGNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLQUERYRESOURCETAGNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLQUERYRESOURCETAGNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$812.PFNGLQUERYRESOURCETAGNVPROC$FUNC, false
    );
}


