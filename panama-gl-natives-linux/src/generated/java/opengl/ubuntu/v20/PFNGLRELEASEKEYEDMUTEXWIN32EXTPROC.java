// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC {

    byte apply(int x0, long x1);
    static MemoryAddress allocate(PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC.class, fi, constants$697.PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC$FUNC, "(IJ)B");
    }
    static MemoryAddress allocate(PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC.class, fi, constants$697.PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC$FUNC, "(IJ)B", scope);
    }
    static PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC ofAddress(MemoryAddress addr) {
        return (int x0, long x1) -> {
            try {
                return (byte)constants$697.PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC$MH.invokeExact((Addressable)addr, x0, x1);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


