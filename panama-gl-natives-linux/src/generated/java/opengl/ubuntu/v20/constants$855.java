// Generated by jextract

package opengl.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;
import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$855 {

    static final FunctionDescriptor PFNGLPROGRAMPARAMETER4DNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_DOUBLE,
        C_DOUBLE,
        C_DOUBLE,
        C_DOUBLE
    );
    static final MethodHandle PFNGLPROGRAMPARAMETER4DNVPROC$MH = RuntimeHelper.downcallHandle(
        "(IIDDDD)V",
        constants$855.PFNGLPROGRAMPARAMETER4DNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLPROGRAMPARAMETER4DVNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLPROGRAMPARAMETER4DVNVPROC$MH = RuntimeHelper.downcallHandle(
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$855.PFNGLPROGRAMPARAMETER4DVNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLPROGRAMPARAMETER4FNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_FLOAT,
        C_FLOAT
    );
    static final MethodHandle PFNGLPROGRAMPARAMETER4FNVPROC$MH = RuntimeHelper.downcallHandle(
        "(IIFFFF)V",
        constants$855.PFNGLPROGRAMPARAMETER4FNVPROC$FUNC, false
    );
}


