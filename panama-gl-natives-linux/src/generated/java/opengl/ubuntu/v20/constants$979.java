// Generated by jextract

package opengl.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$979 {

    static final FunctionDescriptor posix_memalign$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle posix_memalign$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "posix_memalign",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        constants$979.posix_memalign$FUNC, false
    );
    static final FunctionDescriptor aligned_alloc$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle aligned_alloc$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "aligned_alloc",
        "(JJ)Ljdk/incubator/foreign/MemoryAddress;",
        constants$979.aligned_alloc$FUNC, false
    );
    static final FunctionDescriptor abort$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle abort$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "abort",
        "()V",
        constants$979.abort$FUNC, false
    );
    static final FunctionDescriptor atexit$__func$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle atexit$__func$MH = RuntimeHelper.downcallHandle(
        "()V",
        constants$979.atexit$__func$FUNC, false
    );
    static final FunctionDescriptor atexit$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle atexit$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "atexit",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$979.atexit$FUNC, false
    );
}


