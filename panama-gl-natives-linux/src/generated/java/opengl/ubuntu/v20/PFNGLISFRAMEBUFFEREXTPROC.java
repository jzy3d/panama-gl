// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLISFRAMEBUFFEREXTPROC {

    byte apply(int x0);
    static MemoryAddress allocate(PFNGLISFRAMEBUFFEREXTPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLISFRAMEBUFFEREXTPROC.class, fi, constants$627.PFNGLISFRAMEBUFFEREXTPROC$FUNC, "(I)B");
    }
    static MemoryAddress allocate(PFNGLISFRAMEBUFFEREXTPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLISFRAMEBUFFEREXTPROC.class, fi, constants$627.PFNGLISFRAMEBUFFEREXTPROC$FUNC, "(I)B", scope);
    }
    static PFNGLISFRAMEBUFFEREXTPROC ofAddress(MemoryAddress addr) {
        return (int x0) -> {
            try {
                return (byte)constants$627.PFNGLISFRAMEBUFFEREXTPROC$MH.invokeExact((Addressable)addr, x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


