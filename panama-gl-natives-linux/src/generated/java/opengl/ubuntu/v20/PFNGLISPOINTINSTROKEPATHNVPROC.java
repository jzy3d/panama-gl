// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLISPOINTINSTROKEPATHNVPROC {

    byte apply(int x0, float x1, float x2);
    static MemoryAddress allocate(PFNGLISPOINTINSTROKEPATHNVPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLISPOINTINSTROKEPATHNVPROC.class, fi, constants$799.PFNGLISPOINTINSTROKEPATHNVPROC$FUNC, "(IFF)B");
    }
    static MemoryAddress allocate(PFNGLISPOINTINSTROKEPATHNVPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLISPOINTINSTROKEPATHNVPROC.class, fi, constants$799.PFNGLISPOINTINSTROKEPATHNVPROC$FUNC, "(IFF)B", scope);
    }
    static PFNGLISPOINTINSTROKEPATHNVPROC ofAddress(MemoryAddress addr) {
        return (int x0, float x1, float x2) -> {
            try {
                return (byte)constants$799.PFNGLISPOINTINSTROKEPATHNVPROC$MH.invokeExact((Addressable)addr, x0, x1, x2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


