// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLTESSELLATIONFACTORAMDPROC {

    void apply(float x0);
    static MemoryAddress allocate(PFNGLTESSELLATIONFACTORAMDPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLTESSELLATIONFACTORAMDPROC.class, fi, constants$474.PFNGLTESSELLATIONFACTORAMDPROC$FUNC, "(F)V");
    }
    static MemoryAddress allocate(PFNGLTESSELLATIONFACTORAMDPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLTESSELLATIONFACTORAMDPROC.class, fi, constants$474.PFNGLTESSELLATIONFACTORAMDPROC$FUNC, "(F)V", scope);
    }
    static PFNGLTESSELLATIONFACTORAMDPROC ofAddress(MemoryAddress addr) {
        return (float x0) -> {
            try {
                constants$474.PFNGLTESSELLATIONFACTORAMDPROC$MH.invokeExact((Addressable)addr, x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


