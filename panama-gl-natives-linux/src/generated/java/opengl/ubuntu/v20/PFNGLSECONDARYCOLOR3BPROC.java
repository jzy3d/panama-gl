// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLSECONDARYCOLOR3BPROC {

    void apply(byte x0, byte x1, byte x2);
    static MemoryAddress allocate(PFNGLSECONDARYCOLOR3BPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLSECONDARYCOLOR3BPROC.class, fi, constants$95.PFNGLSECONDARYCOLOR3BPROC$FUNC, "(BBB)V");
    }
    static MemoryAddress allocate(PFNGLSECONDARYCOLOR3BPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLSECONDARYCOLOR3BPROC.class, fi, constants$95.PFNGLSECONDARYCOLOR3BPROC$FUNC, "(BBB)V", scope);
    }
    static PFNGLSECONDARYCOLOR3BPROC ofAddress(MemoryAddress addr) {
        return (byte x0, byte x1, byte x2) -> {
            try {
                constants$95.PFNGLSECONDARYCOLOR3BPROC$MH.invokeExact((Addressable)addr, x0, x1, x2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


