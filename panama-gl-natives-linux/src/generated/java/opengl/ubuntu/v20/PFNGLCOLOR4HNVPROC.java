// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLCOLOR4HNVPROC {

    void apply(short x0, short x1, short x2, short x3);
    static MemoryAddress allocate(PFNGLCOLOR4HNVPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLCOLOR4HNVPROC.class, fi, constants$767.PFNGLCOLOR4HNVPROC$FUNC, "(SSSS)V");
    }
    static MemoryAddress allocate(PFNGLCOLOR4HNVPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLCOLOR4HNVPROC.class, fi, constants$767.PFNGLCOLOR4HNVPROC$FUNC, "(SSSS)V", scope);
    }
    static PFNGLCOLOR4HNVPROC ofAddress(MemoryAddress addr) {
        return (short x0, short x1, short x2, short x3) -> {
            try {
                constants$767.PFNGLCOLOR4HNVPROC$MH.invokeExact((Addressable)addr, x0, x1, x2, x3);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


