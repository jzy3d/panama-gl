// Generated by jextract

package opengl.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$37 {

    static final FunctionDescriptor glGetPointerv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glGetPointerv$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glGetPointerv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$37.glGetPointerv$FUNC, false
    );
    static final FunctionDescriptor glArrayElement$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glArrayElement$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glArrayElement",
        "(I)V",
        constants$37.glArrayElement$FUNC, false
    );
    static final FunctionDescriptor glDrawArrays$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glDrawArrays$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glDrawArrays",
        "(III)V",
        constants$37.glDrawArrays$FUNC, false
    );
    static final FunctionDescriptor glDrawElements$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glDrawElements$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glDrawElements",
        "(IIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$37.glDrawElements$FUNC, false
    );
    static final FunctionDescriptor glInterleavedArrays$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glInterleavedArrays$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glInterleavedArrays",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$37.glInterleavedArrays$FUNC, false
    );
    static final FunctionDescriptor glShadeModel$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glShadeModel$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glShadeModel",
        "(I)V",
        constants$37.glShadeModel$FUNC, false
    );
}


