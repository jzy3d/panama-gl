// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLUNIFORM3I64NVPROC {

    void apply(int x0, long x1, long x2, long x3);
    static MemoryAddress allocate(PFNGLUNIFORM3I64NVPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLUNIFORM3I64NVPROC.class, fi, constants$456.PFNGLUNIFORM3I64NVPROC$FUNC, "(IJJJ)V");
    }
    static MemoryAddress allocate(PFNGLUNIFORM3I64NVPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLUNIFORM3I64NVPROC.class, fi, constants$456.PFNGLUNIFORM3I64NVPROC$FUNC, "(IJJJ)V", scope);
    }
    static PFNGLUNIFORM3I64NVPROC ofAddress(MemoryAddress addr) {
        return (int x0, long x1, long x2, long x3) -> {
            try {
                constants$456.PFNGLUNIFORM3I64NVPROC$MH.invokeExact((Addressable)addr, x0, x1, x2, x3);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


