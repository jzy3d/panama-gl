// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLMULTITEXCOORD4BOESPROC {

    void apply(int x0, byte x1, byte x2, byte x3, byte x4);
    static MemoryAddress allocate(PFNGLMULTITEXCOORD4BOESPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLMULTITEXCOORD4BOESPROC.class, fi, constants$408.PFNGLMULTITEXCOORD4BOESPROC$FUNC, "(IBBBB)V");
    }
    static MemoryAddress allocate(PFNGLMULTITEXCOORD4BOESPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLMULTITEXCOORD4BOESPROC.class, fi, constants$408.PFNGLMULTITEXCOORD4BOESPROC$FUNC, "(IBBBB)V", scope);
    }
    static PFNGLMULTITEXCOORD4BOESPROC ofAddress(MemoryAddress addr) {
        return (int x0, byte x1, byte x2, byte x3, byte x4) -> {
            try {
                constants$408.PFNGLMULTITEXCOORD4BOESPROC$MH.invokeExact((Addressable)addr, x0, x1, x2, x3, x4);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


