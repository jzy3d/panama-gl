// Generated by jextract

package opengl.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_CHAR;
import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$800 {

    static final FunctionDescriptor PFNGLPOINTALONGPATHNVPROC$FUNC = FunctionDescriptor.of(C_CHAR,
        C_INT,
        C_INT,
        C_INT,
        C_FLOAT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PFNGLPOINTALONGPATHNVPROC$MH = RuntimeHelper.downcallHandle(
        "(IIIFLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)B",
        constants$800.PFNGLPOINTALONGPATHNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLMATRIXLOAD3X2FNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXLOAD3X2FNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$800.PFNGLMATRIXLOAD3X2FNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLMATRIXLOAD3X3FNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXLOAD3X3FNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$800.PFNGLMATRIXLOAD3X3FNVPROC$FUNC, false
    );
}


