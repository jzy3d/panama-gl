// Generated by jextract

package opengl.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLVERTEXSTREAM3SATIPROC {

    void apply(int x0, short x1, short x2, short x3);
    static MemoryAddress allocate(PFNGLVERTEXSTREAM3SATIPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLVERTEXSTREAM3SATIPROC.class, fi, constants$506.PFNGLVERTEXSTREAM3SATIPROC$FUNC, "(ISSS)V");
    }
    static MemoryAddress allocate(PFNGLVERTEXSTREAM3SATIPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLVERTEXSTREAM3SATIPROC.class, fi, constants$506.PFNGLVERTEXSTREAM3SATIPROC$FUNC, "(ISSS)V", scope);
    }
    static PFNGLVERTEXSTREAM3SATIPROC ofAddress(MemoryAddress addr) {
        return (int x0, short x1, short x2, short x3) -> {
            try {
                constants$506.PFNGLVERTEXSTREAM3SATIPROC$MH.invokeExact((Addressable)addr, x0, x1, x2, x3);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


