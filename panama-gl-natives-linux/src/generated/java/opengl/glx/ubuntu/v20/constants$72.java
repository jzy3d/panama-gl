// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$72 {

    static final FunctionDescriptor XInternalConnectionNumbers$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XInternalConnectionNumbers$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XInternalConnectionNumbers",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$72.XInternalConnectionNumbers$FUNC, false
    );
    static final FunctionDescriptor XProcessInternalConnection$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle XProcessInternalConnection$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XProcessInternalConnection",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$72.XProcessInternalConnection$FUNC, false
    );
    static final FunctionDescriptor XAddConnectionWatch$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XAddConnectionWatch$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XAddConnectionWatch",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$72.XAddConnectionWatch$FUNC, false
    );
    static final FunctionDescriptor XRemoveConnectionWatch$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XRemoveConnectionWatch$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XRemoveConnectionWatch",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$72.XRemoveConnectionWatch$FUNC, false
    );
    static final FunctionDescriptor XSetAuthorization$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XSetAuthorization$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetAuthorization",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)V",
        constants$72.XSetAuthorization$FUNC, false
    );
    static final FunctionDescriptor _Xmbtowc$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle _Xmbtowc$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "_Xmbtowc",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$72._Xmbtowc$FUNC, false
    );
}


