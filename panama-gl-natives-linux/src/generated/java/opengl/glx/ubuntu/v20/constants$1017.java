// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1017 {

    static final FunctionDescriptor glXGetConfig$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glXGetConfig$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXGetConfig",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1017.glXGetConfig$FUNC, false
    );
    static final FunctionDescriptor glXGetCurrentContext$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle glXGetCurrentContext$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXGetCurrentContext",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$1017.glXGetCurrentContext$FUNC, false
    );
    static final FunctionDescriptor glXGetCurrentDrawable$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle glXGetCurrentDrawable$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXGetCurrentDrawable",
        "()J",
        constants$1017.glXGetCurrentDrawable$FUNC, false
    );
    static final FunctionDescriptor glXWaitGL$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glXWaitGL$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXWaitGL",
        "()V",
        constants$1017.glXWaitGL$FUNC, false
    );
    static final FunctionDescriptor glXWaitX$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glXWaitX$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXWaitX",
        "()V",
        constants$1017.glXWaitX$FUNC, false
    );
    static final FunctionDescriptor glXUseXFont$FUNC = FunctionDescriptor.ofVoid(
        C_LONG,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glXUseXFont$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXUseXFont",
        "(JIII)V",
        constants$1017.glXUseXFont$FUNC, false
    );
}


