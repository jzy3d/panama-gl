// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$126 {

    static final FunctionDescriptor glColorMaterial$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glColorMaterial$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glColorMaterial",
        "(II)V",
        constants$126.glColorMaterial$FUNC, false
    );
    static final FunctionDescriptor glPixelZoom$FUNC = FunctionDescriptor.ofVoid(
        C_FLOAT,
        C_FLOAT
    );
    static final MethodHandle glPixelZoom$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glPixelZoom",
        "(FF)V",
        constants$126.glPixelZoom$FUNC, false
    );
    static final FunctionDescriptor glPixelStoref$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT
    );
    static final MethodHandle glPixelStoref$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glPixelStoref",
        "(IF)V",
        constants$126.glPixelStoref$FUNC, false
    );
    static final FunctionDescriptor glPixelStorei$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glPixelStorei$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glPixelStorei",
        "(II)V",
        constants$126.glPixelStorei$FUNC, false
    );
    static final FunctionDescriptor glPixelTransferf$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT
    );
    static final MethodHandle glPixelTransferf$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glPixelTransferf",
        "(IF)V",
        constants$126.glPixelTransferf$FUNC, false
    );
    static final FunctionDescriptor glPixelTransferi$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glPixelTransferi$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glPixelTransferi",
        "(II)V",
        constants$126.glPixelTransferi$FUNC, false
    );
}


