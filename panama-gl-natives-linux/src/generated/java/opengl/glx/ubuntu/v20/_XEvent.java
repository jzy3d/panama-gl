// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_CHAR;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import static jdk.incubator.foreign.CLinker.C_SHORT;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.MemoryLayout;
import jdk.incubator.foreign.MemorySegment;
import jdk.incubator.foreign.ResourceScope;
import jdk.incubator.foreign.SegmentAllocator;
public class _XEvent {

    static final MemoryLayout $union$LAYOUT = MemoryLayout.unionLayout(
        C_INT.withName("type"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window")
        ).withName("xany"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_LONG.withName("root"),
            C_LONG.withName("subwindow"),
            C_LONG.withName("time"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("x_root"),
            C_INT.withName("y_root"),
            C_INT.withName("state"),
            C_INT.withName("keycode"),
            C_INT.withName("same_screen"),
            MemoryLayout.paddingLayout(32)
        ).withName("xkey"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_LONG.withName("root"),
            C_LONG.withName("subwindow"),
            C_LONG.withName("time"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("x_root"),
            C_INT.withName("y_root"),
            C_INT.withName("state"),
            C_INT.withName("button"),
            C_INT.withName("same_screen"),
            MemoryLayout.paddingLayout(32)
        ).withName("xbutton"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_LONG.withName("root"),
            C_LONG.withName("subwindow"),
            C_LONG.withName("time"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("x_root"),
            C_INT.withName("y_root"),
            C_INT.withName("state"),
            C_CHAR.withName("is_hint"),
            MemoryLayout.paddingLayout(24),
            C_INT.withName("same_screen"),
            MemoryLayout.paddingLayout(32)
        ).withName("xmotion"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_LONG.withName("root"),
            C_LONG.withName("subwindow"),
            C_LONG.withName("time"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("x_root"),
            C_INT.withName("y_root"),
            C_INT.withName("mode"),
            C_INT.withName("detail"),
            C_INT.withName("same_screen"),
            C_INT.withName("focus"),
            C_INT.withName("state"),
            MemoryLayout.paddingLayout(32)
        ).withName("xcrossing"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_INT.withName("mode"),
            C_INT.withName("detail")
        ).withName("xfocus"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("width"),
            C_INT.withName("height"),
            C_INT.withName("count"),
            MemoryLayout.paddingLayout(32)
        ).withName("xexpose"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("drawable"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("width"),
            C_INT.withName("height"),
            C_INT.withName("count"),
            C_INT.withName("major_code"),
            C_INT.withName("minor_code"),
            MemoryLayout.paddingLayout(32)
        ).withName("xgraphicsexpose"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("drawable"),
            C_INT.withName("major_code"),
            C_INT.withName("minor_code")
        ).withName("xnoexpose"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_INT.withName("state"),
            MemoryLayout.paddingLayout(32)
        ).withName("xvisibility"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("parent"),
            C_LONG.withName("window"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("width"),
            C_INT.withName("height"),
            C_INT.withName("border_width"),
            C_INT.withName("override_redirect")
        ).withName("xcreatewindow"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("event"),
            C_LONG.withName("window")
        ).withName("xdestroywindow"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("event"),
            C_LONG.withName("window"),
            C_INT.withName("from_configure"),
            MemoryLayout.paddingLayout(32)
        ).withName("xunmap"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("event"),
            C_LONG.withName("window"),
            C_INT.withName("override_redirect"),
            MemoryLayout.paddingLayout(32)
        ).withName("xmap"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("parent"),
            C_LONG.withName("window")
        ).withName("xmaprequest"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("event"),
            C_LONG.withName("window"),
            C_LONG.withName("parent"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("override_redirect"),
            MemoryLayout.paddingLayout(32)
        ).withName("xreparent"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("event"),
            C_LONG.withName("window"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("width"),
            C_INT.withName("height"),
            C_INT.withName("border_width"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("above"),
            C_INT.withName("override_redirect"),
            MemoryLayout.paddingLayout(32)
        ).withName("xconfigure"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("event"),
            C_LONG.withName("window"),
            C_INT.withName("x"),
            C_INT.withName("y")
        ).withName("xgravity"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_INT.withName("width"),
            C_INT.withName("height")
        ).withName("xresizerequest"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("parent"),
            C_LONG.withName("window"),
            C_INT.withName("x"),
            C_INT.withName("y"),
            C_INT.withName("width"),
            C_INT.withName("height"),
            C_INT.withName("border_width"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("above"),
            C_INT.withName("detail"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("value_mask")
        ).withName("xconfigurerequest"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("event"),
            C_LONG.withName("window"),
            C_INT.withName("place"),
            MemoryLayout.paddingLayout(32)
        ).withName("xcirculate"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("parent"),
            C_LONG.withName("window"),
            C_INT.withName("place"),
            MemoryLayout.paddingLayout(32)
        ).withName("xcirculaterequest"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_LONG.withName("atom"),
            C_LONG.withName("time"),
            C_INT.withName("state"),
            MemoryLayout.paddingLayout(32)
        ).withName("xproperty"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_LONG.withName("selection"),
            C_LONG.withName("time")
        ).withName("xselectionclear"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("owner"),
            C_LONG.withName("requestor"),
            C_LONG.withName("selection"),
            C_LONG.withName("target"),
            C_LONG.withName("property"),
            C_LONG.withName("time")
        ).withName("xselectionrequest"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("requestor"),
            C_LONG.withName("selection"),
            C_LONG.withName("target"),
            C_LONG.withName("property"),
            C_LONG.withName("time")
        ).withName("xselection"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_LONG.withName("colormap"),
            C_INT.withName("new"),
            C_INT.withName("state")
        ).withName("xcolormap"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_LONG.withName("message_type"),
            C_INT.withName("format"),
            MemoryLayout.paddingLayout(32),
            MemoryLayout.unionLayout(
                MemoryLayout.sequenceLayout(20, C_CHAR).withName("b"),
                MemoryLayout.sequenceLayout(10, C_SHORT).withName("s"),
                MemoryLayout.sequenceLayout(5, C_LONG).withName("l")
            ).withName("data")
        ).withName("xclient"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            C_INT.withName("request"),
            C_INT.withName("first_keycode"),
            C_INT.withName("count"),
            MemoryLayout.paddingLayout(32)
        ).withName("xmapping"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("resourceid"),
            C_LONG.withName("serial"),
            C_CHAR.withName("error_code"),
            C_CHAR.withName("request_code"),
            C_CHAR.withName("minor_code"),
            MemoryLayout.paddingLayout(40)
        ).withName("xerror"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_LONG.withName("window"),
            MemoryLayout.sequenceLayout(32, C_CHAR).withName("key_vector")
        ).withName("xkeymap"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_INT.withName("extension"),
            C_INT.withName("evtype")
        ).withName("xgeneric"),
        MemoryLayout.structLayout(
            C_INT.withName("type"),
            MemoryLayout.paddingLayout(32),
            C_LONG.withName("serial"),
            C_INT.withName("send_event"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("display"),
            C_INT.withName("extension"),
            C_INT.withName("evtype"),
            C_INT.withName("cookie"),
            MemoryLayout.paddingLayout(32),
            C_POINTER.withName("data")
        ).withName("xcookie"),
        MemoryLayout.sequenceLayout(24, C_LONG).withName("pad")
    ).withName("_XEvent");
    public static MemoryLayout $LAYOUT() {
        return _XEvent.$union$LAYOUT;
    }
    static final VarHandle type$VH = $union$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("type"));
    public static VarHandle type$VH() {
        return _XEvent.type$VH;
    }
    public static int type$get(MemorySegment seg) {
        return (int)_XEvent.type$VH.get(seg);
    }
    public static void type$set( MemorySegment seg, int x) {
        _XEvent.type$VH.set(seg, x);
    }
    public static int type$get(MemorySegment seg, long index) {
        return (int)_XEvent.type$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void type$set(MemorySegment seg, long index, int x) {
        _XEvent.type$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment xany$slice(MemorySegment seg) {
        return seg.asSlice(0, 40);
    }
    public static MemorySegment xkey$slice(MemorySegment seg) {
        return seg.asSlice(0, 96);
    }
    public static MemorySegment xbutton$slice(MemorySegment seg) {
        return seg.asSlice(0, 96);
    }
    public static MemorySegment xmotion$slice(MemorySegment seg) {
        return seg.asSlice(0, 96);
    }
    public static MemorySegment xcrossing$slice(MemorySegment seg) {
        return seg.asSlice(0, 104);
    }
    public static MemorySegment xfocus$slice(MemorySegment seg) {
        return seg.asSlice(0, 48);
    }
    public static MemorySegment xexpose$slice(MemorySegment seg) {
        return seg.asSlice(0, 64);
    }
    public static MemorySegment xgraphicsexpose$slice(MemorySegment seg) {
        return seg.asSlice(0, 72);
    }
    public static MemorySegment xnoexpose$slice(MemorySegment seg) {
        return seg.asSlice(0, 48);
    }
    public static MemorySegment xvisibility$slice(MemorySegment seg) {
        return seg.asSlice(0, 48);
    }
    public static MemorySegment xcreatewindow$slice(MemorySegment seg) {
        return seg.asSlice(0, 72);
    }
    public static MemorySegment xdestroywindow$slice(MemorySegment seg) {
        return seg.asSlice(0, 48);
    }
    public static MemorySegment xunmap$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment xmap$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment xmaprequest$slice(MemorySegment seg) {
        return seg.asSlice(0, 48);
    }
    public static MemorySegment xreparent$slice(MemorySegment seg) {
        return seg.asSlice(0, 72);
    }
    public static MemorySegment xconfigure$slice(MemorySegment seg) {
        return seg.asSlice(0, 88);
    }
    public static MemorySegment xgravity$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment xresizerequest$slice(MemorySegment seg) {
        return seg.asSlice(0, 48);
    }
    public static MemorySegment xconfigurerequest$slice(MemorySegment seg) {
        return seg.asSlice(0, 96);
    }
    public static MemorySegment xcirculate$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment xcirculaterequest$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment xproperty$slice(MemorySegment seg) {
        return seg.asSlice(0, 64);
    }
    public static MemorySegment xselectionclear$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment xselectionrequest$slice(MemorySegment seg) {
        return seg.asSlice(0, 80);
    }
    public static MemorySegment xselection$slice(MemorySegment seg) {
        return seg.asSlice(0, 72);
    }
    public static MemorySegment xcolormap$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment xclient$slice(MemorySegment seg) {
        return seg.asSlice(0, 96);
    }
    public static MemorySegment xmapping$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment xerror$slice(MemorySegment seg) {
        return seg.asSlice(0, 40);
    }
    public static MemorySegment xkeymap$slice(MemorySegment seg) {
        return seg.asSlice(0, 72);
    }
    public static MemorySegment xgeneric$slice(MemorySegment seg) {
        return seg.asSlice(0, 40);
    }
    public static MemorySegment xcookie$slice(MemorySegment seg) {
        return seg.asSlice(0, 56);
    }
    public static MemorySegment pad$slice(MemorySegment seg) {
        return seg.asSlice(0, 192);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


