// Generated by jextract

package opengl.glx.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLTEXCOORD1BOESPROC {

    void apply(byte x0);
    static MemoryAddress allocate(PFNGLTEXCOORD1BOESPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLTEXCOORD1BOESPROC.class, fi, constants$494.PFNGLTEXCOORD1BOESPROC$FUNC, "(B)V");
    }
    static MemoryAddress allocate(PFNGLTEXCOORD1BOESPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLTEXCOORD1BOESPROC.class, fi, constants$494.PFNGLTEXCOORD1BOESPROC$FUNC, "(B)V", scope);
    }
    static PFNGLTEXCOORD1BOESPROC ofAddress(MemoryAddress addr) {
        return (byte x0) -> {
            try {
                constants$494.PFNGLTEXCOORD1BOESPROC$MH.invokeExact((Addressable)addr, x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


