// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$49 {

    static final FunctionDescriptor XRemoveHosts$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XRemoveHosts$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XRemoveHosts",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$49.XRemoveHosts$FUNC, false
    );
    static final FunctionDescriptor XReparentWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_INT,
        C_INT
    );
    static final MethodHandle XReparentWindow$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XReparentWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;JJII)I",
        constants$49.XReparentWindow$FUNC, false
    );
    static final FunctionDescriptor XResetScreenSaver$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle XResetScreenSaver$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XResetScreenSaver",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$49.XResetScreenSaver$FUNC, false
    );
    static final FunctionDescriptor XResizeWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT,
        C_INT
    );
    static final MethodHandle XResizeWindow$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XResizeWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;JII)I",
        constants$49.XResizeWindow$FUNC, false
    );
    static final FunctionDescriptor XRestackWindows$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XRestackWindows$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XRestackWindows",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$49.XRestackWindows$FUNC, false
    );
    static final FunctionDescriptor XRotateBuffers$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XRotateBuffers$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XRotateBuffers",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$49.XRotateBuffers$FUNC, false
    );
}


