// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$76 {

    static final FunctionDescriptor XGetNormalHints$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle XGetNormalHints$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetNormalHints",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$76.XGetNormalHints$FUNC, false
    );
    static final FunctionDescriptor XGetRGBColormaps$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XGetRGBColormaps$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetRGBColormaps",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$76.XGetRGBColormaps$FUNC, false
    );
    static final FunctionDescriptor XGetSizeHints$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XGetSizeHints$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetSizeHints",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        constants$76.XGetSizeHints$FUNC, false
    );
    static final FunctionDescriptor XGetStandardColormap$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XGetStandardColormap$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetStandardColormap",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        constants$76.XGetStandardColormap$FUNC, false
    );
    static final FunctionDescriptor XGetTextProperty$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XGetTextProperty$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetTextProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        constants$76.XGetTextProperty$FUNC, false
    );
    static final FunctionDescriptor XGetVisualInfo$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XGetVisualInfo$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetVisualInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$76.XGetVisualInfo$FUNC, false
    );
}


