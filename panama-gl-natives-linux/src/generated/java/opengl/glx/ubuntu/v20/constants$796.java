// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$796 {

    static final FunctionDescriptor PFNGLGETPERFQUERYINFOINTELPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PFNGLGETPERFQUERYINFOINTELPROC$MH = RuntimeHelper.downcallHandle(
        "(IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$796.PFNGLGETPERFQUERYINFOINTELPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLFRAMEBUFFERPARAMETERIMESAPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle PFNGLFRAMEBUFFERPARAMETERIMESAPROC$MH = RuntimeHelper.downcallHandle(
        "(III)V",
        constants$796.PFNGLFRAMEBUFFERPARAMETERIMESAPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC$MH = RuntimeHelper.downcallHandle(
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$796.PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC$FUNC, false
    );
}


