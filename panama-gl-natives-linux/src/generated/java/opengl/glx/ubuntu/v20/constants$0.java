// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_SHORT;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$0 {

    static final FunctionDescriptor __bswap_16$FUNC = FunctionDescriptor.of(C_SHORT,
        C_SHORT
    );
    static final MethodHandle __bswap_16$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "__bswap_16",
        "(S)S",
        constants$0.__bswap_16$FUNC, false
    );
    static final FunctionDescriptor __bswap_32$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle __bswap_32$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "__bswap_32",
        "(I)I",
        constants$0.__bswap_32$FUNC, false
    );
    static final FunctionDescriptor __bswap_64$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final MethodHandle __bswap_64$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "__bswap_64",
        "(J)J",
        constants$0.__bswap_64$FUNC, false
    );
    static final FunctionDescriptor __uint16_identity$FUNC = FunctionDescriptor.of(C_SHORT,
        C_SHORT
    );
    static final MethodHandle __uint16_identity$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "__uint16_identity",
        "(S)S",
        constants$0.__uint16_identity$FUNC, false
    );
    static final FunctionDescriptor __uint32_identity$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle __uint32_identity$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "__uint32_identity",
        "(I)I",
        constants$0.__uint32_identity$FUNC, false
    );
    static final FunctionDescriptor __uint64_identity$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final MethodHandle __uint64_identity$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "__uint64_identity",
        "(J)J",
        constants$0.__uint64_identity$FUNC, false
    );
}


