// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$2 {

    static final FunctionDescriptor XICProc$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XICProc$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$2.XICProc$FUNC, false
    );
    static final FunctionDescriptor XIDProc$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XIDProc$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$2.XIDProc$FUNC, false
    );
    static final MemoryLayout _Xdebug$LAYOUT = C_INT;
    static final VarHandle _Xdebug$VH = constants$2._Xdebug$LAYOUT.varHandle(int.class);
    static final MemorySegment _Xdebug$SEGMENT = RuntimeHelper.lookupGlobalVariable(glx_h.LIBRARIES, "_Xdebug", constants$2._Xdebug$LAYOUT);
    static final FunctionDescriptor XLoadQueryFont$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XLoadQueryFont$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XLoadQueryFont",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$2.XLoadQueryFont$FUNC, false
    );
    static final FunctionDescriptor XQueryFont$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XQueryFont$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XQueryFont",
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$2.XQueryFont$FUNC, false
    );
}


