// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$67 {

    static final FunctionDescriptor XwcDrawString$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XwcDrawString$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XwcDrawString",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)V",
        constants$67.XwcDrawString$FUNC, false
    );
    static final FunctionDescriptor Xutf8DrawString$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle Xutf8DrawString$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "Xutf8DrawString",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)V",
        constants$67.Xutf8DrawString$FUNC, false
    );
    static final FunctionDescriptor XmbDrawImageString$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XmbDrawImageString$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XmbDrawImageString",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)V",
        constants$67.XmbDrawImageString$FUNC, false
    );
    static final FunctionDescriptor XwcDrawImageString$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XwcDrawImageString$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XwcDrawImageString",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)V",
        constants$67.XwcDrawImageString$FUNC, false
    );
    static final FunctionDescriptor Xutf8DrawImageString$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle Xutf8DrawImageString$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "Xutf8DrawImageString",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)V",
        constants$67.Xutf8DrawImageString$FUNC, false
    );
    static final FunctionDescriptor XOpenIM$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XOpenIM$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XOpenIM",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$67.XOpenIM$FUNC, false
    );
}


