// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$1061 {

    static final FunctionDescriptor glXReleaseTexImageARB$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle glXReleaseTexImageARB$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXReleaseTexImageARB",
        "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$1061.glXReleaseTexImageARB$FUNC, false
    );
    static final FunctionDescriptor glXDrawableAttribARB$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle glXDrawableAttribARB$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXDrawableAttribARB",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$1061.glXDrawableAttribARB$FUNC, false
    );
    static final FunctionDescriptor glXGetFrameUsageMESA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle glXGetFrameUsageMESA$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXGetFrameUsageMESA",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$1061.glXGetFrameUsageMESA$FUNC, false
    );
    static final FunctionDescriptor glXBeginFrameTrackingMESA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle glXBeginFrameTrackingMESA$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXBeginFrameTrackingMESA",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$1061.glXBeginFrameTrackingMESA$FUNC, false
    );
    static final FunctionDescriptor glXEndFrameTrackingMESA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle glXEndFrameTrackingMESA$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXEndFrameTrackingMESA",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$1061.glXEndFrameTrackingMESA$FUNC, false
    );
    static final FunctionDescriptor glXQueryFrameTrackingMESA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle glXQueryFrameTrackingMESA$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXQueryFrameTrackingMESA",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1061.glXQueryFrameTrackingMESA$FUNC, false
    );
}


