// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$59 {

    static final FunctionDescriptor XUngrabKeyboard$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XUngrabKeyboard$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XUngrabKeyboard",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$59.XUngrabKeyboard$FUNC, false
    );
    static final FunctionDescriptor XUngrabPointer$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XUngrabPointer$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XUngrabPointer",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$59.XUngrabPointer$FUNC, false
    );
    static final FunctionDescriptor XUngrabServer$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle XUngrabServer$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XUngrabServer",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$59.XUngrabServer$FUNC, false
    );
    static final FunctionDescriptor XUninstallColormap$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XUninstallColormap$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XUninstallColormap",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$59.XUninstallColormap$FUNC, false
    );
    static final FunctionDescriptor XUnloadFont$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XUnloadFont$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XUnloadFont",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$59.XUnloadFont$FUNC, false
    );
    static final FunctionDescriptor XUnmapSubwindows$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XUnmapSubwindows$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XUnmapSubwindows",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$59.XUnmapSubwindows$FUNC, false
    );
}


