// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$156 {

    static final FunctionDescriptor glLoadTransposeMatrixf$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glLoadTransposeMatrixf$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glLoadTransposeMatrixf",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$156.glLoadTransposeMatrixf$FUNC, false
    );
    static final FunctionDescriptor glMultTransposeMatrixd$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glMultTransposeMatrixd$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMultTransposeMatrixd",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$156.glMultTransposeMatrixd$FUNC, false
    );
    static final FunctionDescriptor glMultTransposeMatrixf$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glMultTransposeMatrixf$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMultTransposeMatrixf",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$156.glMultTransposeMatrixf$FUNC, false
    );
    static final FunctionDescriptor glSampleCoverage$FUNC = FunctionDescriptor.ofVoid(
        C_FLOAT,
        C_CHAR
    );
    static final MethodHandle glSampleCoverage$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glSampleCoverage",
        "(FB)V",
        constants$156.glSampleCoverage$FUNC, false
    );
    static final FunctionDescriptor PFNGLACTIVETEXTUREPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle PFNGLACTIVETEXTUREPROC$MH = RuntimeHelper.downcallHandle(
        "(I)V",
        constants$156.PFNGLACTIVETEXTUREPROC$FUNC, false
    );
}


