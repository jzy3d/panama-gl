// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$80 {

    static final FunctionDescriptor XSetNormalHints$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle XSetNormalHints$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetNormalHints",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$80.XSetNormalHints$FUNC, false
    );
    static final FunctionDescriptor XSetRGBColormaps$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_LONG
    );
    static final MethodHandle XSetRGBColormaps$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetRGBColormaps",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;IJ)V",
        constants$80.XSetRGBColormaps$FUNC, false
    );
    static final FunctionDescriptor XSetSizeHints$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XSetSizeHints$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetSizeHints",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        constants$80.XSetSizeHints$FUNC, false
    );
    static final FunctionDescriptor XSetStandardProperties$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle XSetStandardProperties$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetStandardProperties",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$80.XSetStandardProperties$FUNC, false
    );
    static final FunctionDescriptor XSetTextProperty$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XSetTextProperty$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetTextProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)V",
        constants$80.XSetTextProperty$FUNC, false
    );
    static final FunctionDescriptor XSetWMClientMachine$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle XSetWMClientMachine$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetWMClientMachine",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)V",
        constants$80.XSetWMClientMachine$FUNC, false
    );
}


