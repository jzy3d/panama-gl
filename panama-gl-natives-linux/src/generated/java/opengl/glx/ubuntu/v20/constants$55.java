// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$55 {

    static final FunctionDescriptor XSetSubwindowMode$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XSetSubwindowMode$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetSubwindowMode",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$55.XSetSubwindowMode$FUNC, false
    );
    static final FunctionDescriptor XSetTSOrigin$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle XSetTSOrigin$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetTSOrigin",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$55.XSetTSOrigin$FUNC, false
    );
    static final FunctionDescriptor XSetTile$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XSetTile$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetTile",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$55.XSetTile$FUNC, false
    );
    static final FunctionDescriptor XSetWindowBackground$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle XSetWindowBackground$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetWindowBackground",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        constants$55.XSetWindowBackground$FUNC, false
    );
    static final FunctionDescriptor XSetWindowBackgroundPixmap$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle XSetWindowBackgroundPixmap$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetWindowBackgroundPixmap",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        constants$55.XSetWindowBackgroundPixmap$FUNC, false
    );
    static final FunctionDescriptor XSetWindowBorder$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle XSetWindowBorder$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetWindowBorder",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        constants$55.XSetWindowBorder$FUNC, false
    );
}


