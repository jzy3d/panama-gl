// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1028 {

    static final FunctionDescriptor glXGetProcAddress$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle glXGetProcAddress$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glXGetProcAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1028.glXGetProcAddress$FUNC, false
    );
    static final FunctionDescriptor PFNGLXGETPROCADDRESSPROC$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle PFNGLXGETPROCADDRESSPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1028.PFNGLXGETPROCADDRESSPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLXCREATECONTEXTATTRIBSARBPROC$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLXCREATECONTEXTATTRIBSARBPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1028.PFNGLXCREATECONTEXTATTRIBSARBPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLXGETGPUIDSAMDPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
}


