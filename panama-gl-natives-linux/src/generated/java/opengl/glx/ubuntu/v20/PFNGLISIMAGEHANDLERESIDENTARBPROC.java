// Generated by jextract

package opengl.glx.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLISIMAGEHANDLERESIDENTARBPROC {

    byte apply(long x0);
    static MemoryAddress allocate(PFNGLISIMAGEHANDLERESIDENTARBPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLISIMAGEHANDLERESIDENTARBPROC.class, fi, constants$402.PFNGLISIMAGEHANDLERESIDENTARBPROC$FUNC, "(J)B");
    }
    static MemoryAddress allocate(PFNGLISIMAGEHANDLERESIDENTARBPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLISIMAGEHANDLERESIDENTARBPROC.class, fi, constants$402.PFNGLISIMAGEHANDLERESIDENTARBPROC$FUNC, "(J)B", scope);
    }
    static PFNGLISIMAGEHANDLERESIDENTARBPROC ofAddress(MemoryAddress addr) {
        return (long x0) -> {
            try {
                return (byte)constants$402.PFNGLISIMAGEHANDLERESIDENTARBPROC$MH.invokeExact((Addressable)addr, x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


