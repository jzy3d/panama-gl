// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;
import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$138 {

    static final FunctionDescriptor glEvalCoord2fv$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glEvalCoord2fv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glEvalCoord2fv",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$138.glEvalCoord2fv$FUNC, false
    );
    static final FunctionDescriptor glMapGrid1d$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_DOUBLE,
        C_DOUBLE
    );
    static final MethodHandle glMapGrid1d$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMapGrid1d",
        "(IDD)V",
        constants$138.glMapGrid1d$FUNC, false
    );
    static final FunctionDescriptor glMapGrid1f$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT,
        C_FLOAT
    );
    static final MethodHandle glMapGrid1f$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMapGrid1f",
        "(IFF)V",
        constants$138.glMapGrid1f$FUNC, false
    );
    static final FunctionDescriptor glMapGrid2d$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_DOUBLE,
        C_DOUBLE,
        C_INT,
        C_DOUBLE,
        C_DOUBLE
    );
    static final MethodHandle glMapGrid2d$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMapGrid2d",
        "(IDDIDD)V",
        constants$138.glMapGrid2d$FUNC, false
    );
    static final FunctionDescriptor glMapGrid2f$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_INT,
        C_FLOAT,
        C_FLOAT
    );
    static final MethodHandle glMapGrid2f$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glMapGrid2f",
        "(IFFIFF)V",
        constants$138.glMapGrid2f$FUNC, false
    );
    static final FunctionDescriptor glEvalPoint1$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glEvalPoint1$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glEvalPoint1",
        "(I)V",
        constants$138.glEvalPoint1$FUNC, false
    );
}


