// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$42 {

    static final FunctionDescriptor XMapSubwindows$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XMapSubwindows$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XMapSubwindows",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$42.XMapSubwindows$FUNC, false
    );
    static final FunctionDescriptor XMapWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XMapWindow$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XMapWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$42.XMapWindow$FUNC, false
    );
    static final FunctionDescriptor XMaskEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle XMaskEvent$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XMaskEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$42.XMaskEvent$FUNC, false
    );
    static final FunctionDescriptor XMaxCmapsOfScreen$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle XMaxCmapsOfScreen$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XMaxCmapsOfScreen",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$42.XMaxCmapsOfScreen$FUNC, false
    );
    static final FunctionDescriptor XMinCmapsOfScreen$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle XMinCmapsOfScreen$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XMinCmapsOfScreen",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$42.XMinCmapsOfScreen$FUNC, false
    );
    static final FunctionDescriptor XMoveResizeWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle XMoveResizeWindow$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XMoveResizeWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;JIIII)I",
        constants$42.XMoveResizeWindow$FUNC, false
    );
}


