// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$78 {

    static final FunctionDescriptor XGetZoomHints$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle XGetZoomHints$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetZoomHints",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$78.XGetZoomHints$FUNC, false
    );
    static final FunctionDescriptor XIntersectRegion$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XIntersectRegion$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XIntersectRegion",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$78.XIntersectRegion$FUNC, false
    );
    static final FunctionDescriptor XConvertCase$FUNC = FunctionDescriptor.ofVoid(
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XConvertCase$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XConvertCase",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$78.XConvertCase$FUNC, false
    );
    static final FunctionDescriptor XLookupString$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XLookupString$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XLookupString",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$78.XLookupString$FUNC, false
    );
    static final FunctionDescriptor XMatchVisualInfo$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle XMatchVisualInfo$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XMatchVisualInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)I",
        constants$78.XMatchVisualInfo$FUNC, false
    );
    static final FunctionDescriptor XOffsetRegion$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle XOffsetRegion$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XOffsetRegion",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$78.XOffsetRegion$FUNC, false
    );
}


