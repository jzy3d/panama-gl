// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;
import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import static jdk.incubator.foreign.CLinker.C_SHORT;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$120 {

    static final FunctionDescriptor glRectd$FUNC = FunctionDescriptor.ofVoid(
        C_DOUBLE,
        C_DOUBLE,
        C_DOUBLE,
        C_DOUBLE
    );
    static final MethodHandle glRectd$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glRectd",
        "(DDDD)V",
        constants$120.glRectd$FUNC, false
    );
    static final FunctionDescriptor glRectf$FUNC = FunctionDescriptor.ofVoid(
        C_FLOAT,
        C_FLOAT,
        C_FLOAT,
        C_FLOAT
    );
    static final MethodHandle glRectf$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glRectf",
        "(FFFF)V",
        constants$120.glRectf$FUNC, false
    );
    static final FunctionDescriptor glRecti$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glRecti$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glRecti",
        "(IIII)V",
        constants$120.glRecti$FUNC, false
    );
    static final FunctionDescriptor glRects$FUNC = FunctionDescriptor.ofVoid(
        C_SHORT,
        C_SHORT,
        C_SHORT,
        C_SHORT
    );
    static final MethodHandle glRects$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glRects",
        "(SSSS)V",
        constants$120.glRects$FUNC, false
    );
    static final FunctionDescriptor glRectdv$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle glRectdv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glRectdv",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$120.glRectdv$FUNC, false
    );
    static final FunctionDescriptor glRectfv$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle glRectfv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glRectfv",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$120.glRectfv$FUNC, false
    );
}


