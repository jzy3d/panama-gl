// Generated by jextract

package opengl.glx.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC {

    jdk.incubator.foreign.MemoryAddress apply(int x0, jdk.incubator.foreign.MemoryAddress x1);
    static MemoryAddress allocate(PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC.class, fi, constants$1029.PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC$FUNC, "(ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;");
    }
    static MemoryAddress allocate(PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC.class, fi, constants$1029.PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC$FUNC, "(ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;", scope);
    }
    static PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC ofAddress(MemoryAddress addr) {
        return (int x0, jdk.incubator.foreign.MemoryAddress x1) -> {
            try {
                return (jdk.incubator.foreign.MemoryAddress)constants$1030.PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC$MH.invokeExact((Addressable)addr, x0, x1);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


