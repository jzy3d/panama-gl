// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$140 {

    static final FunctionDescriptor glFogiv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glFogiv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glFogiv",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$140.glFogiv$FUNC, false
    );
    static final FunctionDescriptor glFeedbackBuffer$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glFeedbackBuffer$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glFeedbackBuffer",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$140.glFeedbackBuffer$FUNC, false
    );
    static final FunctionDescriptor glPassThrough$FUNC = FunctionDescriptor.ofVoid(
        C_FLOAT
    );
    static final MethodHandle glPassThrough$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glPassThrough",
        "(F)V",
        constants$140.glPassThrough$FUNC, false
    );
    static final FunctionDescriptor glSelectBuffer$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle glSelectBuffer$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glSelectBuffer",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$140.glSelectBuffer$FUNC, false
    );
    static final FunctionDescriptor glInitNames$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glInitNames$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glInitNames",
        "()V",
        constants$140.glInitNames$FUNC, false
    );
    static final FunctionDescriptor glLoadName$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glLoadName$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glLoadName",
        "(I)V",
        constants$140.glLoadName$FUNC, false
    );
}


