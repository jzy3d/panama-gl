// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$148 {

    static final FunctionDescriptor glCopyConvolutionFilter2D$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glCopyConvolutionFilter2D$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glCopyConvolutionFilter2D",
        "(IIIIII)V",
        constants$148.glCopyConvolutionFilter2D$FUNC, false
    );
    static final FunctionDescriptor glGetConvolutionFilter$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glGetConvolutionFilter$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glGetConvolutionFilter",
        "(IIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$148.glGetConvolutionFilter$FUNC, false
    );
    static final FunctionDescriptor glGetConvolutionParameterfv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glGetConvolutionParameterfv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glGetConvolutionParameterfv",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$148.glGetConvolutionParameterfv$FUNC, false
    );
    static final FunctionDescriptor glGetConvolutionParameteriv$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glGetConvolutionParameteriv$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glGetConvolutionParameteriv",
        "(IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$148.glGetConvolutionParameteriv$FUNC, false
    );
    static final FunctionDescriptor glSeparableFilter2D$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle glSeparableFilter2D$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glSeparableFilter2D",
        "(IIIIIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$148.glSeparableFilter2D$FUNC, false
    );
    static final FunctionDescriptor glGetSeparableFilter$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle glGetSeparableFilter$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glGetSeparableFilter",
        "(IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$148.glGetSeparableFilter$FUNC, false
    );
}


