// Generated by jextract

package opengl.glx.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLREPLACEMENTCODEUSSUNPROC {

    void apply(short x0);
    static MemoryAddress allocate(PFNGLREPLACEMENTCODEUSSUNPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLREPLACEMENTCODEUSSUNPROC.class, fi, constants$998.PFNGLREPLACEMENTCODEUSSUNPROC$FUNC, "(S)V");
    }
    static MemoryAddress allocate(PFNGLREPLACEMENTCODEUSSUNPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLREPLACEMENTCODEUSSUNPROC.class, fi, constants$998.PFNGLREPLACEMENTCODEUSSUNPROC$FUNC, "(S)V", scope);
    }
    static PFNGLREPLACEMENTCODEUSSUNPROC ofAddress(MemoryAddress addr) {
        return (short x0) -> {
            try {
                constants$998.PFNGLREPLACEMENTCODEUSSUNPROC$MH.invokeExact((Addressable)addr, x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


