// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$19 {

    static final FunctionDescriptor XSetWMProtocols$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XSetWMProtocols$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetWMProtocols",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;I)I",
        constants$19.XSetWMProtocols$FUNC, false
    );
    static final FunctionDescriptor XIconifyWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle XIconifyWindow$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XIconifyWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$19.XIconifyWindow$FUNC, false
    );
    static final FunctionDescriptor XWithdrawWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle XWithdrawWindow$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XWithdrawWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$19.XWithdrawWindow$FUNC, false
    );
    static final FunctionDescriptor XGetCommand$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XGetCommand$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetCommand",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$19.XGetCommand$FUNC, false
    );
    static final FunctionDescriptor XGetWMColormapWindows$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle XGetWMColormapWindows$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XGetWMColormapWindows",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$19.XGetWMColormapWindows$FUNC, false
    );
    static final FunctionDescriptor XSetWMColormapWindows$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final MethodHandle XSetWMColormapWindows$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XSetWMColormapWindows",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;I)I",
        constants$19.XSetWMColormapWindows$FUNC, false
    );
}


