// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_DOUBLE;
import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$571 {

    static final FunctionDescriptor PFNGLMAPVERTEXATTRIB2DAPPLEPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_DOUBLE,
        C_DOUBLE,
        C_INT,
        C_INT,
        C_DOUBLE,
        C_DOUBLE,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMAPVERTEXATTRIB2DAPPLEPROC$MH = RuntimeHelper.downcallHandle(
        "(IIDDIIDDIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$571.PFNGLMAPVERTEXATTRIB2DAPPLEPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLMAPVERTEXATTRIB2FAPPLEPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_INT,
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMAPVERTEXATTRIB2FAPPLEPROC$MH = RuntimeHelper.downcallHandle(
        "(IIFFIIFFIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$571.PFNGLMAPVERTEXATTRIB2FAPPLEPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLDRAWBUFFERSATIPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLDRAWBUFFERSATIPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$571.PFNGLDRAWBUFFERSATIPROC$FUNC, false
    );
}


