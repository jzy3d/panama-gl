// Generated by jextract

package opengl.glx.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLVERTEXSTREAM1DATIPROC {

    void apply(int x0, double x1);
    static MemoryAddress allocate(PFNGLVERTEXSTREAM1DATIPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLVERTEXSTREAM1DATIPROC.class, fi, constants$588.PFNGLVERTEXSTREAM1DATIPROC$FUNC, "(ID)V");
    }
    static MemoryAddress allocate(PFNGLVERTEXSTREAM1DATIPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLVERTEXSTREAM1DATIPROC.class, fi, constants$588.PFNGLVERTEXSTREAM1DATIPROC$FUNC, "(ID)V", scope);
    }
    static PFNGLVERTEXSTREAM1DATIPROC ofAddress(MemoryAddress addr) {
        return (int x0, double x1) -> {
            try {
                constants$588.PFNGLVERTEXSTREAM1DATIPROC$MH.invokeExact((Addressable)addr, x0, x1);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


