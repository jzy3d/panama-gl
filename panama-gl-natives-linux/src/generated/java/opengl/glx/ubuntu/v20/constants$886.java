// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$886 {

    static final FunctionDescriptor PFNGLMATRIXLOAD3X3FNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXLOAD3X3FNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$886.PFNGLMATRIXLOAD3X3FNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$886.PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLMATRIXMULT3X2FNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXMULT3X2FNVPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$886.PFNGLMATRIXMULT3X2FNVPROC$FUNC, false
    );
}


