// Generated by jextract

package opengl.glx.ubuntu.v20;

import jdk.incubator.foreign.Addressable;
import jdk.incubator.foreign.MemoryAddress;
import jdk.incubator.foreign.ResourceScope;
public interface PFNGLMAPGRID2XOESPROC {

    void apply(int x0, int x1, int x2, int x3, int x4);
    static MemoryAddress allocate(PFNGLMAPGRID2XOESPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLMAPGRID2XOESPROC.class, fi, constants$520.PFNGLMAPGRID2XOESPROC$FUNC, "(IIIII)V");
    }
    static MemoryAddress allocate(PFNGLMAPGRID2XOESPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLMAPGRID2XOESPROC.class, fi, constants$520.PFNGLMAPGRID2XOESPROC$FUNC, "(IIIII)V", scope);
    }
    static PFNGLMAPGRID2XOESPROC ofAddress(MemoryAddress addr) {
        return (int x0, int x1, int x2, int x3, int x4) -> {
            try {
                constants$520.PFNGLMAPGRID2XOESPROC$MH.invokeExact((Addressable)addr, x0, x1, x2, x3, x4);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


