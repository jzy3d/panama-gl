// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_CHAR;
import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$86 {

    static final FunctionDescriptor glColorMask$FUNC = FunctionDescriptor.ofVoid(
        C_CHAR,
        C_CHAR,
        C_CHAR,
        C_CHAR
    );
    static final MethodHandle glColorMask$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glColorMask",
        "(BBBB)V",
        constants$86.glColorMask$FUNC, false
    );
    static final FunctionDescriptor glAlphaFunc$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_FLOAT
    );
    static final MethodHandle glAlphaFunc$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glAlphaFunc",
        "(IF)V",
        constants$86.glAlphaFunc$FUNC, false
    );
    static final FunctionDescriptor glBlendFunc$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glBlendFunc$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glBlendFunc",
        "(II)V",
        constants$86.glBlendFunc$FUNC, false
    );
    static final FunctionDescriptor glLogicOp$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glLogicOp$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glLogicOp",
        "(I)V",
        constants$86.glLogicOp$FUNC, false
    );
    static final FunctionDescriptor glCullFace$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glCullFace$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glCullFace",
        "(I)V",
        constants$86.glCullFace$FUNC, false
    );
    static final FunctionDescriptor glFrontFace$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glFrontFace$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glFrontFace",
        "(I)V",
        constants$86.glFrontFace$FUNC, false
    );
}


