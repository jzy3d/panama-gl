// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_LONG;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$25 {

    static final FunctionDescriptor XCheckMaskEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle XCheckMaskEvent$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XCheckMaskEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$25.XCheckMaskEvent$FUNC, false
    );
    static final FunctionDescriptor XCheckTypedEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle XCheckTypedEvent$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XCheckTypedEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$25.XCheckTypedEvent$FUNC, false
    );
    static final FunctionDescriptor XCheckTypedWindowEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT,
        C_POINTER
    );
    static final MethodHandle XCheckTypedWindowEvent$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XCheckTypedWindowEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;JILjdk/incubator/foreign/MemoryAddress;)I",
        constants$25.XCheckTypedWindowEvent$FUNC, false
    );
    static final FunctionDescriptor XCheckWindowEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle XCheckWindowEvent$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XCheckWindowEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)I",
        constants$25.XCheckWindowEvent$FUNC, false
    );
    static final FunctionDescriptor XCirculateSubwindows$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle XCirculateSubwindows$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XCirculateSubwindows",
        "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$25.XCirculateSubwindows$FUNC, false
    );
    static final FunctionDescriptor XCirculateSubwindowsDown$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle XCirculateSubwindowsDown$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "XCirculateSubwindowsDown",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$25.XCirculateSubwindowsDown$FUNC, false
    );
}


