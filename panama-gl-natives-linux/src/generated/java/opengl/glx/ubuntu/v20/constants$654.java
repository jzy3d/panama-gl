// Generated by jextract

package opengl.glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$654 {

    static final FunctionDescriptor PFNGLMATRIXLOADTRANSPOSEFEXTPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXLOADTRANSPOSEFEXTPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$654.PFNGLMATRIXLOADTRANSPOSEFEXTPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLMATRIXLOADTRANSPOSEDEXTPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXLOADTRANSPOSEDEXTPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$654.PFNGLMATRIXLOADTRANSPOSEDEXTPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLMATRIXMULTTRANSPOSEFEXTPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLMATRIXMULTTRANSPOSEFEXTPROC$MH = RuntimeHelper.downcallHandle(
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$654.PFNGLMATRIXMULTTRANSPOSEFEXTPROC$FUNC, false
    );
}


