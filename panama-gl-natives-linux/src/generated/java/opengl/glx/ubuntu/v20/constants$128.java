// Generated by jextract

package opengl.glx.ubuntu.v20;

import static jdk.incubator.foreign.CLinker.C_FLOAT;
import static jdk.incubator.foreign.CLinker.C_INT;
import static jdk.incubator.foreign.CLinker.C_POINTER;
import java.lang.invoke.MethodHandle;
import jdk.incubator.foreign.FunctionDescriptor;
class constants$128 {

    static final FunctionDescriptor glBitmap$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_FLOAT,
        C_FLOAT,
        C_POINTER
    );
    static final MethodHandle glBitmap$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glBitmap",
        "(IIFFFFLjdk/incubator/foreign/MemoryAddress;)V",
        constants$128.glBitmap$FUNC, false
    );
    static final FunctionDescriptor glReadPixels$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glReadPixels$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glReadPixels",
        "(IIIIIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$128.glReadPixels$FUNC, false
    );
    static final FunctionDescriptor glDrawPixels$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle glDrawPixels$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glDrawPixels",
        "(IIIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$128.glDrawPixels$FUNC, false
    );
    static final FunctionDescriptor glCopyPixels$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glCopyPixels$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glCopyPixels",
        "(IIIII)V",
        constants$128.glCopyPixels$FUNC, false
    );
    static final FunctionDescriptor glStencilFunc$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle glStencilFunc$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glStencilFunc",
        "(III)V",
        constants$128.glStencilFunc$FUNC, false
    );
    static final FunctionDescriptor glStencilMask$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle glStencilMask$MH = RuntimeHelper.downcallHandle(
        glx_h.LIBRARIES, "glStencilMask",
        "(I)V",
        constants$128.glStencilMask$FUNC, false
    );
}


