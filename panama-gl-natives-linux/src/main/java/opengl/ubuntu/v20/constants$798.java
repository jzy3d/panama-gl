// Generated by jextract

package opengl.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$798 {

    static final FunctionDescriptor PFNGLGETPATHMETRICSNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLGETPATHMETRICSNVPROC$MH = RuntimeHelper.downcallHandle(
        "(IIILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$798.PFNGLGETPATHMETRICSNVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLGETPATHMETRICRANGENVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLGETPATHMETRICRANGENVPROC$MH = RuntimeHelper.downcallHandle(
        "(IIIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$798.PFNGLGETPATHMETRICRANGENVPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLGETPATHSPACINGNVPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_FLOAT,
        C_FLOAT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLGETPATHSPACINGNVPROC$MH = RuntimeHelper.downcallHandle(
        "(IIILjdk/incubator/foreign/MemoryAddress;IFFILjdk/incubator/foreign/MemoryAddress;)V",
        constants$798.PFNGLGETPATHSPACINGNVPROC$FUNC, false
    );
}


