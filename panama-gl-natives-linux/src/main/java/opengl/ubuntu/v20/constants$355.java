// Generated by jextract

package opengl.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$355 {

    static final FunctionDescriptor PFNGLGETNCONVOLUTIONFILTERARBPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLGETNCONVOLUTIONFILTERARBPROC$MH = RuntimeHelper.downcallHandle(
        "(IIIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$355.PFNGLGETNCONVOLUTIONFILTERARBPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLGETNSEPARABLEFILTERARBPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PFNGLGETNSEPARABLEFILTERARBPROC$MH = RuntimeHelper.downcallHandle(
        "(IIIILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$355.PFNGLGETNSEPARABLEFILTERARBPROC$FUNC, false
    );
    static final FunctionDescriptor PFNGLGETNHISTOGRAMARBPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_CHAR,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle PFNGLGETNHISTOGRAMARBPROC$MH = RuntimeHelper.downcallHandle(
        "(IBIIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$355.PFNGLGETNHISTOGRAMARBPROC$FUNC, false
    );
}


